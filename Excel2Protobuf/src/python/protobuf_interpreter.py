import getopt
import os
import sys

from Utils import logError, get_filelist

temp_dir = "./_temp"
temp_autogenerated_scripts_path = "%s/autogenerated_scripts" % temp_dir

def save(proto_file_name,out_protos_path, csharp_out, server_out, language):
    try:
        # protoc compile C# src file
        csharp_out_final = csharp_out if csharp_out is not None else temp_autogenerated_scripts_path
        command = "protoc -I %s --csharp_out=%s %s" \
                  % (out_protos_path, csharp_out_final, proto_file_name)
        os.system(command)
        # print("export auto-generated C# script to : %s" % csharp_out_final)
        # protoc compile Cpp src file
        server_out_final = server_out if server_out is not None else temp_autogenerated_scripts_path
        command = "protoc -I %s --%s_out=%s %s" \
                  % (out_protos_path, language, server_out_final, proto_file_name)
        # print("export auto-generated C++ script to : %s" % server_out_final)
        os.system(command)
    except Exception as e:
        print("protoc failed!")
        print(e)
        raise

def main():
    print(os.getcwd())
    protobuf_dir = None
    csharp_out = None
    server_out = None
    language = None

    try:
        opts, args = getopt.getopt(sys.argv[1:], "i:c:s:l:-v", [
            "input_path=", "csharp_out=", "server_out=", "language="])
        for o, a in opts:
            if o in ("-i", "--input_path"):
                protobuf_dir = a
            elif o in ("-c", "--csharp_out"):
                csharp_out = a
            elif o in ("-s", "--server_out"):
                server_out = a
            elif o in ("-l", "--language"):
                language = a
    except Exception as e:
        logError("argv error:%s" % e)

    # protobuf_dir = "D:/Working/DeerGameFramework/trunk/xConfig/MarkConfig/proto"
    # csharp_out = "D:/Working/DeerGameFramework/trunk/xConfig/MarkConfig/client/scripts"
    # server_out = "D:/Working/DeerGameFramework/trunk/xConfig/MarkConfig/server/class"
    # language = "java"

    if protobuf_dir is None:
        logError("-i --input_path protos source folder not set properly")
    # if data_out is None:
    print("")
    print("proto Path:" + protobuf_dir)
    print("csharp_out Path:" + csharp_out)
    print("server_out Path:" + server_out)
    print("server language:" + language)
    print("")

    listfile = []
    get_filelist(protobuf_dir,listfile)
    for filepath in listfile:
        tempfile = os.path.basename(filepath)
        if os.path.splitext(tempfile)[1] == ".proto":
            (proto_file_dir, file_name_withext) = os.path.split(filepath)
            temp_file_dir = proto_file_dir.replace('\\','/')
            save(file_name_withext,temp_file_dir,csharp_out,server_out,language)

if __name__ == '__main__':
    main()