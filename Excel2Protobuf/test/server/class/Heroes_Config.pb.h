// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Heroes_Config.proto

#ifndef PROTOBUF_INCLUDED_Heroes_5fConfig_2eproto
#define PROTOBUF_INCLUDED_Heroes_5fConfig_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_Heroes_5fConfig_2eproto 

namespace protobuf_Heroes_5fConfig_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[21];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_Heroes_5fConfig_2eproto
namespace ConfigData {
class Appearance_Config;
class Appearance_ConfigDefaultTypeInternal;
extern Appearance_ConfigDefaultTypeInternal _Appearance_Config_default_instance_;
class Heroes_Config;
class Heroes_ConfigDefaultTypeInternal;
extern Heroes_ConfigDefaultTypeInternal _Heroes_Config_default_instance_;
class Heroes_Config_Data;
class Heroes_Config_DataDefaultTypeInternal;
extern Heroes_Config_DataDefaultTypeInternal _Heroes_Config_Data_default_instance_;
class Heroes_Config_Data_AppearanceConfigItemsEntry_DoNotUse;
class Heroes_Config_Data_AppearanceConfigItemsEntry_DoNotUseDefaultTypeInternal;
extern Heroes_Config_Data_AppearanceConfigItemsEntry_DoNotUseDefaultTypeInternal _Heroes_Config_Data_AppearanceConfigItemsEntry_DoNotUse_default_instance_;
class Heroes_Config_Data_HeroesConfigItemsEntry_DoNotUse;
class Heroes_Config_Data_HeroesConfigItemsEntry_DoNotUseDefaultTypeInternal;
extern Heroes_Config_Data_HeroesConfigItemsEntry_DoNotUseDefaultTypeInternal _Heroes_Config_Data_HeroesConfigItemsEntry_DoNotUse_default_instance_;
class Heroes_Config_Data_HeroesDataConfigItemsEntry_DoNotUse;
class Heroes_Config_Data_HeroesDataConfigItemsEntry_DoNotUseDefaultTypeInternal;
extern Heroes_Config_Data_HeroesDataConfigItemsEntry_DoNotUseDefaultTypeInternal _Heroes_Config_Data_HeroesDataConfigItemsEntry_DoNotUse_default_instance_;
class Heroes_Config_Data_HeroesRankConfigItemsEntry_DoNotUse;
class Heroes_Config_Data_HeroesRankConfigItemsEntry_DoNotUseDefaultTypeInternal;
extern Heroes_Config_Data_HeroesRankConfigItemsEntry_DoNotUseDefaultTypeInternal _Heroes_Config_Data_HeroesRankConfigItemsEntry_DoNotUse_default_instance_;
class Heroes_Config_Data_HeroesSkillConfigItemsEntry_DoNotUse;
class Heroes_Config_Data_HeroesSkillConfigItemsEntry_DoNotUseDefaultTypeInternal;
extern Heroes_Config_Data_HeroesSkillConfigItemsEntry_DoNotUseDefaultTypeInternal _Heroes_Config_Data_HeroesSkillConfigItemsEntry_DoNotUse_default_instance_;
class Heroes_Config_Data_HeroesTypeConfigItemsEntry_DoNotUse;
class Heroes_Config_Data_HeroesTypeConfigItemsEntry_DoNotUseDefaultTypeInternal;
extern Heroes_Config_Data_HeroesTypeConfigItemsEntry_DoNotUseDefaultTypeInternal _Heroes_Config_Data_HeroesTypeConfigItemsEntry_DoNotUse_default_instance_;
class Heroes_Config_Data_HerosWordsConfigItemsEntry_DoNotUse;
class Heroes_Config_Data_HerosWordsConfigItemsEntry_DoNotUseDefaultTypeInternal;
extern Heroes_Config_Data_HerosWordsConfigItemsEntry_DoNotUseDefaultTypeInternal _Heroes_Config_Data_HerosWordsConfigItemsEntry_DoNotUse_default_instance_;
class Heroes_Config_Data_SoloHeroConfigItemsEntry_DoNotUse;
class Heroes_Config_Data_SoloHeroConfigItemsEntry_DoNotUseDefaultTypeInternal;
extern Heroes_Config_Data_SoloHeroConfigItemsEntry_DoNotUseDefaultTypeInternal _Heroes_Config_Data_SoloHeroConfigItemsEntry_DoNotUse_default_instance_;
class Heroes_Config_Data_SoloHeroesDataConfigItemsEntry_DoNotUse;
class Heroes_Config_Data_SoloHeroesDataConfigItemsEntry_DoNotUseDefaultTypeInternal;
extern Heroes_Config_Data_SoloHeroesDataConfigItemsEntry_DoNotUseDefaultTypeInternal _Heroes_Config_Data_SoloHeroesDataConfigItemsEntry_DoNotUse_default_instance_;
class Heroes_Config_Data_UIHeroesConfigItemsEntry_DoNotUse;
class Heroes_Config_Data_UIHeroesConfigItemsEntry_DoNotUseDefaultTypeInternal;
extern Heroes_Config_Data_UIHeroesConfigItemsEntry_DoNotUseDefaultTypeInternal _Heroes_Config_Data_UIHeroesConfigItemsEntry_DoNotUse_default_instance_;
class Heroes_Data_Config;
class Heroes_Data_ConfigDefaultTypeInternal;
extern Heroes_Data_ConfigDefaultTypeInternal _Heroes_Data_Config_default_instance_;
class Heroes_Rank_Config;
class Heroes_Rank_ConfigDefaultTypeInternal;
extern Heroes_Rank_ConfigDefaultTypeInternal _Heroes_Rank_Config_default_instance_;
class Heroes_Skill_Config;
class Heroes_Skill_ConfigDefaultTypeInternal;
extern Heroes_Skill_ConfigDefaultTypeInternal _Heroes_Skill_Config_default_instance_;
class Heroes_Type_Config;
class Heroes_Type_ConfigDefaultTypeInternal;
extern Heroes_Type_ConfigDefaultTypeInternal _Heroes_Type_Config_default_instance_;
class Heros_Words_Config;
class Heros_Words_ConfigDefaultTypeInternal;
extern Heros_Words_ConfigDefaultTypeInternal _Heros_Words_Config_default_instance_;
class Solo_Hero_Config;
class Solo_Hero_ConfigDefaultTypeInternal;
extern Solo_Hero_ConfigDefaultTypeInternal _Solo_Hero_Config_default_instance_;
class Solo_Heroes_Data_Config;
class Solo_Heroes_Data_ConfigDefaultTypeInternal;
extern Solo_Heroes_Data_ConfigDefaultTypeInternal _Solo_Heroes_Data_Config_default_instance_;
class UI_Heroes_Config;
class UI_Heroes_ConfigDefaultTypeInternal;
extern UI_Heroes_ConfigDefaultTypeInternal _UI_Heroes_Config_default_instance_;
}  // namespace ConfigData
namespace google {
namespace protobuf {
template<> ::ConfigData::Appearance_Config* Arena::CreateMaybeMessage<::ConfigData::Appearance_Config>(Arena*);
template<> ::ConfigData::Heroes_Config* Arena::CreateMaybeMessage<::ConfigData::Heroes_Config>(Arena*);
template<> ::ConfigData::Heroes_Config_Data* Arena::CreateMaybeMessage<::ConfigData::Heroes_Config_Data>(Arena*);
template<> ::ConfigData::Heroes_Config_Data_AppearanceConfigItemsEntry_DoNotUse* Arena::CreateMaybeMessage<::ConfigData::Heroes_Config_Data_AppearanceConfigItemsEntry_DoNotUse>(Arena*);
template<> ::ConfigData::Heroes_Config_Data_HeroesConfigItemsEntry_DoNotUse* Arena::CreateMaybeMessage<::ConfigData::Heroes_Config_Data_HeroesConfigItemsEntry_DoNotUse>(Arena*);
template<> ::ConfigData::Heroes_Config_Data_HeroesDataConfigItemsEntry_DoNotUse* Arena::CreateMaybeMessage<::ConfigData::Heroes_Config_Data_HeroesDataConfigItemsEntry_DoNotUse>(Arena*);
template<> ::ConfigData::Heroes_Config_Data_HeroesRankConfigItemsEntry_DoNotUse* Arena::CreateMaybeMessage<::ConfigData::Heroes_Config_Data_HeroesRankConfigItemsEntry_DoNotUse>(Arena*);
template<> ::ConfigData::Heroes_Config_Data_HeroesSkillConfigItemsEntry_DoNotUse* Arena::CreateMaybeMessage<::ConfigData::Heroes_Config_Data_HeroesSkillConfigItemsEntry_DoNotUse>(Arena*);
template<> ::ConfigData::Heroes_Config_Data_HeroesTypeConfigItemsEntry_DoNotUse* Arena::CreateMaybeMessage<::ConfigData::Heroes_Config_Data_HeroesTypeConfigItemsEntry_DoNotUse>(Arena*);
template<> ::ConfigData::Heroes_Config_Data_HerosWordsConfigItemsEntry_DoNotUse* Arena::CreateMaybeMessage<::ConfigData::Heroes_Config_Data_HerosWordsConfigItemsEntry_DoNotUse>(Arena*);
template<> ::ConfigData::Heroes_Config_Data_SoloHeroConfigItemsEntry_DoNotUse* Arena::CreateMaybeMessage<::ConfigData::Heroes_Config_Data_SoloHeroConfigItemsEntry_DoNotUse>(Arena*);
template<> ::ConfigData::Heroes_Config_Data_SoloHeroesDataConfigItemsEntry_DoNotUse* Arena::CreateMaybeMessage<::ConfigData::Heroes_Config_Data_SoloHeroesDataConfigItemsEntry_DoNotUse>(Arena*);
template<> ::ConfigData::Heroes_Config_Data_UIHeroesConfigItemsEntry_DoNotUse* Arena::CreateMaybeMessage<::ConfigData::Heroes_Config_Data_UIHeroesConfigItemsEntry_DoNotUse>(Arena*);
template<> ::ConfigData::Heroes_Data_Config* Arena::CreateMaybeMessage<::ConfigData::Heroes_Data_Config>(Arena*);
template<> ::ConfigData::Heroes_Rank_Config* Arena::CreateMaybeMessage<::ConfigData::Heroes_Rank_Config>(Arena*);
template<> ::ConfigData::Heroes_Skill_Config* Arena::CreateMaybeMessage<::ConfigData::Heroes_Skill_Config>(Arena*);
template<> ::ConfigData::Heroes_Type_Config* Arena::CreateMaybeMessage<::ConfigData::Heroes_Type_Config>(Arena*);
template<> ::ConfigData::Heros_Words_Config* Arena::CreateMaybeMessage<::ConfigData::Heros_Words_Config>(Arena*);
template<> ::ConfigData::Solo_Hero_Config* Arena::CreateMaybeMessage<::ConfigData::Solo_Hero_Config>(Arena*);
template<> ::ConfigData::Solo_Heroes_Data_Config* Arena::CreateMaybeMessage<::ConfigData::Solo_Heroes_Data_Config>(Arena*);
template<> ::ConfigData::UI_Heroes_Config* Arena::CreateMaybeMessage<::ConfigData::UI_Heroes_Config>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace ConfigData {

// ===================================================================

class Appearance_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ConfigData.Appearance_Config) */ {
 public:
  Appearance_Config();
  virtual ~Appearance_Config();

  Appearance_Config(const Appearance_Config& from);

  inline Appearance_Config& operator=(const Appearance_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Appearance_Config(Appearance_Config&& from) noexcept
    : Appearance_Config() {
    *this = ::std::move(from);
  }

  inline Appearance_Config& operator=(Appearance_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Appearance_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Appearance_Config* internal_default_instance() {
    return reinterpret_cast<const Appearance_Config*>(
               &_Appearance_Config_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Appearance_Config* other);
  friend void swap(Appearance_Config& a, Appearance_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Appearance_Config* New() const final {
    return CreateMaybeMessage<Appearance_Config>(NULL);
  }

  Appearance_Config* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Appearance_Config>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Appearance_Config& from);
  void MergeFrom(const Appearance_Config& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Appearance_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string folder_name = 2;
  void clear_folder_name();
  static const int kFolderNameFieldNumber = 2;
  const ::std::string& folder_name() const;
  void set_folder_name(const ::std::string& value);
  #if LANG_CXX11
  void set_folder_name(::std::string&& value);
  #endif
  void set_folder_name(const char* value);
  void set_folder_name(const char* value, size_t size);
  ::std::string* mutable_folder_name();
  ::std::string* release_folder_name();
  void set_allocated_folder_name(::std::string* folder_name);

  // string mesh = 3;
  void clear_mesh();
  static const int kMeshFieldNumber = 3;
  const ::std::string& mesh() const;
  void set_mesh(const ::std::string& value);
  #if LANG_CXX11
  void set_mesh(::std::string&& value);
  #endif
  void set_mesh(const char* value);
  void set_mesh(const char* value, size_t size);
  ::std::string* mutable_mesh();
  ::std::string* release_mesh();
  void set_allocated_mesh(::std::string* mesh);

  // string texture = 4;
  void clear_texture();
  static const int kTextureFieldNumber = 4;
  const ::std::string& texture() const;
  void set_texture(const ::std::string& value);
  #if LANG_CXX11
  void set_texture(::std::string&& value);
  #endif
  void set_texture(const char* value);
  void set_texture(const char* value, size_t size);
  ::std::string* mutable_texture();
  ::std::string* release_texture();
  void set_allocated_texture(::std::string* texture);

  // string atk_sound = 9;
  void clear_atk_sound();
  static const int kAtkSoundFieldNumber = 9;
  const ::std::string& atk_sound() const;
  void set_atk_sound(const ::std::string& value);
  #if LANG_CXX11
  void set_atk_sound(::std::string&& value);
  #endif
  void set_atk_sound(const char* value);
  void set_atk_sound(const char* value, size_t size);
  ::std::string* mutable_atk_sound();
  ::std::string* release_atk_sound();
  void set_allocated_atk_sound(::std::string* atk_sound);

  // string range_sound = 10;
  void clear_range_sound();
  static const int kRangeSoundFieldNumber = 10;
  const ::std::string& range_sound() const;
  void set_range_sound(const ::std::string& value);
  #if LANG_CXX11
  void set_range_sound(::std::string&& value);
  #endif
  void set_range_sound(const char* value);
  void set_range_sound(const char* value, size_t size);
  ::std::string* mutable_range_sound();
  ::std::string* release_range_sound();
  void set_allocated_range_sound(::std::string* range_sound);

  // string range_hit_sound = 11;
  void clear_range_hit_sound();
  static const int kRangeHitSoundFieldNumber = 11;
  const ::std::string& range_hit_sound() const;
  void set_range_hit_sound(const ::std::string& value);
  #if LANG_CXX11
  void set_range_hit_sound(::std::string&& value);
  #endif
  void set_range_hit_sound(const char* value);
  void set_range_hit_sound(const char* value, size_t size);
  ::std::string* mutable_range_hit_sound();
  ::std::string* release_range_hit_sound();
  void set_allocated_range_hit_sound(::std::string* range_hit_sound);

  // string charge_sound = 12;
  void clear_charge_sound();
  static const int kChargeSoundFieldNumber = 12;
  const ::std::string& charge_sound() const;
  void set_charge_sound(const ::std::string& value);
  #if LANG_CXX11
  void set_charge_sound(::std::string&& value);
  #endif
  void set_charge_sound(const char* value);
  void set_charge_sound(const char* value, size_t size);
  ::std::string* mutable_charge_sound();
  ::std::string* release_charge_sound();
  void set_allocated_charge_sound(::std::string* charge_sound);

  // string death_effect = 13;
  void clear_death_effect();
  static const int kDeathEffectFieldNumber = 13;
  const ::std::string& death_effect() const;
  void set_death_effect(const ::std::string& value);
  #if LANG_CXX11
  void set_death_effect(::std::string&& value);
  #endif
  void set_death_effect(const char* value);
  void set_death_effect(const char* value, size_t size);
  ::std::string* mutable_death_effect();
  ::std::string* release_death_effect();
  void set_allocated_death_effect(::std::string* death_effect);

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // uint32 anim_id = 5;
  void clear_anim_id();
  static const int kAnimIdFieldNumber = 5;
  ::google::protobuf::uint32 anim_id() const;
  void set_anim_id(::google::protobuf::uint32 value);

  // bool bake_mesh = 6;
  void clear_bake_mesh();
  static const int kBakeMeshFieldNumber = 6;
  bool bake_mesh() const;
  void set_bake_mesh(bool value);

  // float scale_map = 7;
  void clear_scale_map();
  static const int kScaleMapFieldNumber = 7;
  float scale_map() const;
  void set_scale_map(float value);

  // float scale_loading = 8;
  void clear_scale_loading();
  static const int kScaleLoadingFieldNumber = 8;
  float scale_loading() const;
  void set_scale_loading(float value);

  // @@protoc_insertion_point(class_scope:ConfigData.Appearance_Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr folder_name_;
  ::google::protobuf::internal::ArenaStringPtr mesh_;
  ::google::protobuf::internal::ArenaStringPtr texture_;
  ::google::protobuf::internal::ArenaStringPtr atk_sound_;
  ::google::protobuf::internal::ArenaStringPtr range_sound_;
  ::google::protobuf::internal::ArenaStringPtr range_hit_sound_;
  ::google::protobuf::internal::ArenaStringPtr charge_sound_;
  ::google::protobuf::internal::ArenaStringPtr death_effect_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 anim_id_;
  bool bake_mesh_;
  float scale_map_;
  float scale_loading_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Heroes_5fConfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Heroes_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ConfigData.Heroes_Config) */ {
 public:
  Heroes_Config();
  virtual ~Heroes_Config();

  Heroes_Config(const Heroes_Config& from);

  inline Heroes_Config& operator=(const Heroes_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Heroes_Config(Heroes_Config&& from) noexcept
    : Heroes_Config() {
    *this = ::std::move(from);
  }

  inline Heroes_Config& operator=(Heroes_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Heroes_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Heroes_Config* internal_default_instance() {
    return reinterpret_cast<const Heroes_Config*>(
               &_Heroes_Config_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Heroes_Config* other);
  friend void swap(Heroes_Config& a, Heroes_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Heroes_Config* New() const final {
    return CreateMaybeMessage<Heroes_Config>(NULL);
  }

  Heroes_Config* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Heroes_Config>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Heroes_Config& from);
  void MergeFrom(const Heroes_Config& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Heroes_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 debug_talent = 7;
  int debug_talent_size() const;
  void clear_debug_talent();
  static const int kDebugTalentFieldNumber = 7;
  ::google::protobuf::uint32 debug_talent(int index) const;
  void set_debug_talent(int index, ::google::protobuf::uint32 value);
  void add_debug_talent(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      debug_talent() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_debug_talent();

  // repeated uint32 skills = 17;
  int skills_size() const;
  void clear_skills();
  static const int kSkillsFieldNumber = 17;
  ::google::protobuf::uint32 skills(int index) const;
  void set_skills(int index, ::google::protobuf::uint32 value);
  void add_skills(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      skills() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_skills();

  // repeated float physic_radius = 19;
  int physic_radius_size() const;
  void clear_physic_radius();
  static const int kPhysicRadiusFieldNumber = 19;
  float physic_radius(int index) const;
  void set_physic_radius(int index, float value);
  void add_physic_radius(float value);
  const ::google::protobuf::RepeatedField< float >&
      physic_radius() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_physic_radius();

  // repeated float shadow_scale = 21;
  int shadow_scale_size() const;
  void clear_shadow_scale();
  static const int kShadowScaleFieldNumber = 21;
  float shadow_scale(int index) const;
  void set_shadow_scale(int index, float value);
  void add_shadow_scale(float value);
  const ::google::protobuf::RepeatedField< float >&
      shadow_scale() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_shadow_scale();

  // repeated string melee_hit_effect = 27;
  int melee_hit_effect_size() const;
  void clear_melee_hit_effect();
  static const int kMeleeHitEffectFieldNumber = 27;
  const ::std::string& melee_hit_effect(int index) const;
  ::std::string* mutable_melee_hit_effect(int index);
  void set_melee_hit_effect(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_melee_hit_effect(int index, ::std::string&& value);
  #endif
  void set_melee_hit_effect(int index, const char* value);
  void set_melee_hit_effect(int index, const char* value, size_t size);
  ::std::string* add_melee_hit_effect();
  void add_melee_hit_effect(const ::std::string& value);
  #if LANG_CXX11
  void add_melee_hit_effect(::std::string&& value);
  #endif
  void add_melee_hit_effect(const char* value);
  void add_melee_hit_effect(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& melee_hit_effect() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_melee_hit_effect();

  // repeated string range_hit_effect = 31;
  int range_hit_effect_size() const;
  void clear_range_hit_effect();
  static const int kRangeHitEffectFieldNumber = 31;
  const ::std::string& range_hit_effect(int index) const;
  ::std::string* mutable_range_hit_effect(int index);
  void set_range_hit_effect(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_range_hit_effect(int index, ::std::string&& value);
  #endif
  void set_range_hit_effect(int index, const char* value);
  void set_range_hit_effect(int index, const char* value, size_t size);
  ::std::string* add_range_hit_effect();
  void add_range_hit_effect(const ::std::string& value);
  #if LANG_CXX11
  void add_range_hit_effect(::std::string&& value);
  #endif
  void add_range_hit_effect(const char* value);
  void add_range_hit_effect(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& range_hit_effect() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_range_hit_effect();

  // string desc = 2;
  void clear_desc();
  static const int kDescFieldNumber = 2;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_desc(::std::string&& value);
  #endif
  void set_desc(const char* value);
  void set_desc(const char* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // string hero_name_global = 8;
  void clear_hero_name_global();
  static const int kHeroNameGlobalFieldNumber = 8;
  const ::std::string& hero_name_global() const;
  void set_hero_name_global(const ::std::string& value);
  #if LANG_CXX11
  void set_hero_name_global(::std::string&& value);
  #endif
  void set_hero_name_global(const char* value);
  void set_hero_name_global(const char* value, size_t size);
  ::std::string* mutable_hero_name_global();
  ::std::string* release_hero_name_global();
  void set_allocated_hero_name_global(::std::string* hero_name_global);

  // string icon_formation = 9;
  void clear_icon_formation();
  static const int kIconFormationFieldNumber = 9;
  const ::std::string& icon_formation() const;
  void set_icon_formation(const ::std::string& value);
  #if LANG_CXX11
  void set_icon_formation(::std::string&& value);
  #endif
  void set_icon_formation(const char* value);
  void set_icon_formation(const char* value, size_t size);
  ::std::string* mutable_icon_formation();
  ::std::string* release_icon_formation();
  void set_allocated_icon_formation(::std::string* icon_formation);

  // string icon_flag = 10;
  void clear_icon_flag();
  static const int kIconFlagFieldNumber = 10;
  const ::std::string& icon_flag() const;
  void set_icon_flag(const ::std::string& value);
  #if LANG_CXX11
  void set_icon_flag(::std::string&& value);
  #endif
  void set_icon_flag(const char* value);
  void set_icon_flag(const char* value, size_t size);
  ::std::string* mutable_icon_flag();
  ::std::string* release_icon_flag();
  void set_allocated_icon_flag(::std::string* icon_flag);

  // string hero_sound_short = 23;
  void clear_hero_sound_short();
  static const int kHeroSoundShortFieldNumber = 23;
  const ::std::string& hero_sound_short() const;
  void set_hero_sound_short(const ::std::string& value);
  #if LANG_CXX11
  void set_hero_sound_short(::std::string&& value);
  #endif
  void set_hero_sound_short(const char* value);
  void set_hero_sound_short(const char* value, size_t size);
  ::std::string* mutable_hero_sound_short();
  ::std::string* release_hero_sound_short();
  void set_allocated_hero_sound_short(::std::string* hero_sound_short);

  // string charge_anim_effect = 33;
  void clear_charge_anim_effect();
  static const int kChargeAnimEffectFieldNumber = 33;
  const ::std::string& charge_anim_effect() const;
  void set_charge_anim_effect(const ::std::string& value);
  #if LANG_CXX11
  void set_charge_anim_effect(::std::string&& value);
  #endif
  void set_charge_anim_effect(const char* value);
  void set_charge_anim_effect(const char* value, size_t size);
  ::std::string* mutable_charge_anim_effect();
  ::std::string* release_charge_anim_effect();
  void set_allocated_charge_anim_effect(::std::string* charge_anim_effect);

  // string charge_anim_effect_hit = 34;
  void clear_charge_anim_effect_hit();
  static const int kChargeAnimEffectHitFieldNumber = 34;
  const ::std::string& charge_anim_effect_hit() const;
  void set_charge_anim_effect_hit(const ::std::string& value);
  #if LANG_CXX11
  void set_charge_anim_effect_hit(::std::string&& value);
  #endif
  void set_charge_anim_effect_hit(const char* value);
  void set_charge_anim_effect_hit(const char* value, size_t size);
  ::std::string* mutable_charge_anim_effect_hit();
  ::std::string* release_charge_anim_effect_hit();
  void set_allocated_charge_anim_effect_hit(::std::string* charge_anim_effect_hit);

  // string hero_deviation = 39;
  void clear_hero_deviation();
  static const int kHeroDeviationFieldNumber = 39;
  const ::std::string& hero_deviation() const;
  void set_hero_deviation(const ::std::string& value);
  #if LANG_CXX11
  void set_hero_deviation(::std::string&& value);
  #endif
  void set_hero_deviation(const char* value);
  void set_hero_deviation(const char* value, size_t size);
  ::std::string* mutable_hero_deviation();
  ::std::string* release_hero_deviation();
  void set_allocated_hero_deviation(::std::string* hero_deviation);

  // string hero_profile = 40;
  void clear_hero_profile();
  static const int kHeroProfileFieldNumber = 40;
  const ::std::string& hero_profile() const;
  void set_hero_profile(const ::std::string& value);
  #if LANG_CXX11
  void set_hero_profile(::std::string&& value);
  #endif
  void set_hero_profile(const char* value);
  void set_hero_profile(const char* value, size_t size);
  ::std::string* mutable_hero_profile();
  ::std::string* release_hero_profile();
  void set_allocated_hero_profile(::std::string* hero_profile);

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // uint32 debug_level = 3;
  void clear_debug_level();
  static const int kDebugLevelFieldNumber = 3;
  ::google::protobuf::uint32 debug_level() const;
  void set_debug_level(::google::protobuf::uint32 value);

  // uint32 debug_floor = 4;
  void clear_debug_floor();
  static const int kDebugFloorFieldNumber = 4;
  ::google::protobuf::uint32 debug_floor() const;
  void set_debug_floor(::google::protobuf::uint32 value);

  // uint32 debug_pawn_count_level = 5;
  void clear_debug_pawn_count_level();
  static const int kDebugPawnCountLevelFieldNumber = 5;
  ::google::protobuf::uint32 debug_pawn_count_level() const;
  void set_debug_pawn_count_level(::google::protobuf::uint32 value);

  // uint32 debug_rank = 6;
  void clear_debug_rank();
  static const int kDebugRankFieldNumber = 6;
  ::google::protobuf::uint32 debug_rank() const;
  void set_debug_rank(::google::protobuf::uint32 value);

  // int32 team_banner_height = 11;
  void clear_team_banner_height();
  static const int kTeamBannerHeightFieldNumber = 11;
  ::google::protobuf::int32 team_banner_height() const;
  void set_team_banner_height(::google::protobuf::int32 value);

  // uint32 classify = 12;
  void clear_classify();
  static const int kClassifyFieldNumber = 12;
  ::google::protobuf::uint32 classify() const;
  void set_classify(::google::protobuf::uint32 value);

  // uint32 hero_type = 13;
  void clear_hero_type();
  static const int kHeroTypeFieldNumber = 13;
  ::google::protobuf::uint32 hero_type() const;
  void set_hero_type(::google::protobuf::uint32 value);

  // uint32 quality = 14;
  void clear_quality();
  static const int kQualityFieldNumber = 14;
  ::google::protobuf::uint32 quality() const;
  void set_quality(::google::protobuf::uint32 value);

  // uint32 projectile_id = 15;
  void clear_projectile_id();
  static const int kProjectileIdFieldNumber = 15;
  ::google::protobuf::uint32 projectile_id() const;
  void set_projectile_id(::google::protobuf::uint32 value);

  // uint32 teamloigic_id = 16;
  void clear_teamloigic_id();
  static const int kTeamloigicIdFieldNumber = 16;
  ::google::protobuf::uint32 teamloigic_id() const;
  void set_teamloigic_id(::google::protobuf::uint32 value);

  // float mass = 18;
  void clear_mass();
  static const int kMassFieldNumber = 18;
  float mass() const;
  void set_mass(float value);

  // float scale = 20;
  void clear_scale();
  static const int kScaleFieldNumber = 20;
  float scale() const;
  void set_scale(float value);

  // float melee_dps = 24;
  void clear_melee_dps();
  static const int kMeleeDpsFieldNumber = 24;
  float melee_dps() const;
  void set_melee_dps(float value);

  // float melee_speed = 25;
  void clear_melee_speed();
  static const int kMeleeSpeedFieldNumber = 25;
  float melee_speed() const;
  void set_melee_speed(float value);

  // float melee_radius = 26;
  void clear_melee_radius();
  static const int kMeleeRadiusFieldNumber = 26;
  float melee_radius() const;
  void set_melee_radius(float value);

  // float range_dps = 28;
  void clear_range_dps();
  static const int kRangeDpsFieldNumber = 28;
  float range_dps() const;
  void set_range_dps(float value);

  // float range_speed = 29;
  void clear_range_speed();
  static const int kRangeSpeedFieldNumber = 29;
  float range_speed() const;
  void set_range_speed(float value);

  // bool can_capture = 22;
  void clear_can_capture();
  static const int kCanCaptureFieldNumber = 22;
  bool can_capture() const;
  void set_can_capture(bool value);

  // bool full_talent = 37;
  void clear_full_talent();
  static const int kFullTalentFieldNumber = 37;
  bool full_talent() const;
  void set_full_talent(bool value);

  // float range_radius = 30;
  void clear_range_radius();
  static const int kRangeRadiusFieldNumber = 30;
  float range_radius() const;
  void set_range_radius(float value);

  // float charge_dmg = 32;
  void clear_charge_dmg();
  static const int kChargeDmgFieldNumber = 32;
  float charge_dmg() const;
  void set_charge_dmg(float value);

  // float focus_altitude = 35;
  void clear_focus_altitude();
  static const int kFocusAltitudeFieldNumber = 35;
  float focus_altitude() const;
  void set_focus_altitude(float value);

  // float cri_damage = 36;
  void clear_cri_damage();
  static const int kCriDamageFieldNumber = 36;
  float cri_damage() const;
  void set_cri_damage(float value);

  // uint32 catch_reward = 38;
  void clear_catch_reward();
  static const int kCatchRewardFieldNumber = 38;
  ::google::protobuf::uint32 catch_reward() const;
  void set_catch_reward(::google::protobuf::uint32 value);

  // uint32 max_action_point = 41;
  void clear_max_action_point();
  static const int kMaxActionPointFieldNumber = 41;
  ::google::protobuf::uint32 max_action_point() const;
  void set_max_action_point(::google::protobuf::uint32 value);

  // uint32 morale = 42;
  void clear_morale();
  static const int kMoraleFieldNumber = 42;
  ::google::protobuf::uint32 morale() const;
  void set_morale(::google::protobuf::uint32 value);

  // uint32 morale_atk = 43;
  void clear_morale_atk();
  static const int kMoraleAtkFieldNumber = 43;
  ::google::protobuf::uint32 morale_atk() const;
  void set_morale_atk(::google::protobuf::uint32 value);

  // uint32 morale_def = 44;
  void clear_morale_def();
  static const int kMoraleDefFieldNumber = 44;
  ::google::protobuf::uint32 morale_def() const;
  void set_morale_def(::google::protobuf::uint32 value);

  // uint32 dead_morale = 45;
  void clear_dead_morale();
  static const int kDeadMoraleFieldNumber = 45;
  ::google::protobuf::uint32 dead_morale() const;
  void set_dead_morale(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ConfigData.Heroes_Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > debug_talent_;
  mutable int _debug_talent_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skills_;
  mutable int _skills_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > physic_radius_;
  mutable int _physic_radius_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > shadow_scale_;
  mutable int _shadow_scale_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> melee_hit_effect_;
  ::google::protobuf::RepeatedPtrField< ::std::string> range_hit_effect_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::google::protobuf::internal::ArenaStringPtr hero_name_global_;
  ::google::protobuf::internal::ArenaStringPtr icon_formation_;
  ::google::protobuf::internal::ArenaStringPtr icon_flag_;
  ::google::protobuf::internal::ArenaStringPtr hero_sound_short_;
  ::google::protobuf::internal::ArenaStringPtr charge_anim_effect_;
  ::google::protobuf::internal::ArenaStringPtr charge_anim_effect_hit_;
  ::google::protobuf::internal::ArenaStringPtr hero_deviation_;
  ::google::protobuf::internal::ArenaStringPtr hero_profile_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 debug_level_;
  ::google::protobuf::uint32 debug_floor_;
  ::google::protobuf::uint32 debug_pawn_count_level_;
  ::google::protobuf::uint32 debug_rank_;
  ::google::protobuf::int32 team_banner_height_;
  ::google::protobuf::uint32 classify_;
  ::google::protobuf::uint32 hero_type_;
  ::google::protobuf::uint32 quality_;
  ::google::protobuf::uint32 projectile_id_;
  ::google::protobuf::uint32 teamloigic_id_;
  float mass_;
  float scale_;
  float melee_dps_;
  float melee_speed_;
  float melee_radius_;
  float range_dps_;
  float range_speed_;
  bool can_capture_;
  bool full_talent_;
  float range_radius_;
  float charge_dmg_;
  float focus_altitude_;
  float cri_damage_;
  ::google::protobuf::uint32 catch_reward_;
  ::google::protobuf::uint32 max_action_point_;
  ::google::protobuf::uint32 morale_;
  ::google::protobuf::uint32 morale_atk_;
  ::google::protobuf::uint32 morale_def_;
  ::google::protobuf::uint32 dead_morale_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Heroes_5fConfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Heros_Words_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ConfigData.Heros_Words_Config) */ {
 public:
  Heros_Words_Config();
  virtual ~Heros_Words_Config();

  Heros_Words_Config(const Heros_Words_Config& from);

  inline Heros_Words_Config& operator=(const Heros_Words_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Heros_Words_Config(Heros_Words_Config&& from) noexcept
    : Heros_Words_Config() {
    *this = ::std::move(from);
  }

  inline Heros_Words_Config& operator=(Heros_Words_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Heros_Words_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Heros_Words_Config* internal_default_instance() {
    return reinterpret_cast<const Heros_Words_Config*>(
               &_Heros_Words_Config_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Heros_Words_Config* other);
  friend void swap(Heros_Words_Config& a, Heros_Words_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Heros_Words_Config* New() const final {
    return CreateMaybeMessage<Heros_Words_Config>(NULL);
  }

  Heros_Words_Config* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Heros_Words_Config>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Heros_Words_Config& from);
  void MergeFrom(const Heros_Words_Config& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Heros_Words_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string battle_start_words = 2;
  int battle_start_words_size() const;
  void clear_battle_start_words();
  static const int kBattleStartWordsFieldNumber = 2;
  const ::std::string& battle_start_words(int index) const;
  ::std::string* mutable_battle_start_words(int index);
  void set_battle_start_words(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_battle_start_words(int index, ::std::string&& value);
  #endif
  void set_battle_start_words(int index, const char* value);
  void set_battle_start_words(int index, const char* value, size_t size);
  ::std::string* add_battle_start_words();
  void add_battle_start_words(const ::std::string& value);
  #if LANG_CXX11
  void add_battle_start_words(::std::string&& value);
  #endif
  void add_battle_start_words(const char* value);
  void add_battle_start_words(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& battle_start_words() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_battle_start_words();

  // repeated string charge_words = 3;
  int charge_words_size() const;
  void clear_charge_words();
  static const int kChargeWordsFieldNumber = 3;
  const ::std::string& charge_words(int index) const;
  ::std::string* mutable_charge_words(int index);
  void set_charge_words(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_charge_words(int index, ::std::string&& value);
  #endif
  void set_charge_words(int index, const char* value);
  void set_charge_words(int index, const char* value, size_t size);
  ::std::string* add_charge_words();
  void add_charge_words(const ::std::string& value);
  #if LANG_CXX11
  void add_charge_words(::std::string&& value);
  #endif
  void add_charge_words(const char* value);
  void add_charge_words(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& charge_words() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_charge_words();

  // repeated string cast_spell_words = 4;
  int cast_spell_words_size() const;
  void clear_cast_spell_words();
  static const int kCastSpellWordsFieldNumber = 4;
  const ::std::string& cast_spell_words(int index) const;
  ::std::string* mutable_cast_spell_words(int index);
  void set_cast_spell_words(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_cast_spell_words(int index, ::std::string&& value);
  #endif
  void set_cast_spell_words(int index, const char* value);
  void set_cast_spell_words(int index, const char* value, size_t size);
  ::std::string* add_cast_spell_words();
  void add_cast_spell_words(const ::std::string& value);
  #if LANG_CXX11
  void add_cast_spell_words(::std::string&& value);
  #endif
  void add_cast_spell_words(const char* value);
  void add_cast_spell_words(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& cast_spell_words() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_cast_spell_words();

  // repeated string last_words = 5;
  int last_words_size() const;
  void clear_last_words();
  static const int kLastWordsFieldNumber = 5;
  const ::std::string& last_words(int index) const;
  ::std::string* mutable_last_words(int index);
  void set_last_words(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_last_words(int index, ::std::string&& value);
  #endif
  void set_last_words(int index, const char* value);
  void set_last_words(int index, const char* value, size_t size);
  ::std::string* add_last_words();
  void add_last_words(const ::std::string& value);
  #if LANG_CXX11
  void add_last_words(::std::string&& value);
  #endif
  void add_last_words(const char* value);
  void add_last_words(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& last_words() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_last_words();

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ConfigData.Heros_Words_Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> battle_start_words_;
  ::google::protobuf::RepeatedPtrField< ::std::string> charge_words_;
  ::google::protobuf::RepeatedPtrField< ::std::string> cast_spell_words_;
  ::google::protobuf::RepeatedPtrField< ::std::string> last_words_;
  ::google::protobuf::uint32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Heroes_5fConfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Heroes_Data_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ConfigData.Heroes_Data_Config) */ {
 public:
  Heroes_Data_Config();
  virtual ~Heroes_Data_Config();

  Heroes_Data_Config(const Heroes_Data_Config& from);

  inline Heroes_Data_Config& operator=(const Heroes_Data_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Heroes_Data_Config(Heroes_Data_Config&& from) noexcept
    : Heroes_Data_Config() {
    *this = ::std::move(from);
  }

  inline Heroes_Data_Config& operator=(Heroes_Data_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Heroes_Data_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Heroes_Data_Config* internal_default_instance() {
    return reinterpret_cast<const Heroes_Data_Config*>(
               &_Heroes_Data_Config_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Heroes_Data_Config* other);
  friend void swap(Heroes_Data_Config& a, Heroes_Data_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Heroes_Data_Config* New() const final {
    return CreateMaybeMessage<Heroes_Data_Config>(NULL);
  }

  Heroes_Data_Config* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Heroes_Data_Config>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Heroes_Data_Config& from);
  void MergeFrom(const Heroes_Data_Config& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Heroes_Data_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 up_materials = 19;
  int up_materials_size() const;
  void clear_up_materials();
  static const int kUpMaterialsFieldNumber = 19;
  ::google::protobuf::uint32 up_materials(int index) const;
  void set_up_materials(int index, ::google::protobuf::uint32 value);
  void add_up_materials(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      up_materials() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_up_materials();

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // uint32 hero_id = 2;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // int32 floor = 3;
  void clear_floor();
  static const int kFloorFieldNumber = 3;
  ::google::protobuf::int32 floor() const;
  void set_floor(::google::protobuf::int32 value);

  // float hp_base = 4;
  void clear_hp_base();
  static const int kHpBaseFieldNumber = 4;
  float hp_base() const;
  void set_hp_base(float value);

  // float hp_growth = 5;
  void clear_hp_growth();
  static const int kHpGrowthFieldNumber = 5;
  float hp_growth() const;
  void set_hp_growth(float value);

  // float attack_base = 6;
  void clear_attack_base();
  static const int kAttackBaseFieldNumber = 6;
  float attack_base() const;
  void set_attack_base(float value);

  // float attack_growth = 7;
  void clear_attack_growth();
  static const int kAttackGrowthFieldNumber = 7;
  float attack_growth() const;
  void set_attack_growth(float value);

  // float real_attack_base = 8;
  void clear_real_attack_base();
  static const int kRealAttackBaseFieldNumber = 8;
  float real_attack_base() const;
  void set_real_attack_base(float value);

  // float real_attack_growth = 9;
  void clear_real_attack_growth();
  static const int kRealAttackGrowthFieldNumber = 9;
  float real_attack_growth() const;
  void set_real_attack_growth(float value);

  // float defence_base = 10;
  void clear_defence_base();
  static const int kDefenceBaseFieldNumber = 10;
  float defence_base() const;
  void set_defence_base(float value);

  // float defence_growth = 11;
  void clear_defence_growth();
  static const int kDefenceGrowthFieldNumber = 11;
  float defence_growth() const;
  void set_defence_growth(float value);

  // float dodge_base = 12;
  void clear_dodge_base();
  static const int kDodgeBaseFieldNumber = 12;
  float dodge_base() const;
  void set_dodge_base(float value);

  // float dodge_growth = 13;
  void clear_dodge_growth();
  static const int kDodgeGrowthFieldNumber = 13;
  float dodge_growth() const;
  void set_dodge_growth(float value);

  // float critical_base = 14;
  void clear_critical_base();
  static const int kCriticalBaseFieldNumber = 14;
  float critical_base() const;
  void set_critical_base(float value);

  // float critical_growth = 15;
  void clear_critical_growth();
  static const int kCriticalGrowthFieldNumber = 15;
  float critical_growth() const;
  void set_critical_growth(float value);

  // float conquer_time_base = 16;
  void clear_conquer_time_base();
  static const int kConquerTimeBaseFieldNumber = 16;
  float conquer_time_base() const;
  void set_conquer_time_base(float value);

  // float conquer_time_growth = 17;
  void clear_conquer_time_growth();
  static const int kConquerTimeGrowthFieldNumber = 17;
  float conquer_time_growth() const;
  void set_conquer_time_growth(float value);

  // int32 max_level = 18;
  void clear_max_level();
  static const int kMaxLevelFieldNumber = 18;
  ::google::protobuf::int32 max_level() const;
  void set_max_level(::google::protobuf::int32 value);

  // int32 player_lv = 20;
  void clear_player_lv();
  static const int kPlayerLvFieldNumber = 20;
  ::google::protobuf::int32 player_lv() const;
  void set_player_lv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ConfigData.Heroes_Data_Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > up_materials_;
  mutable int _up_materials_cached_byte_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::int32 floor_;
  float hp_base_;
  float hp_growth_;
  float attack_base_;
  float attack_growth_;
  float real_attack_base_;
  float real_attack_growth_;
  float defence_base_;
  float defence_growth_;
  float dodge_base_;
  float dodge_growth_;
  float critical_base_;
  float critical_growth_;
  float conquer_time_base_;
  float conquer_time_growth_;
  ::google::protobuf::int32 max_level_;
  ::google::protobuf::int32 player_lv_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Heroes_5fConfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Heroes_Skill_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ConfigData.Heroes_Skill_Config) */ {
 public:
  Heroes_Skill_Config();
  virtual ~Heroes_Skill_Config();

  Heroes_Skill_Config(const Heroes_Skill_Config& from);

  inline Heroes_Skill_Config& operator=(const Heroes_Skill_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Heroes_Skill_Config(Heroes_Skill_Config&& from) noexcept
    : Heroes_Skill_Config() {
    *this = ::std::move(from);
  }

  inline Heroes_Skill_Config& operator=(Heroes_Skill_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Heroes_Skill_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Heroes_Skill_Config* internal_default_instance() {
    return reinterpret_cast<const Heroes_Skill_Config*>(
               &_Heroes_Skill_Config_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Heroes_Skill_Config* other);
  friend void swap(Heroes_Skill_Config& a, Heroes_Skill_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Heroes_Skill_Config* New() const final {
    return CreateMaybeMessage<Heroes_Skill_Config>(NULL);
  }

  Heroes_Skill_Config* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Heroes_Skill_Config>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Heroes_Skill_Config& from);
  void MergeFrom(const Heroes_Skill_Config& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Heroes_Skill_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 skill_table = 7;
  int skill_table_size() const;
  void clear_skill_table();
  static const int kSkillTableFieldNumber = 7;
  ::google::protobuf::uint32 skill_table(int index) const;
  void set_skill_table(int index, ::google::protobuf::uint32 value);
  void add_skill_table(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      skill_table() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_skill_table();

  // repeated uint32 materials = 8;
  int materials_size() const;
  void clear_materials();
  static const int kMaterialsFieldNumber = 8;
  ::google::protobuf::uint32 materials(int index) const;
  void set_materials(int index, ::google::protobuf::uint32 value);
  void add_materials(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      materials() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_materials();

  // repeated uint32 up_materials = 9;
  int up_materials_size() const;
  void clear_up_materials();
  static const int kUpMaterialsFieldNumber = 9;
  ::google::protobuf::uint32 up_materials(int index) const;
  void set_up_materials(int index, ::google::protobuf::uint32 value);
  void add_up_materials(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      up_materials() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_up_materials();

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // uint32 hero_id = 2;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // uint32 skill_slot = 3;
  void clear_skill_slot();
  static const int kSkillSlotFieldNumber = 3;
  ::google::protobuf::uint32 skill_slot() const;
  void set_skill_slot(::google::protobuf::uint32 value);

  // uint32 quality = 4;
  void clear_quality();
  static const int kQualityFieldNumber = 4;
  ::google::protobuf::uint32 quality() const;
  void set_quality(::google::protobuf::uint32 value);

  // uint32 need_level = 5;
  void clear_need_level();
  static const int kNeedLevelFieldNumber = 5;
  ::google::protobuf::uint32 need_level() const;
  void set_need_level(::google::protobuf::uint32 value);

  // int32 need_rank = 6;
  void clear_need_rank();
  static const int kNeedRankFieldNumber = 6;
  ::google::protobuf::int32 need_rank() const;
  void set_need_rank(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ConfigData.Heroes_Skill_Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skill_table_;
  mutable int _skill_table_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > materials_;
  mutable int _materials_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > up_materials_;
  mutable int _up_materials_cached_byte_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 skill_slot_;
  ::google::protobuf::uint32 quality_;
  ::google::protobuf::uint32 need_level_;
  ::google::protobuf::int32 need_rank_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Heroes_5fConfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Heroes_Rank_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ConfigData.Heroes_Rank_Config) */ {
 public:
  Heroes_Rank_Config();
  virtual ~Heroes_Rank_Config();

  Heroes_Rank_Config(const Heroes_Rank_Config& from);

  inline Heroes_Rank_Config& operator=(const Heroes_Rank_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Heroes_Rank_Config(Heroes_Rank_Config&& from) noexcept
    : Heroes_Rank_Config() {
    *this = ::std::move(from);
  }

  inline Heroes_Rank_Config& operator=(Heroes_Rank_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Heroes_Rank_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Heroes_Rank_Config* internal_default_instance() {
    return reinterpret_cast<const Heroes_Rank_Config*>(
               &_Heroes_Rank_Config_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(Heroes_Rank_Config* other);
  friend void swap(Heroes_Rank_Config& a, Heroes_Rank_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Heroes_Rank_Config* New() const final {
    return CreateMaybeMessage<Heroes_Rank_Config>(NULL);
  }

  Heroes_Rank_Config* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Heroes_Rank_Config>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Heroes_Rank_Config& from);
  void MergeFrom(const Heroes_Rank_Config& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Heroes_Rank_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // uint32 hero_id = 2;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // uint32 rank = 3;
  void clear_rank();
  static const int kRankFieldNumber = 3;
  ::google::protobuf::uint32 rank() const;
  void set_rank(::google::protobuf::uint32 value);

  // uint32 exp = 4;
  void clear_exp();
  static const int kExpFieldNumber = 4;
  ::google::protobuf::uint32 exp() const;
  void set_exp(::google::protobuf::uint32 value);

  // uint32 level_limit = 5;
  void clear_level_limit();
  static const int kLevelLimitFieldNumber = 5;
  ::google::protobuf::uint32 level_limit() const;
  void set_level_limit(::google::protobuf::uint32 value);

  // float hp = 6;
  void clear_hp();
  static const int kHpFieldNumber = 6;
  float hp() const;
  void set_hp(float value);

  // float attack = 7;
  void clear_attack();
  static const int kAttackFieldNumber = 7;
  float attack() const;
  void set_attack(float value);

  // float real_attack = 8;
  void clear_real_attack();
  static const int kRealAttackFieldNumber = 8;
  float real_attack() const;
  void set_real_attack(float value);

  // float defence = 9;
  void clear_defence();
  static const int kDefenceFieldNumber = 9;
  float defence() const;
  void set_defence(float value);

  // float dodge = 10;
  void clear_dodge();
  static const int kDodgeFieldNumber = 10;
  float dodge() const;
  void set_dodge(float value);

  // float critical = 11;
  void clear_critical();
  static const int kCriticalFieldNumber = 11;
  float critical() const;
  void set_critical(float value);

  // uint32 hero_appear_id = 12;
  void clear_hero_appear_id();
  static const int kHeroAppearIdFieldNumber = 12;
  ::google::protobuf::uint32 hero_appear_id() const;
  void set_hero_appear_id(::google::protobuf::uint32 value);

  // uint32 solider_id = 13;
  void clear_solider_id();
  static const int kSoliderIdFieldNumber = 13;
  ::google::protobuf::uint32 solider_id() const;
  void set_solider_id(::google::protobuf::uint32 value);

  // uint32 spell_count = 14;
  void clear_spell_count();
  static const int kSpellCountFieldNumber = 14;
  ::google::protobuf::uint32 spell_count() const;
  void set_spell_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ConfigData.Heroes_Rank_Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 level_limit_;
  float hp_;
  float attack_;
  float real_attack_;
  float defence_;
  float dodge_;
  float critical_;
  ::google::protobuf::uint32 hero_appear_id_;
  ::google::protobuf::uint32 solider_id_;
  ::google::protobuf::uint32 spell_count_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Heroes_5fConfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Solo_Hero_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ConfigData.Solo_Hero_Config) */ {
 public:
  Solo_Hero_Config();
  virtual ~Solo_Hero_Config();

  Solo_Hero_Config(const Solo_Hero_Config& from);

  inline Solo_Hero_Config& operator=(const Solo_Hero_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Solo_Hero_Config(Solo_Hero_Config&& from) noexcept
    : Solo_Hero_Config() {
    *this = ::std::move(from);
  }

  inline Solo_Hero_Config& operator=(Solo_Hero_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Solo_Hero_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Solo_Hero_Config* internal_default_instance() {
    return reinterpret_cast<const Solo_Hero_Config*>(
               &_Solo_Hero_Config_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(Solo_Hero_Config* other);
  friend void swap(Solo_Hero_Config& a, Solo_Hero_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Solo_Hero_Config* New() const final {
    return CreateMaybeMessage<Solo_Hero_Config>(NULL);
  }

  Solo_Hero_Config* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Solo_Hero_Config>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Solo_Hero_Config& from);
  void MergeFrom(const Solo_Hero_Config& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Solo_Hero_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float power_recover = 4;
  int power_recover_size() const;
  void clear_power_recover();
  static const int kPowerRecoverFieldNumber = 4;
  float power_recover(int index) const;
  void set_power_recover(int index, float value);
  void add_power_recover(float value);
  const ::google::protobuf::RepeatedField< float >&
      power_recover() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_power_recover();

  // repeated float combo_atk = 5;
  int combo_atk_size() const;
  void clear_combo_atk();
  static const int kComboAtkFieldNumber = 5;
  float combo_atk(int index) const;
  void set_combo_atk(int index, float value);
  void add_combo_atk(float value);
  const ::google::protobuf::RepeatedField< float >&
      combo_atk() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_combo_atk();

  // repeated float dmg_range = 8;
  int dmg_range_size() const;
  void clear_dmg_range();
  static const int kDmgRangeFieldNumber = 8;
  float dmg_range(int index) const;
  void set_dmg_range(int index, float value);
  void add_dmg_range(float value);
  const ::google::protobuf::RepeatedField< float >&
      dmg_range() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_dmg_range();

  // repeated float dmg_angle = 9;
  int dmg_angle_size() const;
  void clear_dmg_angle();
  static const int kDmgAngleFieldNumber = 9;
  float dmg_angle(int index) const;
  void set_dmg_angle(int index, float value);
  void add_dmg_angle(float value);
  const ::google::protobuf::RepeatedField< float >&
      dmg_angle() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_dmg_angle();

  // repeated string solo_shake_effect = 10;
  int solo_shake_effect_size() const;
  void clear_solo_shake_effect();
  static const int kSoloShakeEffectFieldNumber = 10;
  const ::std::string& solo_shake_effect(int index) const;
  ::std::string* mutable_solo_shake_effect(int index);
  void set_solo_shake_effect(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_solo_shake_effect(int index, ::std::string&& value);
  #endif
  void set_solo_shake_effect(int index, const char* value);
  void set_solo_shake_effect(int index, const char* value, size_t size);
  ::std::string* add_solo_shake_effect();
  void add_solo_shake_effect(const ::std::string& value);
  #if LANG_CXX11
  void add_solo_shake_effect(::std::string&& value);
  #endif
  void add_solo_shake_effect(const char* value);
  void add_solo_shake_effect(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& solo_shake_effect() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_solo_shake_effect();

  // repeated string solo_trigger_effect = 11;
  int solo_trigger_effect_size() const;
  void clear_solo_trigger_effect();
  static const int kSoloTriggerEffectFieldNumber = 11;
  const ::std::string& solo_trigger_effect(int index) const;
  ::std::string* mutable_solo_trigger_effect(int index);
  void set_solo_trigger_effect(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_solo_trigger_effect(int index, ::std::string&& value);
  #endif
  void set_solo_trigger_effect(int index, const char* value);
  void set_solo_trigger_effect(int index, const char* value, size_t size);
  ::std::string* add_solo_trigger_effect();
  void add_solo_trigger_effect(const ::std::string& value);
  #if LANG_CXX11
  void add_solo_trigger_effect(::std::string&& value);
  #endif
  void add_solo_trigger_effect(const char* value);
  void add_solo_trigger_effect(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& solo_trigger_effect() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_solo_trigger_effect();

  // repeated string solo_hit_fly = 12;
  int solo_hit_fly_size() const;
  void clear_solo_hit_fly();
  static const int kSoloHitFlyFieldNumber = 12;
  const ::std::string& solo_hit_fly(int index) const;
  ::std::string* mutable_solo_hit_fly(int index);
  void set_solo_hit_fly(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_solo_hit_fly(int index, ::std::string&& value);
  #endif
  void set_solo_hit_fly(int index, const char* value);
  void set_solo_hit_fly(int index, const char* value, size_t size);
  ::std::string* add_solo_hit_fly();
  void add_solo_hit_fly(const ::std::string& value);
  #if LANG_CXX11
  void add_solo_hit_fly(::std::string&& value);
  #endif
  void add_solo_hit_fly(const char* value);
  void add_solo_hit_fly(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& solo_hit_fly() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_solo_hit_fly();

  // repeated string solo_shake_sound = 13;
  int solo_shake_sound_size() const;
  void clear_solo_shake_sound();
  static const int kSoloShakeSoundFieldNumber = 13;
  const ::std::string& solo_shake_sound(int index) const;
  ::std::string* mutable_solo_shake_sound(int index);
  void set_solo_shake_sound(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_solo_shake_sound(int index, ::std::string&& value);
  #endif
  void set_solo_shake_sound(int index, const char* value);
  void set_solo_shake_sound(int index, const char* value, size_t size);
  ::std::string* add_solo_shake_sound();
  void add_solo_shake_sound(const ::std::string& value);
  #if LANG_CXX11
  void add_solo_shake_sound(::std::string&& value);
  #endif
  void add_solo_shake_sound(const char* value);
  void add_solo_shake_sound(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& solo_shake_sound() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_solo_shake_sound();

  // repeated float cooldown_delay = 15;
  int cooldown_delay_size() const;
  void clear_cooldown_delay();
  static const int kCooldownDelayFieldNumber = 15;
  float cooldown_delay(int index) const;
  void set_cooldown_delay(int index, float value);
  void add_cooldown_delay(float value);
  const ::google::protobuf::RepeatedField< float >&
      cooldown_delay() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_cooldown_delay();

  // repeated string camera_shake = 17;
  int camera_shake_size() const;
  void clear_camera_shake();
  static const int kCameraShakeFieldNumber = 17;
  const ::std::string& camera_shake(int index) const;
  ::std::string* mutable_camera_shake(int index);
  void set_camera_shake(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_camera_shake(int index, ::std::string&& value);
  #endif
  void set_camera_shake(int index, const char* value);
  void set_camera_shake(int index, const char* value, size_t size);
  ::std::string* add_camera_shake();
  void add_camera_shake(const ::std::string& value);
  #if LANG_CXX11
  void add_camera_shake(::std::string&& value);
  #endif
  void add_camera_shake(const char* value);
  void add_camera_shake(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& camera_shake() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_camera_shake();

  // string solo_trigger_sound = 14;
  void clear_solo_trigger_sound();
  static const int kSoloTriggerSoundFieldNumber = 14;
  const ::std::string& solo_trigger_sound() const;
  void set_solo_trigger_sound(const ::std::string& value);
  #if LANG_CXX11
  void set_solo_trigger_sound(::std::string&& value);
  #endif
  void set_solo_trigger_sound(const char* value);
  void set_solo_trigger_sound(const char* value, size_t size);
  ::std::string* mutable_solo_trigger_sound();
  ::std::string* release_solo_trigger_sound();
  void set_allocated_solo_trigger_sound(::std::string* solo_trigger_sound);

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // uint32 joystick_mode = 2;
  void clear_joystick_mode();
  static const int kJoystickModeFieldNumber = 2;
  ::google::protobuf::uint32 joystick_mode() const;
  void set_joystick_mode(::google::protobuf::uint32 value);

  // uint32 power_max = 3;
  void clear_power_max();
  static const int kPowerMaxFieldNumber = 3;
  ::google::protobuf::uint32 power_max() const;
  void set_power_max(::google::protobuf::uint32 value);

  // float speed_rate = 6;
  void clear_speed_rate();
  static const int kSpeedRateFieldNumber = 6;
  float speed_rate() const;
  void set_speed_rate(float value);

  // float atk_range = 7;
  void clear_atk_range();
  static const int kAtkRangeFieldNumber = 7;
  float atk_range() const;
  void set_atk_range(float value);

  // float evade_dis = 16;
  void clear_evade_dis();
  static const int kEvadeDisFieldNumber = 16;
  float evade_dis() const;
  void set_evade_dis(float value);

  // @@protoc_insertion_point(class_scope:ConfigData.Solo_Hero_Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > power_recover_;
  mutable int _power_recover_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > combo_atk_;
  mutable int _combo_atk_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > dmg_range_;
  mutable int _dmg_range_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > dmg_angle_;
  mutable int _dmg_angle_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> solo_shake_effect_;
  ::google::protobuf::RepeatedPtrField< ::std::string> solo_trigger_effect_;
  ::google::protobuf::RepeatedPtrField< ::std::string> solo_hit_fly_;
  ::google::protobuf::RepeatedPtrField< ::std::string> solo_shake_sound_;
  ::google::protobuf::RepeatedField< float > cooldown_delay_;
  mutable int _cooldown_delay_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> camera_shake_;
  ::google::protobuf::internal::ArenaStringPtr solo_trigger_sound_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 joystick_mode_;
  ::google::protobuf::uint32 power_max_;
  float speed_rate_;
  float atk_range_;
  float evade_dis_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Heroes_5fConfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Solo_Heroes_Data_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ConfigData.Solo_Heroes_Data_Config) */ {
 public:
  Solo_Heroes_Data_Config();
  virtual ~Solo_Heroes_Data_Config();

  Solo_Heroes_Data_Config(const Solo_Heroes_Data_Config& from);

  inline Solo_Heroes_Data_Config& operator=(const Solo_Heroes_Data_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Solo_Heroes_Data_Config(Solo_Heroes_Data_Config&& from) noexcept
    : Solo_Heroes_Data_Config() {
    *this = ::std::move(from);
  }

  inline Solo_Heroes_Data_Config& operator=(Solo_Heroes_Data_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Solo_Heroes_Data_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Solo_Heroes_Data_Config* internal_default_instance() {
    return reinterpret_cast<const Solo_Heroes_Data_Config*>(
               &_Solo_Heroes_Data_Config_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(Solo_Heroes_Data_Config* other);
  friend void swap(Solo_Heroes_Data_Config& a, Solo_Heroes_Data_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Solo_Heroes_Data_Config* New() const final {
    return CreateMaybeMessage<Solo_Heroes_Data_Config>(NULL);
  }

  Solo_Heroes_Data_Config* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Solo_Heroes_Data_Config>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Solo_Heroes_Data_Config& from);
  void MergeFrom(const Solo_Heroes_Data_Config& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Solo_Heroes_Data_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // uint32 debug_level = 2;
  void clear_debug_level();
  static const int kDebugLevelFieldNumber = 2;
  ::google::protobuf::uint32 debug_level() const;
  void set_debug_level(::google::protobuf::uint32 value);

  // float hp_base = 3;
  void clear_hp_base();
  static const int kHpBaseFieldNumber = 3;
  float hp_base() const;
  void set_hp_base(float value);

  // float hp_growth = 4;
  void clear_hp_growth();
  static const int kHpGrowthFieldNumber = 4;
  float hp_growth() const;
  void set_hp_growth(float value);

  // float attack_base = 5;
  void clear_attack_base();
  static const int kAttackBaseFieldNumber = 5;
  float attack_base() const;
  void set_attack_base(float value);

  // float attack_growth = 6;
  void clear_attack_growth();
  static const int kAttackGrowthFieldNumber = 6;
  float attack_growth() const;
  void set_attack_growth(float value);

  // float real_attack_base = 7;
  void clear_real_attack_base();
  static const int kRealAttackBaseFieldNumber = 7;
  float real_attack_base() const;
  void set_real_attack_base(float value);

  // float real_attack_growth = 8;
  void clear_real_attack_growth();
  static const int kRealAttackGrowthFieldNumber = 8;
  float real_attack_growth() const;
  void set_real_attack_growth(float value);

  // float defence_base = 9;
  void clear_defence_base();
  static const int kDefenceBaseFieldNumber = 9;
  float defence_base() const;
  void set_defence_base(float value);

  // float defence_growth = 10;
  void clear_defence_growth();
  static const int kDefenceGrowthFieldNumber = 10;
  float defence_growth() const;
  void set_defence_growth(float value);

  // float dodge_base = 11;
  void clear_dodge_base();
  static const int kDodgeBaseFieldNumber = 11;
  float dodge_base() const;
  void set_dodge_base(float value);

  // float dodge_growth = 12;
  void clear_dodge_growth();
  static const int kDodgeGrowthFieldNumber = 12;
  float dodge_growth() const;
  void set_dodge_growth(float value);

  // float critical_base = 13;
  void clear_critical_base();
  static const int kCriticalBaseFieldNumber = 13;
  float critical_base() const;
  void set_critical_base(float value);

  // float critical_growth = 14;
  void clear_critical_growth();
  static const int kCriticalGrowthFieldNumber = 14;
  float critical_growth() const;
  void set_critical_growth(float value);

  // @@protoc_insertion_point(class_scope:ConfigData.Solo_Heroes_Data_Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 debug_level_;
  float hp_base_;
  float hp_growth_;
  float attack_base_;
  float attack_growth_;
  float real_attack_base_;
  float real_attack_growth_;
  float defence_base_;
  float defence_growth_;
  float dodge_base_;
  float dodge_growth_;
  float critical_base_;
  float critical_growth_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Heroes_5fConfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UI_Heroes_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ConfigData.UI_Heroes_Config) */ {
 public:
  UI_Heroes_Config();
  virtual ~UI_Heroes_Config();

  UI_Heroes_Config(const UI_Heroes_Config& from);

  inline UI_Heroes_Config& operator=(const UI_Heroes_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UI_Heroes_Config(UI_Heroes_Config&& from) noexcept
    : UI_Heroes_Config() {
    *this = ::std::move(from);
  }

  inline UI_Heroes_Config& operator=(UI_Heroes_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UI_Heroes_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UI_Heroes_Config* internal_default_instance() {
    return reinterpret_cast<const UI_Heroes_Config*>(
               &_UI_Heroes_Config_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(UI_Heroes_Config* other);
  friend void swap(UI_Heroes_Config& a, UI_Heroes_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UI_Heroes_Config* New() const final {
    return CreateMaybeMessage<UI_Heroes_Config>(NULL);
  }

  UI_Heroes_Config* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UI_Heroes_Config>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UI_Heroes_Config& from);
  void MergeFrom(const UI_Heroes_Config& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UI_Heroes_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string hero_epic_global = 2;
  void clear_hero_epic_global();
  static const int kHeroEpicGlobalFieldNumber = 2;
  const ::std::string& hero_epic_global() const;
  void set_hero_epic_global(const ::std::string& value);
  #if LANG_CXX11
  void set_hero_epic_global(::std::string&& value);
  #endif
  void set_hero_epic_global(const char* value);
  void set_hero_epic_global(const char* value, size_t size);
  ::std::string* mutable_hero_epic_global();
  ::std::string* release_hero_epic_global();
  void set_allocated_hero_epic_global(::std::string* hero_epic_global);

  // string Type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // string rot = 6;
  void clear_rot();
  static const int kRotFieldNumber = 6;
  const ::std::string& rot() const;
  void set_rot(const ::std::string& value);
  #if LANG_CXX11
  void set_rot(::std::string&& value);
  #endif
  void set_rot(const char* value);
  void set_rot(const char* value, size_t size);
  ::std::string* mutable_rot();
  ::std::string* release_rot();
  void set_allocated_rot(::std::string* rot);

  // string position = 7;
  void clear_position();
  static const int kPositionFieldNumber = 7;
  const ::std::string& position() const;
  void set_position(const ::std::string& value);
  #if LANG_CXX11
  void set_position(::std::string&& value);
  #endif
  void set_position(const char* value);
  void set_position(const char* value, size_t size);
  ::std::string* mutable_position();
  ::std::string* release_position();
  void set_allocated_position(::std::string* position);

  // string equip = 8;
  void clear_equip();
  static const int kEquipFieldNumber = 8;
  const ::std::string& equip() const;
  void set_equip(const ::std::string& value);
  #if LANG_CXX11
  void set_equip(::std::string&& value);
  #endif
  void set_equip(const char* value);
  void set_equip(const char* value, size_t size);
  ::std::string* mutable_equip();
  ::std::string* release_equip();
  void set_allocated_equip(::std::string* equip);

  // string hero_sound = 12;
  void clear_hero_sound();
  static const int kHeroSoundFieldNumber = 12;
  const ::std::string& hero_sound() const;
  void set_hero_sound(const ::std::string& value);
  #if LANG_CXX11
  void set_hero_sound(::std::string&& value);
  #endif
  void set_hero_sound(const char* value);
  void set_hero_sound(const char* value, size_t size);
  ::std::string* mutable_hero_sound();
  ::std::string* release_hero_sound();
  void set_allocated_hero_sound(::std::string* hero_sound);

  // string sfx = 15;
  void clear_sfx();
  static const int kSfxFieldNumber = 15;
  const ::std::string& sfx() const;
  void set_sfx(const ::std::string& value);
  #if LANG_CXX11
  void set_sfx(::std::string&& value);
  #endif
  void set_sfx(const char* value);
  void set_sfx(const char* value, size_t size);
  ::std::string* mutable_sfx();
  ::std::string* release_sfx();
  void set_allocated_sfx(::std::string* sfx);

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // bool hide = 4;
  void clear_hide();
  static const int kHideFieldNumber = 4;
  bool hide() const;
  void set_hide(bool value);

  // float scale = 5;
  void clear_scale();
  static const int kScaleFieldNumber = 5;
  float scale() const;
  void set_scale(float value);

  // uint32 card_id = 9;
  void clear_card_id();
  static const int kCardIdFieldNumber = 9;
  ::google::protobuf::uint32 card_id() const;
  void set_card_id(::google::protobuf::uint32 value);

  // uint32 summon_cost = 10;
  void clear_summon_cost();
  static const int kSummonCostFieldNumber = 10;
  ::google::protobuf::uint32 summon_cost() const;
  void set_summon_cost(::google::protobuf::uint32 value);

  // uint32 levelup_gold = 11;
  void clear_levelup_gold();
  static const int kLevelupGoldFieldNumber = 11;
  ::google::protobuf::uint32 levelup_gold() const;
  void set_levelup_gold(::google::protobuf::uint32 value);

  // float talent_cost_rrate = 13;
  void clear_talent_cost_rrate();
  static const int kTalentCostRrateFieldNumber = 13;
  float talent_cost_rrate() const;
  void set_talent_cost_rrate(float value);

  // float rrate_grow = 14;
  void clear_rrate_grow();
  static const int kRrateGrowFieldNumber = 14;
  float rrate_grow() const;
  void set_rrate_grow(float value);

  // @@protoc_insertion_point(class_scope:ConfigData.UI_Heroes_Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr hero_epic_global_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr rot_;
  ::google::protobuf::internal::ArenaStringPtr position_;
  ::google::protobuf::internal::ArenaStringPtr equip_;
  ::google::protobuf::internal::ArenaStringPtr hero_sound_;
  ::google::protobuf::internal::ArenaStringPtr sfx_;
  ::google::protobuf::uint32 id_;
  bool hide_;
  float scale_;
  ::google::protobuf::uint32 card_id_;
  ::google::protobuf::uint32 summon_cost_;
  ::google::protobuf::uint32 levelup_gold_;
  float talent_cost_rrate_;
  float rrate_grow_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Heroes_5fConfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Heroes_Type_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ConfigData.Heroes_Type_Config) */ {
 public:
  Heroes_Type_Config();
  virtual ~Heroes_Type_Config();

  Heroes_Type_Config(const Heroes_Type_Config& from);

  inline Heroes_Type_Config& operator=(const Heroes_Type_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Heroes_Type_Config(Heroes_Type_Config&& from) noexcept
    : Heroes_Type_Config() {
    *this = ::std::move(from);
  }

  inline Heroes_Type_Config& operator=(Heroes_Type_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Heroes_Type_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Heroes_Type_Config* internal_default_instance() {
    return reinterpret_cast<const Heroes_Type_Config*>(
               &_Heroes_Type_Config_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(Heroes_Type_Config* other);
  friend void swap(Heroes_Type_Config& a, Heroes_Type_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Heroes_Type_Config* New() const final {
    return CreateMaybeMessage<Heroes_Type_Config>(NULL);
  }

  Heroes_Type_Config* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Heroes_Type_Config>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Heroes_Type_Config& from);
  void MergeFrom(const Heroes_Type_Config& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Heroes_Type_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Hero_Icon = 2;
  void clear_hero_icon();
  static const int kHeroIconFieldNumber = 2;
  const ::std::string& hero_icon() const;
  void set_hero_icon(const ::std::string& value);
  #if LANG_CXX11
  void set_hero_icon(::std::string&& value);
  #endif
  void set_hero_icon(const char* value);
  void set_hero_icon(const char* value, size_t size);
  ::std::string* mutable_hero_icon();
  ::std::string* release_hero_icon();
  void set_allocated_hero_icon(::std::string* hero_icon);

  // string global_string_id = 3;
  void clear_global_string_id();
  static const int kGlobalStringIdFieldNumber = 3;
  const ::std::string& global_string_id() const;
  void set_global_string_id(const ::std::string& value);
  #if LANG_CXX11
  void set_global_string_id(::std::string&& value);
  #endif
  void set_global_string_id(const char* value);
  void set_global_string_id(const char* value, size_t size);
  ::std::string* mutable_global_string_id();
  ::std::string* release_global_string_id();
  void set_allocated_global_string_id(::std::string* global_string_id);

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ConfigData.Heroes_Type_Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr hero_icon_;
  ::google::protobuf::internal::ArenaStringPtr global_string_id_;
  ::google::protobuf::uint32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Heroes_5fConfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Heroes_Config_Data_AppearanceConfigItemsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Heroes_Config_Data_AppearanceConfigItemsEntry_DoNotUse, 
    ::google::protobuf::uint32, ::ConfigData::Appearance_Config,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Heroes_Config_Data_AppearanceConfigItemsEntry_DoNotUse, 
    ::google::protobuf::uint32, ::ConfigData::Appearance_Config,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Heroes_Config_Data_AppearanceConfigItemsEntry_DoNotUse();
  Heroes_Config_Data_AppearanceConfigItemsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Heroes_Config_Data_AppearanceConfigItemsEntry_DoNotUse& other);
  static const Heroes_Config_Data_AppearanceConfigItemsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Heroes_Config_Data_AppearanceConfigItemsEntry_DoNotUse*>(&_Heroes_Config_Data_AppearanceConfigItemsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Heroes_Config_Data_HeroesConfigItemsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Heroes_Config_Data_HeroesConfigItemsEntry_DoNotUse, 
    ::google::protobuf::uint32, ::ConfigData::Heroes_Config,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Heroes_Config_Data_HeroesConfigItemsEntry_DoNotUse, 
    ::google::protobuf::uint32, ::ConfigData::Heroes_Config,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Heroes_Config_Data_HeroesConfigItemsEntry_DoNotUse();
  Heroes_Config_Data_HeroesConfigItemsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Heroes_Config_Data_HeroesConfigItemsEntry_DoNotUse& other);
  static const Heroes_Config_Data_HeroesConfigItemsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Heroes_Config_Data_HeroesConfigItemsEntry_DoNotUse*>(&_Heroes_Config_Data_HeroesConfigItemsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Heroes_Config_Data_HerosWordsConfigItemsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Heroes_Config_Data_HerosWordsConfigItemsEntry_DoNotUse, 
    ::google::protobuf::uint32, ::ConfigData::Heros_Words_Config,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Heroes_Config_Data_HerosWordsConfigItemsEntry_DoNotUse, 
    ::google::protobuf::uint32, ::ConfigData::Heros_Words_Config,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Heroes_Config_Data_HerosWordsConfigItemsEntry_DoNotUse();
  Heroes_Config_Data_HerosWordsConfigItemsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Heroes_Config_Data_HerosWordsConfigItemsEntry_DoNotUse& other);
  static const Heroes_Config_Data_HerosWordsConfigItemsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Heroes_Config_Data_HerosWordsConfigItemsEntry_DoNotUse*>(&_Heroes_Config_Data_HerosWordsConfigItemsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Heroes_Config_Data_HeroesDataConfigItemsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Heroes_Config_Data_HeroesDataConfigItemsEntry_DoNotUse, 
    ::google::protobuf::uint32, ::ConfigData::Heroes_Data_Config,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Heroes_Config_Data_HeroesDataConfigItemsEntry_DoNotUse, 
    ::google::protobuf::uint32, ::ConfigData::Heroes_Data_Config,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Heroes_Config_Data_HeroesDataConfigItemsEntry_DoNotUse();
  Heroes_Config_Data_HeroesDataConfigItemsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Heroes_Config_Data_HeroesDataConfigItemsEntry_DoNotUse& other);
  static const Heroes_Config_Data_HeroesDataConfigItemsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Heroes_Config_Data_HeroesDataConfigItemsEntry_DoNotUse*>(&_Heroes_Config_Data_HeroesDataConfigItemsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Heroes_Config_Data_HeroesSkillConfigItemsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Heroes_Config_Data_HeroesSkillConfigItemsEntry_DoNotUse, 
    ::google::protobuf::uint32, ::ConfigData::Heroes_Skill_Config,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Heroes_Config_Data_HeroesSkillConfigItemsEntry_DoNotUse, 
    ::google::protobuf::uint32, ::ConfigData::Heroes_Skill_Config,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Heroes_Config_Data_HeroesSkillConfigItemsEntry_DoNotUse();
  Heroes_Config_Data_HeroesSkillConfigItemsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Heroes_Config_Data_HeroesSkillConfigItemsEntry_DoNotUse& other);
  static const Heroes_Config_Data_HeroesSkillConfigItemsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Heroes_Config_Data_HeroesSkillConfigItemsEntry_DoNotUse*>(&_Heroes_Config_Data_HeroesSkillConfigItemsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Heroes_Config_Data_HeroesRankConfigItemsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Heroes_Config_Data_HeroesRankConfigItemsEntry_DoNotUse, 
    ::google::protobuf::uint32, ::ConfigData::Heroes_Rank_Config,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Heroes_Config_Data_HeroesRankConfigItemsEntry_DoNotUse, 
    ::google::protobuf::uint32, ::ConfigData::Heroes_Rank_Config,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Heroes_Config_Data_HeroesRankConfigItemsEntry_DoNotUse();
  Heroes_Config_Data_HeroesRankConfigItemsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Heroes_Config_Data_HeroesRankConfigItemsEntry_DoNotUse& other);
  static const Heroes_Config_Data_HeroesRankConfigItemsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Heroes_Config_Data_HeroesRankConfigItemsEntry_DoNotUse*>(&_Heroes_Config_Data_HeroesRankConfigItemsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Heroes_Config_Data_SoloHeroConfigItemsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Heroes_Config_Data_SoloHeroConfigItemsEntry_DoNotUse, 
    ::google::protobuf::uint32, ::ConfigData::Solo_Hero_Config,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Heroes_Config_Data_SoloHeroConfigItemsEntry_DoNotUse, 
    ::google::protobuf::uint32, ::ConfigData::Solo_Hero_Config,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Heroes_Config_Data_SoloHeroConfigItemsEntry_DoNotUse();
  Heroes_Config_Data_SoloHeroConfigItemsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Heroes_Config_Data_SoloHeroConfigItemsEntry_DoNotUse& other);
  static const Heroes_Config_Data_SoloHeroConfigItemsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Heroes_Config_Data_SoloHeroConfigItemsEntry_DoNotUse*>(&_Heroes_Config_Data_SoloHeroConfigItemsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Heroes_Config_Data_SoloHeroesDataConfigItemsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Heroes_Config_Data_SoloHeroesDataConfigItemsEntry_DoNotUse, 
    ::google::protobuf::uint32, ::ConfigData::Solo_Heroes_Data_Config,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Heroes_Config_Data_SoloHeroesDataConfigItemsEntry_DoNotUse, 
    ::google::protobuf::uint32, ::ConfigData::Solo_Heroes_Data_Config,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Heroes_Config_Data_SoloHeroesDataConfigItemsEntry_DoNotUse();
  Heroes_Config_Data_SoloHeroesDataConfigItemsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Heroes_Config_Data_SoloHeroesDataConfigItemsEntry_DoNotUse& other);
  static const Heroes_Config_Data_SoloHeroesDataConfigItemsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Heroes_Config_Data_SoloHeroesDataConfigItemsEntry_DoNotUse*>(&_Heroes_Config_Data_SoloHeroesDataConfigItemsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Heroes_Config_Data_UIHeroesConfigItemsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Heroes_Config_Data_UIHeroesConfigItemsEntry_DoNotUse, 
    ::google::protobuf::uint32, ::ConfigData::UI_Heroes_Config,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Heroes_Config_Data_UIHeroesConfigItemsEntry_DoNotUse, 
    ::google::protobuf::uint32, ::ConfigData::UI_Heroes_Config,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Heroes_Config_Data_UIHeroesConfigItemsEntry_DoNotUse();
  Heroes_Config_Data_UIHeroesConfigItemsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Heroes_Config_Data_UIHeroesConfigItemsEntry_DoNotUse& other);
  static const Heroes_Config_Data_UIHeroesConfigItemsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Heroes_Config_Data_UIHeroesConfigItemsEntry_DoNotUse*>(&_Heroes_Config_Data_UIHeroesConfigItemsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Heroes_Config_Data_HeroesTypeConfigItemsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Heroes_Config_Data_HeroesTypeConfigItemsEntry_DoNotUse, 
    ::google::protobuf::uint32, ::ConfigData::Heroes_Type_Config,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Heroes_Config_Data_HeroesTypeConfigItemsEntry_DoNotUse, 
    ::google::protobuf::uint32, ::ConfigData::Heroes_Type_Config,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Heroes_Config_Data_HeroesTypeConfigItemsEntry_DoNotUse();
  Heroes_Config_Data_HeroesTypeConfigItemsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Heroes_Config_Data_HeroesTypeConfigItemsEntry_DoNotUse& other);
  static const Heroes_Config_Data_HeroesTypeConfigItemsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Heroes_Config_Data_HeroesTypeConfigItemsEntry_DoNotUse*>(&_Heroes_Config_Data_HeroesTypeConfigItemsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Heroes_Config_Data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ConfigData.Heroes_Config_Data) */ {
 public:
  Heroes_Config_Data();
  virtual ~Heroes_Config_Data();

  Heroes_Config_Data(const Heroes_Config_Data& from);

  inline Heroes_Config_Data& operator=(const Heroes_Config_Data& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Heroes_Config_Data(Heroes_Config_Data&& from) noexcept
    : Heroes_Config_Data() {
    *this = ::std::move(from);
  }

  inline Heroes_Config_Data& operator=(Heroes_Config_Data&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Heroes_Config_Data& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Heroes_Config_Data* internal_default_instance() {
    return reinterpret_cast<const Heroes_Config_Data*>(
               &_Heroes_Config_Data_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(Heroes_Config_Data* other);
  friend void swap(Heroes_Config_Data& a, Heroes_Config_Data& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Heroes_Config_Data* New() const final {
    return CreateMaybeMessage<Heroes_Config_Data>(NULL);
  }

  Heroes_Config_Data* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Heroes_Config_Data>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Heroes_Config_Data& from);
  void MergeFrom(const Heroes_Config_Data& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Heroes_Config_Data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, .ConfigData.Appearance_Config> Appearance_Config_items = 1;
  int appearance_config_items_size() const;
  void clear_appearance_config_items();
  static const int kAppearanceConfigItemsFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::Appearance_Config >&
      appearance_config_items() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::Appearance_Config >*
      mutable_appearance_config_items();

  // map<uint32, .ConfigData.Heroes_Config> Heroes_Config_items = 2;
  int heroes_config_items_size() const;
  void clear_heroes_config_items();
  static const int kHeroesConfigItemsFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::Heroes_Config >&
      heroes_config_items() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::Heroes_Config >*
      mutable_heroes_config_items();

  // map<uint32, .ConfigData.Heros_Words_Config> Heros_Words_Config_items = 3;
  int heros_words_config_items_size() const;
  void clear_heros_words_config_items();
  static const int kHerosWordsConfigItemsFieldNumber = 3;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::Heros_Words_Config >&
      heros_words_config_items() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::Heros_Words_Config >*
      mutable_heros_words_config_items();

  // map<uint32, .ConfigData.Heroes_Data_Config> Heroes_Data_Config_items = 4;
  int heroes_data_config_items_size() const;
  void clear_heroes_data_config_items();
  static const int kHeroesDataConfigItemsFieldNumber = 4;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::Heroes_Data_Config >&
      heroes_data_config_items() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::Heroes_Data_Config >*
      mutable_heroes_data_config_items();

  // map<uint32, .ConfigData.Heroes_Skill_Config> Heroes_Skill_Config_items = 5;
  int heroes_skill_config_items_size() const;
  void clear_heroes_skill_config_items();
  static const int kHeroesSkillConfigItemsFieldNumber = 5;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::Heroes_Skill_Config >&
      heroes_skill_config_items() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::Heroes_Skill_Config >*
      mutable_heroes_skill_config_items();

  // map<uint32, .ConfigData.Heroes_Rank_Config> Heroes_Rank_Config_items = 6;
  int heroes_rank_config_items_size() const;
  void clear_heroes_rank_config_items();
  static const int kHeroesRankConfigItemsFieldNumber = 6;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::Heroes_Rank_Config >&
      heroes_rank_config_items() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::Heroes_Rank_Config >*
      mutable_heroes_rank_config_items();

  // map<uint32, .ConfigData.Solo_Hero_Config> Solo_Hero_Config_items = 7;
  int solo_hero_config_items_size() const;
  void clear_solo_hero_config_items();
  static const int kSoloHeroConfigItemsFieldNumber = 7;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::Solo_Hero_Config >&
      solo_hero_config_items() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::Solo_Hero_Config >*
      mutable_solo_hero_config_items();

  // map<uint32, .ConfigData.Solo_Heroes_Data_Config> Solo_Heroes_Data_Config_items = 8;
  int solo_heroes_data_config_items_size() const;
  void clear_solo_heroes_data_config_items();
  static const int kSoloHeroesDataConfigItemsFieldNumber = 8;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::Solo_Heroes_Data_Config >&
      solo_heroes_data_config_items() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::Solo_Heroes_Data_Config >*
      mutable_solo_heroes_data_config_items();

  // map<uint32, .ConfigData.UI_Heroes_Config> UI_Heroes_Config_items = 9;
  int ui_heroes_config_items_size() const;
  void clear_ui_heroes_config_items();
  static const int kUIHeroesConfigItemsFieldNumber = 9;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::UI_Heroes_Config >&
      ui_heroes_config_items() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::UI_Heroes_Config >*
      mutable_ui_heroes_config_items();

  // map<uint32, .ConfigData.Heroes_Type_Config> Heroes_Type_Config_items = 10;
  int heroes_type_config_items_size() const;
  void clear_heroes_type_config_items();
  static const int kHeroesTypeConfigItemsFieldNumber = 10;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::Heroes_Type_Config >&
      heroes_type_config_items() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::Heroes_Type_Config >*
      mutable_heroes_type_config_items();

  // @@protoc_insertion_point(class_scope:ConfigData.Heroes_Config_Data)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      Heroes_Config_Data_AppearanceConfigItemsEntry_DoNotUse,
      ::google::protobuf::uint32, ::ConfigData::Appearance_Config,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > appearance_config_items_;
  ::google::protobuf::internal::MapField<
      Heroes_Config_Data_HeroesConfigItemsEntry_DoNotUse,
      ::google::protobuf::uint32, ::ConfigData::Heroes_Config,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > heroes_config_items_;
  ::google::protobuf::internal::MapField<
      Heroes_Config_Data_HerosWordsConfigItemsEntry_DoNotUse,
      ::google::protobuf::uint32, ::ConfigData::Heros_Words_Config,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > heros_words_config_items_;
  ::google::protobuf::internal::MapField<
      Heroes_Config_Data_HeroesDataConfigItemsEntry_DoNotUse,
      ::google::protobuf::uint32, ::ConfigData::Heroes_Data_Config,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > heroes_data_config_items_;
  ::google::protobuf::internal::MapField<
      Heroes_Config_Data_HeroesSkillConfigItemsEntry_DoNotUse,
      ::google::protobuf::uint32, ::ConfigData::Heroes_Skill_Config,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > heroes_skill_config_items_;
  ::google::protobuf::internal::MapField<
      Heroes_Config_Data_HeroesRankConfigItemsEntry_DoNotUse,
      ::google::protobuf::uint32, ::ConfigData::Heroes_Rank_Config,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > heroes_rank_config_items_;
  ::google::protobuf::internal::MapField<
      Heroes_Config_Data_SoloHeroConfigItemsEntry_DoNotUse,
      ::google::protobuf::uint32, ::ConfigData::Solo_Hero_Config,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > solo_hero_config_items_;
  ::google::protobuf::internal::MapField<
      Heroes_Config_Data_SoloHeroesDataConfigItemsEntry_DoNotUse,
      ::google::protobuf::uint32, ::ConfigData::Solo_Heroes_Data_Config,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > solo_heroes_data_config_items_;
  ::google::protobuf::internal::MapField<
      Heroes_Config_Data_UIHeroesConfigItemsEntry_DoNotUse,
      ::google::protobuf::uint32, ::ConfigData::UI_Heroes_Config,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > ui_heroes_config_items_;
  ::google::protobuf::internal::MapField<
      Heroes_Config_Data_HeroesTypeConfigItemsEntry_DoNotUse,
      ::google::protobuf::uint32, ::ConfigData::Heroes_Type_Config,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > heroes_type_config_items_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Heroes_5fConfig_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Appearance_Config

// uint32 id = 1;
inline void Appearance_Config::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 Appearance_Config::id() const {
  // @@protoc_insertion_point(field_get:ConfigData.Appearance_Config.id)
  return id_;
}
inline void Appearance_Config::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Appearance_Config.id)
}

// string folder_name = 2;
inline void Appearance_Config::clear_folder_name() {
  folder_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Appearance_Config::folder_name() const {
  // @@protoc_insertion_point(field_get:ConfigData.Appearance_Config.folder_name)
  return folder_name_.GetNoArena();
}
inline void Appearance_Config::set_folder_name(const ::std::string& value) {
  
  folder_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.Appearance_Config.folder_name)
}
#if LANG_CXX11
inline void Appearance_Config::set_folder_name(::std::string&& value) {
  
  folder_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.Appearance_Config.folder_name)
}
#endif
inline void Appearance_Config::set_folder_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  folder_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.Appearance_Config.folder_name)
}
inline void Appearance_Config::set_folder_name(const char* value, size_t size) {
  
  folder_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.Appearance_Config.folder_name)
}
inline ::std::string* Appearance_Config::mutable_folder_name() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.Appearance_Config.folder_name)
  return folder_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Appearance_Config::release_folder_name() {
  // @@protoc_insertion_point(field_release:ConfigData.Appearance_Config.folder_name)
  
  return folder_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Appearance_Config::set_allocated_folder_name(::std::string* folder_name) {
  if (folder_name != NULL) {
    
  } else {
    
  }
  folder_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), folder_name);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.Appearance_Config.folder_name)
}

// string mesh = 3;
inline void Appearance_Config::clear_mesh() {
  mesh_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Appearance_Config::mesh() const {
  // @@protoc_insertion_point(field_get:ConfigData.Appearance_Config.mesh)
  return mesh_.GetNoArena();
}
inline void Appearance_Config::set_mesh(const ::std::string& value) {
  
  mesh_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.Appearance_Config.mesh)
}
#if LANG_CXX11
inline void Appearance_Config::set_mesh(::std::string&& value) {
  
  mesh_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.Appearance_Config.mesh)
}
#endif
inline void Appearance_Config::set_mesh(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mesh_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.Appearance_Config.mesh)
}
inline void Appearance_Config::set_mesh(const char* value, size_t size) {
  
  mesh_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.Appearance_Config.mesh)
}
inline ::std::string* Appearance_Config::mutable_mesh() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.Appearance_Config.mesh)
  return mesh_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Appearance_Config::release_mesh() {
  // @@protoc_insertion_point(field_release:ConfigData.Appearance_Config.mesh)
  
  return mesh_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Appearance_Config::set_allocated_mesh(::std::string* mesh) {
  if (mesh != NULL) {
    
  } else {
    
  }
  mesh_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mesh);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.Appearance_Config.mesh)
}

// string texture = 4;
inline void Appearance_Config::clear_texture() {
  texture_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Appearance_Config::texture() const {
  // @@protoc_insertion_point(field_get:ConfigData.Appearance_Config.texture)
  return texture_.GetNoArena();
}
inline void Appearance_Config::set_texture(const ::std::string& value) {
  
  texture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.Appearance_Config.texture)
}
#if LANG_CXX11
inline void Appearance_Config::set_texture(::std::string&& value) {
  
  texture_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.Appearance_Config.texture)
}
#endif
inline void Appearance_Config::set_texture(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  texture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.Appearance_Config.texture)
}
inline void Appearance_Config::set_texture(const char* value, size_t size) {
  
  texture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.Appearance_Config.texture)
}
inline ::std::string* Appearance_Config::mutable_texture() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.Appearance_Config.texture)
  return texture_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Appearance_Config::release_texture() {
  // @@protoc_insertion_point(field_release:ConfigData.Appearance_Config.texture)
  
  return texture_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Appearance_Config::set_allocated_texture(::std::string* texture) {
  if (texture != NULL) {
    
  } else {
    
  }
  texture_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), texture);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.Appearance_Config.texture)
}

// uint32 anim_id = 5;
inline void Appearance_Config::clear_anim_id() {
  anim_id_ = 0u;
}
inline ::google::protobuf::uint32 Appearance_Config::anim_id() const {
  // @@protoc_insertion_point(field_get:ConfigData.Appearance_Config.anim_id)
  return anim_id_;
}
inline void Appearance_Config::set_anim_id(::google::protobuf::uint32 value) {
  
  anim_id_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Appearance_Config.anim_id)
}

// bool bake_mesh = 6;
inline void Appearance_Config::clear_bake_mesh() {
  bake_mesh_ = false;
}
inline bool Appearance_Config::bake_mesh() const {
  // @@protoc_insertion_point(field_get:ConfigData.Appearance_Config.bake_mesh)
  return bake_mesh_;
}
inline void Appearance_Config::set_bake_mesh(bool value) {
  
  bake_mesh_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Appearance_Config.bake_mesh)
}

// float scale_map = 7;
inline void Appearance_Config::clear_scale_map() {
  scale_map_ = 0;
}
inline float Appearance_Config::scale_map() const {
  // @@protoc_insertion_point(field_get:ConfigData.Appearance_Config.scale_map)
  return scale_map_;
}
inline void Appearance_Config::set_scale_map(float value) {
  
  scale_map_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Appearance_Config.scale_map)
}

// float scale_loading = 8;
inline void Appearance_Config::clear_scale_loading() {
  scale_loading_ = 0;
}
inline float Appearance_Config::scale_loading() const {
  // @@protoc_insertion_point(field_get:ConfigData.Appearance_Config.scale_loading)
  return scale_loading_;
}
inline void Appearance_Config::set_scale_loading(float value) {
  
  scale_loading_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Appearance_Config.scale_loading)
}

// string atk_sound = 9;
inline void Appearance_Config::clear_atk_sound() {
  atk_sound_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Appearance_Config::atk_sound() const {
  // @@protoc_insertion_point(field_get:ConfigData.Appearance_Config.atk_sound)
  return atk_sound_.GetNoArena();
}
inline void Appearance_Config::set_atk_sound(const ::std::string& value) {
  
  atk_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.Appearance_Config.atk_sound)
}
#if LANG_CXX11
inline void Appearance_Config::set_atk_sound(::std::string&& value) {
  
  atk_sound_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.Appearance_Config.atk_sound)
}
#endif
inline void Appearance_Config::set_atk_sound(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  atk_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.Appearance_Config.atk_sound)
}
inline void Appearance_Config::set_atk_sound(const char* value, size_t size) {
  
  atk_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.Appearance_Config.atk_sound)
}
inline ::std::string* Appearance_Config::mutable_atk_sound() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.Appearance_Config.atk_sound)
  return atk_sound_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Appearance_Config::release_atk_sound() {
  // @@protoc_insertion_point(field_release:ConfigData.Appearance_Config.atk_sound)
  
  return atk_sound_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Appearance_Config::set_allocated_atk_sound(::std::string* atk_sound) {
  if (atk_sound != NULL) {
    
  } else {
    
  }
  atk_sound_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), atk_sound);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.Appearance_Config.atk_sound)
}

// string range_sound = 10;
inline void Appearance_Config::clear_range_sound() {
  range_sound_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Appearance_Config::range_sound() const {
  // @@protoc_insertion_point(field_get:ConfigData.Appearance_Config.range_sound)
  return range_sound_.GetNoArena();
}
inline void Appearance_Config::set_range_sound(const ::std::string& value) {
  
  range_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.Appearance_Config.range_sound)
}
#if LANG_CXX11
inline void Appearance_Config::set_range_sound(::std::string&& value) {
  
  range_sound_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.Appearance_Config.range_sound)
}
#endif
inline void Appearance_Config::set_range_sound(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  range_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.Appearance_Config.range_sound)
}
inline void Appearance_Config::set_range_sound(const char* value, size_t size) {
  
  range_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.Appearance_Config.range_sound)
}
inline ::std::string* Appearance_Config::mutable_range_sound() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.Appearance_Config.range_sound)
  return range_sound_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Appearance_Config::release_range_sound() {
  // @@protoc_insertion_point(field_release:ConfigData.Appearance_Config.range_sound)
  
  return range_sound_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Appearance_Config::set_allocated_range_sound(::std::string* range_sound) {
  if (range_sound != NULL) {
    
  } else {
    
  }
  range_sound_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), range_sound);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.Appearance_Config.range_sound)
}

// string range_hit_sound = 11;
inline void Appearance_Config::clear_range_hit_sound() {
  range_hit_sound_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Appearance_Config::range_hit_sound() const {
  // @@protoc_insertion_point(field_get:ConfigData.Appearance_Config.range_hit_sound)
  return range_hit_sound_.GetNoArena();
}
inline void Appearance_Config::set_range_hit_sound(const ::std::string& value) {
  
  range_hit_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.Appearance_Config.range_hit_sound)
}
#if LANG_CXX11
inline void Appearance_Config::set_range_hit_sound(::std::string&& value) {
  
  range_hit_sound_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.Appearance_Config.range_hit_sound)
}
#endif
inline void Appearance_Config::set_range_hit_sound(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  range_hit_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.Appearance_Config.range_hit_sound)
}
inline void Appearance_Config::set_range_hit_sound(const char* value, size_t size) {
  
  range_hit_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.Appearance_Config.range_hit_sound)
}
inline ::std::string* Appearance_Config::mutable_range_hit_sound() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.Appearance_Config.range_hit_sound)
  return range_hit_sound_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Appearance_Config::release_range_hit_sound() {
  // @@protoc_insertion_point(field_release:ConfigData.Appearance_Config.range_hit_sound)
  
  return range_hit_sound_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Appearance_Config::set_allocated_range_hit_sound(::std::string* range_hit_sound) {
  if (range_hit_sound != NULL) {
    
  } else {
    
  }
  range_hit_sound_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), range_hit_sound);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.Appearance_Config.range_hit_sound)
}

// string charge_sound = 12;
inline void Appearance_Config::clear_charge_sound() {
  charge_sound_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Appearance_Config::charge_sound() const {
  // @@protoc_insertion_point(field_get:ConfigData.Appearance_Config.charge_sound)
  return charge_sound_.GetNoArena();
}
inline void Appearance_Config::set_charge_sound(const ::std::string& value) {
  
  charge_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.Appearance_Config.charge_sound)
}
#if LANG_CXX11
inline void Appearance_Config::set_charge_sound(::std::string&& value) {
  
  charge_sound_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.Appearance_Config.charge_sound)
}
#endif
inline void Appearance_Config::set_charge_sound(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  charge_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.Appearance_Config.charge_sound)
}
inline void Appearance_Config::set_charge_sound(const char* value, size_t size) {
  
  charge_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.Appearance_Config.charge_sound)
}
inline ::std::string* Appearance_Config::mutable_charge_sound() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.Appearance_Config.charge_sound)
  return charge_sound_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Appearance_Config::release_charge_sound() {
  // @@protoc_insertion_point(field_release:ConfigData.Appearance_Config.charge_sound)
  
  return charge_sound_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Appearance_Config::set_allocated_charge_sound(::std::string* charge_sound) {
  if (charge_sound != NULL) {
    
  } else {
    
  }
  charge_sound_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), charge_sound);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.Appearance_Config.charge_sound)
}

// string death_effect = 13;
inline void Appearance_Config::clear_death_effect() {
  death_effect_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Appearance_Config::death_effect() const {
  // @@protoc_insertion_point(field_get:ConfigData.Appearance_Config.death_effect)
  return death_effect_.GetNoArena();
}
inline void Appearance_Config::set_death_effect(const ::std::string& value) {
  
  death_effect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.Appearance_Config.death_effect)
}
#if LANG_CXX11
inline void Appearance_Config::set_death_effect(::std::string&& value) {
  
  death_effect_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.Appearance_Config.death_effect)
}
#endif
inline void Appearance_Config::set_death_effect(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  death_effect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.Appearance_Config.death_effect)
}
inline void Appearance_Config::set_death_effect(const char* value, size_t size) {
  
  death_effect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.Appearance_Config.death_effect)
}
inline ::std::string* Appearance_Config::mutable_death_effect() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.Appearance_Config.death_effect)
  return death_effect_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Appearance_Config::release_death_effect() {
  // @@protoc_insertion_point(field_release:ConfigData.Appearance_Config.death_effect)
  
  return death_effect_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Appearance_Config::set_allocated_death_effect(::std::string* death_effect) {
  if (death_effect != NULL) {
    
  } else {
    
  }
  death_effect_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), death_effect);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.Appearance_Config.death_effect)
}

// -------------------------------------------------------------------

// Heroes_Config

// uint32 id = 1;
inline void Heroes_Config::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 Heroes_Config::id() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.id)
  return id_;
}
inline void Heroes_Config::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.id)
}

// string desc = 2;
inline void Heroes_Config::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Heroes_Config::desc() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.desc)
  return desc_.GetNoArena();
}
inline void Heroes_Config::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.desc)
}
#if LANG_CXX11
inline void Heroes_Config::set_desc(::std::string&& value) {
  
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.Heroes_Config.desc)
}
#endif
inline void Heroes_Config::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.Heroes_Config.desc)
}
inline void Heroes_Config::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.Heroes_Config.desc)
}
inline ::std::string* Heroes_Config::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.Heroes_Config.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Heroes_Config::release_desc() {
  // @@protoc_insertion_point(field_release:ConfigData.Heroes_Config.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Heroes_Config::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.Heroes_Config.desc)
}

// uint32 debug_level = 3;
inline void Heroes_Config::clear_debug_level() {
  debug_level_ = 0u;
}
inline ::google::protobuf::uint32 Heroes_Config::debug_level() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.debug_level)
  return debug_level_;
}
inline void Heroes_Config::set_debug_level(::google::protobuf::uint32 value) {
  
  debug_level_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.debug_level)
}

// uint32 debug_floor = 4;
inline void Heroes_Config::clear_debug_floor() {
  debug_floor_ = 0u;
}
inline ::google::protobuf::uint32 Heroes_Config::debug_floor() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.debug_floor)
  return debug_floor_;
}
inline void Heroes_Config::set_debug_floor(::google::protobuf::uint32 value) {
  
  debug_floor_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.debug_floor)
}

// uint32 debug_pawn_count_level = 5;
inline void Heroes_Config::clear_debug_pawn_count_level() {
  debug_pawn_count_level_ = 0u;
}
inline ::google::protobuf::uint32 Heroes_Config::debug_pawn_count_level() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.debug_pawn_count_level)
  return debug_pawn_count_level_;
}
inline void Heroes_Config::set_debug_pawn_count_level(::google::protobuf::uint32 value) {
  
  debug_pawn_count_level_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.debug_pawn_count_level)
}

// uint32 debug_rank = 6;
inline void Heroes_Config::clear_debug_rank() {
  debug_rank_ = 0u;
}
inline ::google::protobuf::uint32 Heroes_Config::debug_rank() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.debug_rank)
  return debug_rank_;
}
inline void Heroes_Config::set_debug_rank(::google::protobuf::uint32 value) {
  
  debug_rank_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.debug_rank)
}

// repeated uint32 debug_talent = 7;
inline int Heroes_Config::debug_talent_size() const {
  return debug_talent_.size();
}
inline void Heroes_Config::clear_debug_talent() {
  debug_talent_.Clear();
}
inline ::google::protobuf::uint32 Heroes_Config::debug_talent(int index) const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.debug_talent)
  return debug_talent_.Get(index);
}
inline void Heroes_Config::set_debug_talent(int index, ::google::protobuf::uint32 value) {
  debug_talent_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.debug_talent)
}
inline void Heroes_Config::add_debug_talent(::google::protobuf::uint32 value) {
  debug_talent_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigData.Heroes_Config.debug_talent)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Heroes_Config::debug_talent() const {
  // @@protoc_insertion_point(field_list:ConfigData.Heroes_Config.debug_talent)
  return debug_talent_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Heroes_Config::mutable_debug_talent() {
  // @@protoc_insertion_point(field_mutable_list:ConfigData.Heroes_Config.debug_talent)
  return &debug_talent_;
}

// string hero_name_global = 8;
inline void Heroes_Config::clear_hero_name_global() {
  hero_name_global_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Heroes_Config::hero_name_global() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.hero_name_global)
  return hero_name_global_.GetNoArena();
}
inline void Heroes_Config::set_hero_name_global(const ::std::string& value) {
  
  hero_name_global_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.hero_name_global)
}
#if LANG_CXX11
inline void Heroes_Config::set_hero_name_global(::std::string&& value) {
  
  hero_name_global_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.Heroes_Config.hero_name_global)
}
#endif
inline void Heroes_Config::set_hero_name_global(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hero_name_global_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.Heroes_Config.hero_name_global)
}
inline void Heroes_Config::set_hero_name_global(const char* value, size_t size) {
  
  hero_name_global_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.Heroes_Config.hero_name_global)
}
inline ::std::string* Heroes_Config::mutable_hero_name_global() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.Heroes_Config.hero_name_global)
  return hero_name_global_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Heroes_Config::release_hero_name_global() {
  // @@protoc_insertion_point(field_release:ConfigData.Heroes_Config.hero_name_global)
  
  return hero_name_global_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Heroes_Config::set_allocated_hero_name_global(::std::string* hero_name_global) {
  if (hero_name_global != NULL) {
    
  } else {
    
  }
  hero_name_global_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hero_name_global);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.Heroes_Config.hero_name_global)
}

// string icon_formation = 9;
inline void Heroes_Config::clear_icon_formation() {
  icon_formation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Heroes_Config::icon_formation() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.icon_formation)
  return icon_formation_.GetNoArena();
}
inline void Heroes_Config::set_icon_formation(const ::std::string& value) {
  
  icon_formation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.icon_formation)
}
#if LANG_CXX11
inline void Heroes_Config::set_icon_formation(::std::string&& value) {
  
  icon_formation_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.Heroes_Config.icon_formation)
}
#endif
inline void Heroes_Config::set_icon_formation(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  icon_formation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.Heroes_Config.icon_formation)
}
inline void Heroes_Config::set_icon_formation(const char* value, size_t size) {
  
  icon_formation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.Heroes_Config.icon_formation)
}
inline ::std::string* Heroes_Config::mutable_icon_formation() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.Heroes_Config.icon_formation)
  return icon_formation_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Heroes_Config::release_icon_formation() {
  // @@protoc_insertion_point(field_release:ConfigData.Heroes_Config.icon_formation)
  
  return icon_formation_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Heroes_Config::set_allocated_icon_formation(::std::string* icon_formation) {
  if (icon_formation != NULL) {
    
  } else {
    
  }
  icon_formation_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), icon_formation);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.Heroes_Config.icon_formation)
}

// string icon_flag = 10;
inline void Heroes_Config::clear_icon_flag() {
  icon_flag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Heroes_Config::icon_flag() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.icon_flag)
  return icon_flag_.GetNoArena();
}
inline void Heroes_Config::set_icon_flag(const ::std::string& value) {
  
  icon_flag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.icon_flag)
}
#if LANG_CXX11
inline void Heroes_Config::set_icon_flag(::std::string&& value) {
  
  icon_flag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.Heroes_Config.icon_flag)
}
#endif
inline void Heroes_Config::set_icon_flag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  icon_flag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.Heroes_Config.icon_flag)
}
inline void Heroes_Config::set_icon_flag(const char* value, size_t size) {
  
  icon_flag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.Heroes_Config.icon_flag)
}
inline ::std::string* Heroes_Config::mutable_icon_flag() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.Heroes_Config.icon_flag)
  return icon_flag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Heroes_Config::release_icon_flag() {
  // @@protoc_insertion_point(field_release:ConfigData.Heroes_Config.icon_flag)
  
  return icon_flag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Heroes_Config::set_allocated_icon_flag(::std::string* icon_flag) {
  if (icon_flag != NULL) {
    
  } else {
    
  }
  icon_flag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), icon_flag);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.Heroes_Config.icon_flag)
}

// int32 team_banner_height = 11;
inline void Heroes_Config::clear_team_banner_height() {
  team_banner_height_ = 0;
}
inline ::google::protobuf::int32 Heroes_Config::team_banner_height() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.team_banner_height)
  return team_banner_height_;
}
inline void Heroes_Config::set_team_banner_height(::google::protobuf::int32 value) {
  
  team_banner_height_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.team_banner_height)
}

// uint32 classify = 12;
inline void Heroes_Config::clear_classify() {
  classify_ = 0u;
}
inline ::google::protobuf::uint32 Heroes_Config::classify() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.classify)
  return classify_;
}
inline void Heroes_Config::set_classify(::google::protobuf::uint32 value) {
  
  classify_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.classify)
}

// uint32 hero_type = 13;
inline void Heroes_Config::clear_hero_type() {
  hero_type_ = 0u;
}
inline ::google::protobuf::uint32 Heroes_Config::hero_type() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.hero_type)
  return hero_type_;
}
inline void Heroes_Config::set_hero_type(::google::protobuf::uint32 value) {
  
  hero_type_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.hero_type)
}

// uint32 quality = 14;
inline void Heroes_Config::clear_quality() {
  quality_ = 0u;
}
inline ::google::protobuf::uint32 Heroes_Config::quality() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.quality)
  return quality_;
}
inline void Heroes_Config::set_quality(::google::protobuf::uint32 value) {
  
  quality_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.quality)
}

// uint32 projectile_id = 15;
inline void Heroes_Config::clear_projectile_id() {
  projectile_id_ = 0u;
}
inline ::google::protobuf::uint32 Heroes_Config::projectile_id() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.projectile_id)
  return projectile_id_;
}
inline void Heroes_Config::set_projectile_id(::google::protobuf::uint32 value) {
  
  projectile_id_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.projectile_id)
}

// uint32 teamloigic_id = 16;
inline void Heroes_Config::clear_teamloigic_id() {
  teamloigic_id_ = 0u;
}
inline ::google::protobuf::uint32 Heroes_Config::teamloigic_id() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.teamloigic_id)
  return teamloigic_id_;
}
inline void Heroes_Config::set_teamloigic_id(::google::protobuf::uint32 value) {
  
  teamloigic_id_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.teamloigic_id)
}

// repeated uint32 skills = 17;
inline int Heroes_Config::skills_size() const {
  return skills_.size();
}
inline void Heroes_Config::clear_skills() {
  skills_.Clear();
}
inline ::google::protobuf::uint32 Heroes_Config::skills(int index) const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.skills)
  return skills_.Get(index);
}
inline void Heroes_Config::set_skills(int index, ::google::protobuf::uint32 value) {
  skills_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.skills)
}
inline void Heroes_Config::add_skills(::google::protobuf::uint32 value) {
  skills_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigData.Heroes_Config.skills)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Heroes_Config::skills() const {
  // @@protoc_insertion_point(field_list:ConfigData.Heroes_Config.skills)
  return skills_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Heroes_Config::mutable_skills() {
  // @@protoc_insertion_point(field_mutable_list:ConfigData.Heroes_Config.skills)
  return &skills_;
}

// float mass = 18;
inline void Heroes_Config::clear_mass() {
  mass_ = 0;
}
inline float Heroes_Config::mass() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.mass)
  return mass_;
}
inline void Heroes_Config::set_mass(float value) {
  
  mass_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.mass)
}

// repeated float physic_radius = 19;
inline int Heroes_Config::physic_radius_size() const {
  return physic_radius_.size();
}
inline void Heroes_Config::clear_physic_radius() {
  physic_radius_.Clear();
}
inline float Heroes_Config::physic_radius(int index) const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.physic_radius)
  return physic_radius_.Get(index);
}
inline void Heroes_Config::set_physic_radius(int index, float value) {
  physic_radius_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.physic_radius)
}
inline void Heroes_Config::add_physic_radius(float value) {
  physic_radius_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigData.Heroes_Config.physic_radius)
}
inline const ::google::protobuf::RepeatedField< float >&
Heroes_Config::physic_radius() const {
  // @@protoc_insertion_point(field_list:ConfigData.Heroes_Config.physic_radius)
  return physic_radius_;
}
inline ::google::protobuf::RepeatedField< float >*
Heroes_Config::mutable_physic_radius() {
  // @@protoc_insertion_point(field_mutable_list:ConfigData.Heroes_Config.physic_radius)
  return &physic_radius_;
}

// float scale = 20;
inline void Heroes_Config::clear_scale() {
  scale_ = 0;
}
inline float Heroes_Config::scale() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.scale)
  return scale_;
}
inline void Heroes_Config::set_scale(float value) {
  
  scale_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.scale)
}

// repeated float shadow_scale = 21;
inline int Heroes_Config::shadow_scale_size() const {
  return shadow_scale_.size();
}
inline void Heroes_Config::clear_shadow_scale() {
  shadow_scale_.Clear();
}
inline float Heroes_Config::shadow_scale(int index) const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.shadow_scale)
  return shadow_scale_.Get(index);
}
inline void Heroes_Config::set_shadow_scale(int index, float value) {
  shadow_scale_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.shadow_scale)
}
inline void Heroes_Config::add_shadow_scale(float value) {
  shadow_scale_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigData.Heroes_Config.shadow_scale)
}
inline const ::google::protobuf::RepeatedField< float >&
Heroes_Config::shadow_scale() const {
  // @@protoc_insertion_point(field_list:ConfigData.Heroes_Config.shadow_scale)
  return shadow_scale_;
}
inline ::google::protobuf::RepeatedField< float >*
Heroes_Config::mutable_shadow_scale() {
  // @@protoc_insertion_point(field_mutable_list:ConfigData.Heroes_Config.shadow_scale)
  return &shadow_scale_;
}

// bool can_capture = 22;
inline void Heroes_Config::clear_can_capture() {
  can_capture_ = false;
}
inline bool Heroes_Config::can_capture() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.can_capture)
  return can_capture_;
}
inline void Heroes_Config::set_can_capture(bool value) {
  
  can_capture_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.can_capture)
}

// string hero_sound_short = 23;
inline void Heroes_Config::clear_hero_sound_short() {
  hero_sound_short_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Heroes_Config::hero_sound_short() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.hero_sound_short)
  return hero_sound_short_.GetNoArena();
}
inline void Heroes_Config::set_hero_sound_short(const ::std::string& value) {
  
  hero_sound_short_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.hero_sound_short)
}
#if LANG_CXX11
inline void Heroes_Config::set_hero_sound_short(::std::string&& value) {
  
  hero_sound_short_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.Heroes_Config.hero_sound_short)
}
#endif
inline void Heroes_Config::set_hero_sound_short(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hero_sound_short_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.Heroes_Config.hero_sound_short)
}
inline void Heroes_Config::set_hero_sound_short(const char* value, size_t size) {
  
  hero_sound_short_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.Heroes_Config.hero_sound_short)
}
inline ::std::string* Heroes_Config::mutable_hero_sound_short() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.Heroes_Config.hero_sound_short)
  return hero_sound_short_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Heroes_Config::release_hero_sound_short() {
  // @@protoc_insertion_point(field_release:ConfigData.Heroes_Config.hero_sound_short)
  
  return hero_sound_short_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Heroes_Config::set_allocated_hero_sound_short(::std::string* hero_sound_short) {
  if (hero_sound_short != NULL) {
    
  } else {
    
  }
  hero_sound_short_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hero_sound_short);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.Heroes_Config.hero_sound_short)
}

// float melee_dps = 24;
inline void Heroes_Config::clear_melee_dps() {
  melee_dps_ = 0;
}
inline float Heroes_Config::melee_dps() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.melee_dps)
  return melee_dps_;
}
inline void Heroes_Config::set_melee_dps(float value) {
  
  melee_dps_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.melee_dps)
}

// float melee_speed = 25;
inline void Heroes_Config::clear_melee_speed() {
  melee_speed_ = 0;
}
inline float Heroes_Config::melee_speed() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.melee_speed)
  return melee_speed_;
}
inline void Heroes_Config::set_melee_speed(float value) {
  
  melee_speed_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.melee_speed)
}

// float melee_radius = 26;
inline void Heroes_Config::clear_melee_radius() {
  melee_radius_ = 0;
}
inline float Heroes_Config::melee_radius() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.melee_radius)
  return melee_radius_;
}
inline void Heroes_Config::set_melee_radius(float value) {
  
  melee_radius_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.melee_radius)
}

// repeated string melee_hit_effect = 27;
inline int Heroes_Config::melee_hit_effect_size() const {
  return melee_hit_effect_.size();
}
inline void Heroes_Config::clear_melee_hit_effect() {
  melee_hit_effect_.Clear();
}
inline const ::std::string& Heroes_Config::melee_hit_effect(int index) const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.melee_hit_effect)
  return melee_hit_effect_.Get(index);
}
inline ::std::string* Heroes_Config::mutable_melee_hit_effect(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigData.Heroes_Config.melee_hit_effect)
  return melee_hit_effect_.Mutable(index);
}
inline void Heroes_Config::set_melee_hit_effect(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.melee_hit_effect)
  melee_hit_effect_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Heroes_Config::set_melee_hit_effect(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.melee_hit_effect)
  melee_hit_effect_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Heroes_Config::set_melee_hit_effect(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  melee_hit_effect_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ConfigData.Heroes_Config.melee_hit_effect)
}
inline void Heroes_Config::set_melee_hit_effect(int index, const char* value, size_t size) {
  melee_hit_effect_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ConfigData.Heroes_Config.melee_hit_effect)
}
inline ::std::string* Heroes_Config::add_melee_hit_effect() {
  // @@protoc_insertion_point(field_add_mutable:ConfigData.Heroes_Config.melee_hit_effect)
  return melee_hit_effect_.Add();
}
inline void Heroes_Config::add_melee_hit_effect(const ::std::string& value) {
  melee_hit_effect_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ConfigData.Heroes_Config.melee_hit_effect)
}
#if LANG_CXX11
inline void Heroes_Config::add_melee_hit_effect(::std::string&& value) {
  melee_hit_effect_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ConfigData.Heroes_Config.melee_hit_effect)
}
#endif
inline void Heroes_Config::add_melee_hit_effect(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  melee_hit_effect_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ConfigData.Heroes_Config.melee_hit_effect)
}
inline void Heroes_Config::add_melee_hit_effect(const char* value, size_t size) {
  melee_hit_effect_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ConfigData.Heroes_Config.melee_hit_effect)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Heroes_Config::melee_hit_effect() const {
  // @@protoc_insertion_point(field_list:ConfigData.Heroes_Config.melee_hit_effect)
  return melee_hit_effect_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Heroes_Config::mutable_melee_hit_effect() {
  // @@protoc_insertion_point(field_mutable_list:ConfigData.Heroes_Config.melee_hit_effect)
  return &melee_hit_effect_;
}

// float range_dps = 28;
inline void Heroes_Config::clear_range_dps() {
  range_dps_ = 0;
}
inline float Heroes_Config::range_dps() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.range_dps)
  return range_dps_;
}
inline void Heroes_Config::set_range_dps(float value) {
  
  range_dps_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.range_dps)
}

// float range_speed = 29;
inline void Heroes_Config::clear_range_speed() {
  range_speed_ = 0;
}
inline float Heroes_Config::range_speed() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.range_speed)
  return range_speed_;
}
inline void Heroes_Config::set_range_speed(float value) {
  
  range_speed_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.range_speed)
}

// float range_radius = 30;
inline void Heroes_Config::clear_range_radius() {
  range_radius_ = 0;
}
inline float Heroes_Config::range_radius() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.range_radius)
  return range_radius_;
}
inline void Heroes_Config::set_range_radius(float value) {
  
  range_radius_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.range_radius)
}

// repeated string range_hit_effect = 31;
inline int Heroes_Config::range_hit_effect_size() const {
  return range_hit_effect_.size();
}
inline void Heroes_Config::clear_range_hit_effect() {
  range_hit_effect_.Clear();
}
inline const ::std::string& Heroes_Config::range_hit_effect(int index) const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.range_hit_effect)
  return range_hit_effect_.Get(index);
}
inline ::std::string* Heroes_Config::mutable_range_hit_effect(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigData.Heroes_Config.range_hit_effect)
  return range_hit_effect_.Mutable(index);
}
inline void Heroes_Config::set_range_hit_effect(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.range_hit_effect)
  range_hit_effect_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Heroes_Config::set_range_hit_effect(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.range_hit_effect)
  range_hit_effect_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Heroes_Config::set_range_hit_effect(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  range_hit_effect_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ConfigData.Heroes_Config.range_hit_effect)
}
inline void Heroes_Config::set_range_hit_effect(int index, const char* value, size_t size) {
  range_hit_effect_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ConfigData.Heroes_Config.range_hit_effect)
}
inline ::std::string* Heroes_Config::add_range_hit_effect() {
  // @@protoc_insertion_point(field_add_mutable:ConfigData.Heroes_Config.range_hit_effect)
  return range_hit_effect_.Add();
}
inline void Heroes_Config::add_range_hit_effect(const ::std::string& value) {
  range_hit_effect_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ConfigData.Heroes_Config.range_hit_effect)
}
#if LANG_CXX11
inline void Heroes_Config::add_range_hit_effect(::std::string&& value) {
  range_hit_effect_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ConfigData.Heroes_Config.range_hit_effect)
}
#endif
inline void Heroes_Config::add_range_hit_effect(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  range_hit_effect_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ConfigData.Heroes_Config.range_hit_effect)
}
inline void Heroes_Config::add_range_hit_effect(const char* value, size_t size) {
  range_hit_effect_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ConfigData.Heroes_Config.range_hit_effect)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Heroes_Config::range_hit_effect() const {
  // @@protoc_insertion_point(field_list:ConfigData.Heroes_Config.range_hit_effect)
  return range_hit_effect_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Heroes_Config::mutable_range_hit_effect() {
  // @@protoc_insertion_point(field_mutable_list:ConfigData.Heroes_Config.range_hit_effect)
  return &range_hit_effect_;
}

// float charge_dmg = 32;
inline void Heroes_Config::clear_charge_dmg() {
  charge_dmg_ = 0;
}
inline float Heroes_Config::charge_dmg() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.charge_dmg)
  return charge_dmg_;
}
inline void Heroes_Config::set_charge_dmg(float value) {
  
  charge_dmg_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.charge_dmg)
}

// string charge_anim_effect = 33;
inline void Heroes_Config::clear_charge_anim_effect() {
  charge_anim_effect_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Heroes_Config::charge_anim_effect() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.charge_anim_effect)
  return charge_anim_effect_.GetNoArena();
}
inline void Heroes_Config::set_charge_anim_effect(const ::std::string& value) {
  
  charge_anim_effect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.charge_anim_effect)
}
#if LANG_CXX11
inline void Heroes_Config::set_charge_anim_effect(::std::string&& value) {
  
  charge_anim_effect_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.Heroes_Config.charge_anim_effect)
}
#endif
inline void Heroes_Config::set_charge_anim_effect(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  charge_anim_effect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.Heroes_Config.charge_anim_effect)
}
inline void Heroes_Config::set_charge_anim_effect(const char* value, size_t size) {
  
  charge_anim_effect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.Heroes_Config.charge_anim_effect)
}
inline ::std::string* Heroes_Config::mutable_charge_anim_effect() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.Heroes_Config.charge_anim_effect)
  return charge_anim_effect_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Heroes_Config::release_charge_anim_effect() {
  // @@protoc_insertion_point(field_release:ConfigData.Heroes_Config.charge_anim_effect)
  
  return charge_anim_effect_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Heroes_Config::set_allocated_charge_anim_effect(::std::string* charge_anim_effect) {
  if (charge_anim_effect != NULL) {
    
  } else {
    
  }
  charge_anim_effect_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), charge_anim_effect);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.Heroes_Config.charge_anim_effect)
}

// string charge_anim_effect_hit = 34;
inline void Heroes_Config::clear_charge_anim_effect_hit() {
  charge_anim_effect_hit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Heroes_Config::charge_anim_effect_hit() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.charge_anim_effect_hit)
  return charge_anim_effect_hit_.GetNoArena();
}
inline void Heroes_Config::set_charge_anim_effect_hit(const ::std::string& value) {
  
  charge_anim_effect_hit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.charge_anim_effect_hit)
}
#if LANG_CXX11
inline void Heroes_Config::set_charge_anim_effect_hit(::std::string&& value) {
  
  charge_anim_effect_hit_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.Heroes_Config.charge_anim_effect_hit)
}
#endif
inline void Heroes_Config::set_charge_anim_effect_hit(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  charge_anim_effect_hit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.Heroes_Config.charge_anim_effect_hit)
}
inline void Heroes_Config::set_charge_anim_effect_hit(const char* value, size_t size) {
  
  charge_anim_effect_hit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.Heroes_Config.charge_anim_effect_hit)
}
inline ::std::string* Heroes_Config::mutable_charge_anim_effect_hit() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.Heroes_Config.charge_anim_effect_hit)
  return charge_anim_effect_hit_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Heroes_Config::release_charge_anim_effect_hit() {
  // @@protoc_insertion_point(field_release:ConfigData.Heroes_Config.charge_anim_effect_hit)
  
  return charge_anim_effect_hit_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Heroes_Config::set_allocated_charge_anim_effect_hit(::std::string* charge_anim_effect_hit) {
  if (charge_anim_effect_hit != NULL) {
    
  } else {
    
  }
  charge_anim_effect_hit_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), charge_anim_effect_hit);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.Heroes_Config.charge_anim_effect_hit)
}

// float focus_altitude = 35;
inline void Heroes_Config::clear_focus_altitude() {
  focus_altitude_ = 0;
}
inline float Heroes_Config::focus_altitude() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.focus_altitude)
  return focus_altitude_;
}
inline void Heroes_Config::set_focus_altitude(float value) {
  
  focus_altitude_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.focus_altitude)
}

// float cri_damage = 36;
inline void Heroes_Config::clear_cri_damage() {
  cri_damage_ = 0;
}
inline float Heroes_Config::cri_damage() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.cri_damage)
  return cri_damage_;
}
inline void Heroes_Config::set_cri_damage(float value) {
  
  cri_damage_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.cri_damage)
}

// bool full_talent = 37;
inline void Heroes_Config::clear_full_talent() {
  full_talent_ = false;
}
inline bool Heroes_Config::full_talent() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.full_talent)
  return full_talent_;
}
inline void Heroes_Config::set_full_talent(bool value) {
  
  full_talent_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.full_talent)
}

// uint32 catch_reward = 38;
inline void Heroes_Config::clear_catch_reward() {
  catch_reward_ = 0u;
}
inline ::google::protobuf::uint32 Heroes_Config::catch_reward() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.catch_reward)
  return catch_reward_;
}
inline void Heroes_Config::set_catch_reward(::google::protobuf::uint32 value) {
  
  catch_reward_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.catch_reward)
}

// string hero_deviation = 39;
inline void Heroes_Config::clear_hero_deviation() {
  hero_deviation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Heroes_Config::hero_deviation() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.hero_deviation)
  return hero_deviation_.GetNoArena();
}
inline void Heroes_Config::set_hero_deviation(const ::std::string& value) {
  
  hero_deviation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.hero_deviation)
}
#if LANG_CXX11
inline void Heroes_Config::set_hero_deviation(::std::string&& value) {
  
  hero_deviation_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.Heroes_Config.hero_deviation)
}
#endif
inline void Heroes_Config::set_hero_deviation(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hero_deviation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.Heroes_Config.hero_deviation)
}
inline void Heroes_Config::set_hero_deviation(const char* value, size_t size) {
  
  hero_deviation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.Heroes_Config.hero_deviation)
}
inline ::std::string* Heroes_Config::mutable_hero_deviation() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.Heroes_Config.hero_deviation)
  return hero_deviation_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Heroes_Config::release_hero_deviation() {
  // @@protoc_insertion_point(field_release:ConfigData.Heroes_Config.hero_deviation)
  
  return hero_deviation_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Heroes_Config::set_allocated_hero_deviation(::std::string* hero_deviation) {
  if (hero_deviation != NULL) {
    
  } else {
    
  }
  hero_deviation_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hero_deviation);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.Heroes_Config.hero_deviation)
}

// string hero_profile = 40;
inline void Heroes_Config::clear_hero_profile() {
  hero_profile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Heroes_Config::hero_profile() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.hero_profile)
  return hero_profile_.GetNoArena();
}
inline void Heroes_Config::set_hero_profile(const ::std::string& value) {
  
  hero_profile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.hero_profile)
}
#if LANG_CXX11
inline void Heroes_Config::set_hero_profile(::std::string&& value) {
  
  hero_profile_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.Heroes_Config.hero_profile)
}
#endif
inline void Heroes_Config::set_hero_profile(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hero_profile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.Heroes_Config.hero_profile)
}
inline void Heroes_Config::set_hero_profile(const char* value, size_t size) {
  
  hero_profile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.Heroes_Config.hero_profile)
}
inline ::std::string* Heroes_Config::mutable_hero_profile() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.Heroes_Config.hero_profile)
  return hero_profile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Heroes_Config::release_hero_profile() {
  // @@protoc_insertion_point(field_release:ConfigData.Heroes_Config.hero_profile)
  
  return hero_profile_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Heroes_Config::set_allocated_hero_profile(::std::string* hero_profile) {
  if (hero_profile != NULL) {
    
  } else {
    
  }
  hero_profile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hero_profile);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.Heroes_Config.hero_profile)
}

// uint32 max_action_point = 41;
inline void Heroes_Config::clear_max_action_point() {
  max_action_point_ = 0u;
}
inline ::google::protobuf::uint32 Heroes_Config::max_action_point() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.max_action_point)
  return max_action_point_;
}
inline void Heroes_Config::set_max_action_point(::google::protobuf::uint32 value) {
  
  max_action_point_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.max_action_point)
}

// uint32 morale = 42;
inline void Heroes_Config::clear_morale() {
  morale_ = 0u;
}
inline ::google::protobuf::uint32 Heroes_Config::morale() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.morale)
  return morale_;
}
inline void Heroes_Config::set_morale(::google::protobuf::uint32 value) {
  
  morale_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.morale)
}

// uint32 morale_atk = 43;
inline void Heroes_Config::clear_morale_atk() {
  morale_atk_ = 0u;
}
inline ::google::protobuf::uint32 Heroes_Config::morale_atk() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.morale_atk)
  return morale_atk_;
}
inline void Heroes_Config::set_morale_atk(::google::protobuf::uint32 value) {
  
  morale_atk_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.morale_atk)
}

// uint32 morale_def = 44;
inline void Heroes_Config::clear_morale_def() {
  morale_def_ = 0u;
}
inline ::google::protobuf::uint32 Heroes_Config::morale_def() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.morale_def)
  return morale_def_;
}
inline void Heroes_Config::set_morale_def(::google::protobuf::uint32 value) {
  
  morale_def_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.morale_def)
}

// uint32 dead_morale = 45;
inline void Heroes_Config::clear_dead_morale() {
  dead_morale_ = 0u;
}
inline ::google::protobuf::uint32 Heroes_Config::dead_morale() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Config.dead_morale)
  return dead_morale_;
}
inline void Heroes_Config::set_dead_morale(::google::protobuf::uint32 value) {
  
  dead_morale_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Config.dead_morale)
}

// -------------------------------------------------------------------

// Heros_Words_Config

// uint32 id = 1;
inline void Heros_Words_Config::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 Heros_Words_Config::id() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heros_Words_Config.id)
  return id_;
}
inline void Heros_Words_Config::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heros_Words_Config.id)
}

// repeated string battle_start_words = 2;
inline int Heros_Words_Config::battle_start_words_size() const {
  return battle_start_words_.size();
}
inline void Heros_Words_Config::clear_battle_start_words() {
  battle_start_words_.Clear();
}
inline const ::std::string& Heros_Words_Config::battle_start_words(int index) const {
  // @@protoc_insertion_point(field_get:ConfigData.Heros_Words_Config.battle_start_words)
  return battle_start_words_.Get(index);
}
inline ::std::string* Heros_Words_Config::mutable_battle_start_words(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigData.Heros_Words_Config.battle_start_words)
  return battle_start_words_.Mutable(index);
}
inline void Heros_Words_Config::set_battle_start_words(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ConfigData.Heros_Words_Config.battle_start_words)
  battle_start_words_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Heros_Words_Config::set_battle_start_words(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ConfigData.Heros_Words_Config.battle_start_words)
  battle_start_words_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Heros_Words_Config::set_battle_start_words(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  battle_start_words_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ConfigData.Heros_Words_Config.battle_start_words)
}
inline void Heros_Words_Config::set_battle_start_words(int index, const char* value, size_t size) {
  battle_start_words_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ConfigData.Heros_Words_Config.battle_start_words)
}
inline ::std::string* Heros_Words_Config::add_battle_start_words() {
  // @@protoc_insertion_point(field_add_mutable:ConfigData.Heros_Words_Config.battle_start_words)
  return battle_start_words_.Add();
}
inline void Heros_Words_Config::add_battle_start_words(const ::std::string& value) {
  battle_start_words_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ConfigData.Heros_Words_Config.battle_start_words)
}
#if LANG_CXX11
inline void Heros_Words_Config::add_battle_start_words(::std::string&& value) {
  battle_start_words_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ConfigData.Heros_Words_Config.battle_start_words)
}
#endif
inline void Heros_Words_Config::add_battle_start_words(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  battle_start_words_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ConfigData.Heros_Words_Config.battle_start_words)
}
inline void Heros_Words_Config::add_battle_start_words(const char* value, size_t size) {
  battle_start_words_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ConfigData.Heros_Words_Config.battle_start_words)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Heros_Words_Config::battle_start_words() const {
  // @@protoc_insertion_point(field_list:ConfigData.Heros_Words_Config.battle_start_words)
  return battle_start_words_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Heros_Words_Config::mutable_battle_start_words() {
  // @@protoc_insertion_point(field_mutable_list:ConfigData.Heros_Words_Config.battle_start_words)
  return &battle_start_words_;
}

// repeated string charge_words = 3;
inline int Heros_Words_Config::charge_words_size() const {
  return charge_words_.size();
}
inline void Heros_Words_Config::clear_charge_words() {
  charge_words_.Clear();
}
inline const ::std::string& Heros_Words_Config::charge_words(int index) const {
  // @@protoc_insertion_point(field_get:ConfigData.Heros_Words_Config.charge_words)
  return charge_words_.Get(index);
}
inline ::std::string* Heros_Words_Config::mutable_charge_words(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigData.Heros_Words_Config.charge_words)
  return charge_words_.Mutable(index);
}
inline void Heros_Words_Config::set_charge_words(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ConfigData.Heros_Words_Config.charge_words)
  charge_words_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Heros_Words_Config::set_charge_words(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ConfigData.Heros_Words_Config.charge_words)
  charge_words_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Heros_Words_Config::set_charge_words(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  charge_words_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ConfigData.Heros_Words_Config.charge_words)
}
inline void Heros_Words_Config::set_charge_words(int index, const char* value, size_t size) {
  charge_words_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ConfigData.Heros_Words_Config.charge_words)
}
inline ::std::string* Heros_Words_Config::add_charge_words() {
  // @@protoc_insertion_point(field_add_mutable:ConfigData.Heros_Words_Config.charge_words)
  return charge_words_.Add();
}
inline void Heros_Words_Config::add_charge_words(const ::std::string& value) {
  charge_words_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ConfigData.Heros_Words_Config.charge_words)
}
#if LANG_CXX11
inline void Heros_Words_Config::add_charge_words(::std::string&& value) {
  charge_words_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ConfigData.Heros_Words_Config.charge_words)
}
#endif
inline void Heros_Words_Config::add_charge_words(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  charge_words_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ConfigData.Heros_Words_Config.charge_words)
}
inline void Heros_Words_Config::add_charge_words(const char* value, size_t size) {
  charge_words_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ConfigData.Heros_Words_Config.charge_words)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Heros_Words_Config::charge_words() const {
  // @@protoc_insertion_point(field_list:ConfigData.Heros_Words_Config.charge_words)
  return charge_words_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Heros_Words_Config::mutable_charge_words() {
  // @@protoc_insertion_point(field_mutable_list:ConfigData.Heros_Words_Config.charge_words)
  return &charge_words_;
}

// repeated string cast_spell_words = 4;
inline int Heros_Words_Config::cast_spell_words_size() const {
  return cast_spell_words_.size();
}
inline void Heros_Words_Config::clear_cast_spell_words() {
  cast_spell_words_.Clear();
}
inline const ::std::string& Heros_Words_Config::cast_spell_words(int index) const {
  // @@protoc_insertion_point(field_get:ConfigData.Heros_Words_Config.cast_spell_words)
  return cast_spell_words_.Get(index);
}
inline ::std::string* Heros_Words_Config::mutable_cast_spell_words(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigData.Heros_Words_Config.cast_spell_words)
  return cast_spell_words_.Mutable(index);
}
inline void Heros_Words_Config::set_cast_spell_words(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ConfigData.Heros_Words_Config.cast_spell_words)
  cast_spell_words_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Heros_Words_Config::set_cast_spell_words(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ConfigData.Heros_Words_Config.cast_spell_words)
  cast_spell_words_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Heros_Words_Config::set_cast_spell_words(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  cast_spell_words_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ConfigData.Heros_Words_Config.cast_spell_words)
}
inline void Heros_Words_Config::set_cast_spell_words(int index, const char* value, size_t size) {
  cast_spell_words_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ConfigData.Heros_Words_Config.cast_spell_words)
}
inline ::std::string* Heros_Words_Config::add_cast_spell_words() {
  // @@protoc_insertion_point(field_add_mutable:ConfigData.Heros_Words_Config.cast_spell_words)
  return cast_spell_words_.Add();
}
inline void Heros_Words_Config::add_cast_spell_words(const ::std::string& value) {
  cast_spell_words_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ConfigData.Heros_Words_Config.cast_spell_words)
}
#if LANG_CXX11
inline void Heros_Words_Config::add_cast_spell_words(::std::string&& value) {
  cast_spell_words_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ConfigData.Heros_Words_Config.cast_spell_words)
}
#endif
inline void Heros_Words_Config::add_cast_spell_words(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  cast_spell_words_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ConfigData.Heros_Words_Config.cast_spell_words)
}
inline void Heros_Words_Config::add_cast_spell_words(const char* value, size_t size) {
  cast_spell_words_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ConfigData.Heros_Words_Config.cast_spell_words)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Heros_Words_Config::cast_spell_words() const {
  // @@protoc_insertion_point(field_list:ConfigData.Heros_Words_Config.cast_spell_words)
  return cast_spell_words_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Heros_Words_Config::mutable_cast_spell_words() {
  // @@protoc_insertion_point(field_mutable_list:ConfigData.Heros_Words_Config.cast_spell_words)
  return &cast_spell_words_;
}

// repeated string last_words = 5;
inline int Heros_Words_Config::last_words_size() const {
  return last_words_.size();
}
inline void Heros_Words_Config::clear_last_words() {
  last_words_.Clear();
}
inline const ::std::string& Heros_Words_Config::last_words(int index) const {
  // @@protoc_insertion_point(field_get:ConfigData.Heros_Words_Config.last_words)
  return last_words_.Get(index);
}
inline ::std::string* Heros_Words_Config::mutable_last_words(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigData.Heros_Words_Config.last_words)
  return last_words_.Mutable(index);
}
inline void Heros_Words_Config::set_last_words(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ConfigData.Heros_Words_Config.last_words)
  last_words_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Heros_Words_Config::set_last_words(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ConfigData.Heros_Words_Config.last_words)
  last_words_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Heros_Words_Config::set_last_words(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  last_words_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ConfigData.Heros_Words_Config.last_words)
}
inline void Heros_Words_Config::set_last_words(int index, const char* value, size_t size) {
  last_words_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ConfigData.Heros_Words_Config.last_words)
}
inline ::std::string* Heros_Words_Config::add_last_words() {
  // @@protoc_insertion_point(field_add_mutable:ConfigData.Heros_Words_Config.last_words)
  return last_words_.Add();
}
inline void Heros_Words_Config::add_last_words(const ::std::string& value) {
  last_words_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ConfigData.Heros_Words_Config.last_words)
}
#if LANG_CXX11
inline void Heros_Words_Config::add_last_words(::std::string&& value) {
  last_words_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ConfigData.Heros_Words_Config.last_words)
}
#endif
inline void Heros_Words_Config::add_last_words(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  last_words_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ConfigData.Heros_Words_Config.last_words)
}
inline void Heros_Words_Config::add_last_words(const char* value, size_t size) {
  last_words_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ConfigData.Heros_Words_Config.last_words)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Heros_Words_Config::last_words() const {
  // @@protoc_insertion_point(field_list:ConfigData.Heros_Words_Config.last_words)
  return last_words_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Heros_Words_Config::mutable_last_words() {
  // @@protoc_insertion_point(field_mutable_list:ConfigData.Heros_Words_Config.last_words)
  return &last_words_;
}

// -------------------------------------------------------------------

// Heroes_Data_Config

// uint32 id = 1;
inline void Heroes_Data_Config::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 Heroes_Data_Config::id() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Data_Config.id)
  return id_;
}
inline void Heroes_Data_Config::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Data_Config.id)
}

// uint32 hero_id = 2;
inline void Heroes_Data_Config::clear_hero_id() {
  hero_id_ = 0u;
}
inline ::google::protobuf::uint32 Heroes_Data_Config::hero_id() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Data_Config.hero_id)
  return hero_id_;
}
inline void Heroes_Data_Config::set_hero_id(::google::protobuf::uint32 value) {
  
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Data_Config.hero_id)
}

// int32 floor = 3;
inline void Heroes_Data_Config::clear_floor() {
  floor_ = 0;
}
inline ::google::protobuf::int32 Heroes_Data_Config::floor() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Data_Config.floor)
  return floor_;
}
inline void Heroes_Data_Config::set_floor(::google::protobuf::int32 value) {
  
  floor_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Data_Config.floor)
}

// float hp_base = 4;
inline void Heroes_Data_Config::clear_hp_base() {
  hp_base_ = 0;
}
inline float Heroes_Data_Config::hp_base() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Data_Config.hp_base)
  return hp_base_;
}
inline void Heroes_Data_Config::set_hp_base(float value) {
  
  hp_base_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Data_Config.hp_base)
}

// float hp_growth = 5;
inline void Heroes_Data_Config::clear_hp_growth() {
  hp_growth_ = 0;
}
inline float Heroes_Data_Config::hp_growth() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Data_Config.hp_growth)
  return hp_growth_;
}
inline void Heroes_Data_Config::set_hp_growth(float value) {
  
  hp_growth_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Data_Config.hp_growth)
}

// float attack_base = 6;
inline void Heroes_Data_Config::clear_attack_base() {
  attack_base_ = 0;
}
inline float Heroes_Data_Config::attack_base() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Data_Config.attack_base)
  return attack_base_;
}
inline void Heroes_Data_Config::set_attack_base(float value) {
  
  attack_base_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Data_Config.attack_base)
}

// float attack_growth = 7;
inline void Heroes_Data_Config::clear_attack_growth() {
  attack_growth_ = 0;
}
inline float Heroes_Data_Config::attack_growth() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Data_Config.attack_growth)
  return attack_growth_;
}
inline void Heroes_Data_Config::set_attack_growth(float value) {
  
  attack_growth_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Data_Config.attack_growth)
}

// float real_attack_base = 8;
inline void Heroes_Data_Config::clear_real_attack_base() {
  real_attack_base_ = 0;
}
inline float Heroes_Data_Config::real_attack_base() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Data_Config.real_attack_base)
  return real_attack_base_;
}
inline void Heroes_Data_Config::set_real_attack_base(float value) {
  
  real_attack_base_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Data_Config.real_attack_base)
}

// float real_attack_growth = 9;
inline void Heroes_Data_Config::clear_real_attack_growth() {
  real_attack_growth_ = 0;
}
inline float Heroes_Data_Config::real_attack_growth() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Data_Config.real_attack_growth)
  return real_attack_growth_;
}
inline void Heroes_Data_Config::set_real_attack_growth(float value) {
  
  real_attack_growth_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Data_Config.real_attack_growth)
}

// float defence_base = 10;
inline void Heroes_Data_Config::clear_defence_base() {
  defence_base_ = 0;
}
inline float Heroes_Data_Config::defence_base() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Data_Config.defence_base)
  return defence_base_;
}
inline void Heroes_Data_Config::set_defence_base(float value) {
  
  defence_base_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Data_Config.defence_base)
}

// float defence_growth = 11;
inline void Heroes_Data_Config::clear_defence_growth() {
  defence_growth_ = 0;
}
inline float Heroes_Data_Config::defence_growth() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Data_Config.defence_growth)
  return defence_growth_;
}
inline void Heroes_Data_Config::set_defence_growth(float value) {
  
  defence_growth_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Data_Config.defence_growth)
}

// float dodge_base = 12;
inline void Heroes_Data_Config::clear_dodge_base() {
  dodge_base_ = 0;
}
inline float Heroes_Data_Config::dodge_base() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Data_Config.dodge_base)
  return dodge_base_;
}
inline void Heroes_Data_Config::set_dodge_base(float value) {
  
  dodge_base_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Data_Config.dodge_base)
}

// float dodge_growth = 13;
inline void Heroes_Data_Config::clear_dodge_growth() {
  dodge_growth_ = 0;
}
inline float Heroes_Data_Config::dodge_growth() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Data_Config.dodge_growth)
  return dodge_growth_;
}
inline void Heroes_Data_Config::set_dodge_growth(float value) {
  
  dodge_growth_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Data_Config.dodge_growth)
}

// float critical_base = 14;
inline void Heroes_Data_Config::clear_critical_base() {
  critical_base_ = 0;
}
inline float Heroes_Data_Config::critical_base() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Data_Config.critical_base)
  return critical_base_;
}
inline void Heroes_Data_Config::set_critical_base(float value) {
  
  critical_base_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Data_Config.critical_base)
}

// float critical_growth = 15;
inline void Heroes_Data_Config::clear_critical_growth() {
  critical_growth_ = 0;
}
inline float Heroes_Data_Config::critical_growth() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Data_Config.critical_growth)
  return critical_growth_;
}
inline void Heroes_Data_Config::set_critical_growth(float value) {
  
  critical_growth_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Data_Config.critical_growth)
}

// float conquer_time_base = 16;
inline void Heroes_Data_Config::clear_conquer_time_base() {
  conquer_time_base_ = 0;
}
inline float Heroes_Data_Config::conquer_time_base() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Data_Config.conquer_time_base)
  return conquer_time_base_;
}
inline void Heroes_Data_Config::set_conquer_time_base(float value) {
  
  conquer_time_base_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Data_Config.conquer_time_base)
}

// float conquer_time_growth = 17;
inline void Heroes_Data_Config::clear_conquer_time_growth() {
  conquer_time_growth_ = 0;
}
inline float Heroes_Data_Config::conquer_time_growth() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Data_Config.conquer_time_growth)
  return conquer_time_growth_;
}
inline void Heroes_Data_Config::set_conquer_time_growth(float value) {
  
  conquer_time_growth_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Data_Config.conquer_time_growth)
}

// int32 max_level = 18;
inline void Heroes_Data_Config::clear_max_level() {
  max_level_ = 0;
}
inline ::google::protobuf::int32 Heroes_Data_Config::max_level() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Data_Config.max_level)
  return max_level_;
}
inline void Heroes_Data_Config::set_max_level(::google::protobuf::int32 value) {
  
  max_level_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Data_Config.max_level)
}

// repeated uint32 up_materials = 19;
inline int Heroes_Data_Config::up_materials_size() const {
  return up_materials_.size();
}
inline void Heroes_Data_Config::clear_up_materials() {
  up_materials_.Clear();
}
inline ::google::protobuf::uint32 Heroes_Data_Config::up_materials(int index) const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Data_Config.up_materials)
  return up_materials_.Get(index);
}
inline void Heroes_Data_Config::set_up_materials(int index, ::google::protobuf::uint32 value) {
  up_materials_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Data_Config.up_materials)
}
inline void Heroes_Data_Config::add_up_materials(::google::protobuf::uint32 value) {
  up_materials_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigData.Heroes_Data_Config.up_materials)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Heroes_Data_Config::up_materials() const {
  // @@protoc_insertion_point(field_list:ConfigData.Heroes_Data_Config.up_materials)
  return up_materials_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Heroes_Data_Config::mutable_up_materials() {
  // @@protoc_insertion_point(field_mutable_list:ConfigData.Heroes_Data_Config.up_materials)
  return &up_materials_;
}

// int32 player_lv = 20;
inline void Heroes_Data_Config::clear_player_lv() {
  player_lv_ = 0;
}
inline ::google::protobuf::int32 Heroes_Data_Config::player_lv() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Data_Config.player_lv)
  return player_lv_;
}
inline void Heroes_Data_Config::set_player_lv(::google::protobuf::int32 value) {
  
  player_lv_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Data_Config.player_lv)
}

// -------------------------------------------------------------------

// Heroes_Skill_Config

// uint32 id = 1;
inline void Heroes_Skill_Config::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 Heroes_Skill_Config::id() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Skill_Config.id)
  return id_;
}
inline void Heroes_Skill_Config::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Skill_Config.id)
}

// uint32 hero_id = 2;
inline void Heroes_Skill_Config::clear_hero_id() {
  hero_id_ = 0u;
}
inline ::google::protobuf::uint32 Heroes_Skill_Config::hero_id() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Skill_Config.hero_id)
  return hero_id_;
}
inline void Heroes_Skill_Config::set_hero_id(::google::protobuf::uint32 value) {
  
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Skill_Config.hero_id)
}

// uint32 skill_slot = 3;
inline void Heroes_Skill_Config::clear_skill_slot() {
  skill_slot_ = 0u;
}
inline ::google::protobuf::uint32 Heroes_Skill_Config::skill_slot() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Skill_Config.skill_slot)
  return skill_slot_;
}
inline void Heroes_Skill_Config::set_skill_slot(::google::protobuf::uint32 value) {
  
  skill_slot_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Skill_Config.skill_slot)
}

// uint32 quality = 4;
inline void Heroes_Skill_Config::clear_quality() {
  quality_ = 0u;
}
inline ::google::protobuf::uint32 Heroes_Skill_Config::quality() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Skill_Config.quality)
  return quality_;
}
inline void Heroes_Skill_Config::set_quality(::google::protobuf::uint32 value) {
  
  quality_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Skill_Config.quality)
}

// uint32 need_level = 5;
inline void Heroes_Skill_Config::clear_need_level() {
  need_level_ = 0u;
}
inline ::google::protobuf::uint32 Heroes_Skill_Config::need_level() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Skill_Config.need_level)
  return need_level_;
}
inline void Heroes_Skill_Config::set_need_level(::google::protobuf::uint32 value) {
  
  need_level_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Skill_Config.need_level)
}

// int32 need_rank = 6;
inline void Heroes_Skill_Config::clear_need_rank() {
  need_rank_ = 0;
}
inline ::google::protobuf::int32 Heroes_Skill_Config::need_rank() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Skill_Config.need_rank)
  return need_rank_;
}
inline void Heroes_Skill_Config::set_need_rank(::google::protobuf::int32 value) {
  
  need_rank_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Skill_Config.need_rank)
}

// repeated uint32 skill_table = 7;
inline int Heroes_Skill_Config::skill_table_size() const {
  return skill_table_.size();
}
inline void Heroes_Skill_Config::clear_skill_table() {
  skill_table_.Clear();
}
inline ::google::protobuf::uint32 Heroes_Skill_Config::skill_table(int index) const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Skill_Config.skill_table)
  return skill_table_.Get(index);
}
inline void Heroes_Skill_Config::set_skill_table(int index, ::google::protobuf::uint32 value) {
  skill_table_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Skill_Config.skill_table)
}
inline void Heroes_Skill_Config::add_skill_table(::google::protobuf::uint32 value) {
  skill_table_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigData.Heroes_Skill_Config.skill_table)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Heroes_Skill_Config::skill_table() const {
  // @@protoc_insertion_point(field_list:ConfigData.Heroes_Skill_Config.skill_table)
  return skill_table_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Heroes_Skill_Config::mutable_skill_table() {
  // @@protoc_insertion_point(field_mutable_list:ConfigData.Heroes_Skill_Config.skill_table)
  return &skill_table_;
}

// repeated uint32 materials = 8;
inline int Heroes_Skill_Config::materials_size() const {
  return materials_.size();
}
inline void Heroes_Skill_Config::clear_materials() {
  materials_.Clear();
}
inline ::google::protobuf::uint32 Heroes_Skill_Config::materials(int index) const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Skill_Config.materials)
  return materials_.Get(index);
}
inline void Heroes_Skill_Config::set_materials(int index, ::google::protobuf::uint32 value) {
  materials_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Skill_Config.materials)
}
inline void Heroes_Skill_Config::add_materials(::google::protobuf::uint32 value) {
  materials_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigData.Heroes_Skill_Config.materials)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Heroes_Skill_Config::materials() const {
  // @@protoc_insertion_point(field_list:ConfigData.Heroes_Skill_Config.materials)
  return materials_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Heroes_Skill_Config::mutable_materials() {
  // @@protoc_insertion_point(field_mutable_list:ConfigData.Heroes_Skill_Config.materials)
  return &materials_;
}

// repeated uint32 up_materials = 9;
inline int Heroes_Skill_Config::up_materials_size() const {
  return up_materials_.size();
}
inline void Heroes_Skill_Config::clear_up_materials() {
  up_materials_.Clear();
}
inline ::google::protobuf::uint32 Heroes_Skill_Config::up_materials(int index) const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Skill_Config.up_materials)
  return up_materials_.Get(index);
}
inline void Heroes_Skill_Config::set_up_materials(int index, ::google::protobuf::uint32 value) {
  up_materials_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Skill_Config.up_materials)
}
inline void Heroes_Skill_Config::add_up_materials(::google::protobuf::uint32 value) {
  up_materials_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigData.Heroes_Skill_Config.up_materials)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Heroes_Skill_Config::up_materials() const {
  // @@protoc_insertion_point(field_list:ConfigData.Heroes_Skill_Config.up_materials)
  return up_materials_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Heroes_Skill_Config::mutable_up_materials() {
  // @@protoc_insertion_point(field_mutable_list:ConfigData.Heroes_Skill_Config.up_materials)
  return &up_materials_;
}

// -------------------------------------------------------------------

// Heroes_Rank_Config

// uint32 id = 1;
inline void Heroes_Rank_Config::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 Heroes_Rank_Config::id() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Rank_Config.id)
  return id_;
}
inline void Heroes_Rank_Config::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Rank_Config.id)
}

// uint32 hero_id = 2;
inline void Heroes_Rank_Config::clear_hero_id() {
  hero_id_ = 0u;
}
inline ::google::protobuf::uint32 Heroes_Rank_Config::hero_id() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Rank_Config.hero_id)
  return hero_id_;
}
inline void Heroes_Rank_Config::set_hero_id(::google::protobuf::uint32 value) {
  
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Rank_Config.hero_id)
}

// uint32 rank = 3;
inline void Heroes_Rank_Config::clear_rank() {
  rank_ = 0u;
}
inline ::google::protobuf::uint32 Heroes_Rank_Config::rank() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Rank_Config.rank)
  return rank_;
}
inline void Heroes_Rank_Config::set_rank(::google::protobuf::uint32 value) {
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Rank_Config.rank)
}

// uint32 exp = 4;
inline void Heroes_Rank_Config::clear_exp() {
  exp_ = 0u;
}
inline ::google::protobuf::uint32 Heroes_Rank_Config::exp() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Rank_Config.exp)
  return exp_;
}
inline void Heroes_Rank_Config::set_exp(::google::protobuf::uint32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Rank_Config.exp)
}

// uint32 level_limit = 5;
inline void Heroes_Rank_Config::clear_level_limit() {
  level_limit_ = 0u;
}
inline ::google::protobuf::uint32 Heroes_Rank_Config::level_limit() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Rank_Config.level_limit)
  return level_limit_;
}
inline void Heroes_Rank_Config::set_level_limit(::google::protobuf::uint32 value) {
  
  level_limit_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Rank_Config.level_limit)
}

// float hp = 6;
inline void Heroes_Rank_Config::clear_hp() {
  hp_ = 0;
}
inline float Heroes_Rank_Config::hp() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Rank_Config.hp)
  return hp_;
}
inline void Heroes_Rank_Config::set_hp(float value) {
  
  hp_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Rank_Config.hp)
}

// float attack = 7;
inline void Heroes_Rank_Config::clear_attack() {
  attack_ = 0;
}
inline float Heroes_Rank_Config::attack() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Rank_Config.attack)
  return attack_;
}
inline void Heroes_Rank_Config::set_attack(float value) {
  
  attack_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Rank_Config.attack)
}

// float real_attack = 8;
inline void Heroes_Rank_Config::clear_real_attack() {
  real_attack_ = 0;
}
inline float Heroes_Rank_Config::real_attack() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Rank_Config.real_attack)
  return real_attack_;
}
inline void Heroes_Rank_Config::set_real_attack(float value) {
  
  real_attack_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Rank_Config.real_attack)
}

// float defence = 9;
inline void Heroes_Rank_Config::clear_defence() {
  defence_ = 0;
}
inline float Heroes_Rank_Config::defence() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Rank_Config.defence)
  return defence_;
}
inline void Heroes_Rank_Config::set_defence(float value) {
  
  defence_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Rank_Config.defence)
}

// float dodge = 10;
inline void Heroes_Rank_Config::clear_dodge() {
  dodge_ = 0;
}
inline float Heroes_Rank_Config::dodge() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Rank_Config.dodge)
  return dodge_;
}
inline void Heroes_Rank_Config::set_dodge(float value) {
  
  dodge_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Rank_Config.dodge)
}

// float critical = 11;
inline void Heroes_Rank_Config::clear_critical() {
  critical_ = 0;
}
inline float Heroes_Rank_Config::critical() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Rank_Config.critical)
  return critical_;
}
inline void Heroes_Rank_Config::set_critical(float value) {
  
  critical_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Rank_Config.critical)
}

// uint32 hero_appear_id = 12;
inline void Heroes_Rank_Config::clear_hero_appear_id() {
  hero_appear_id_ = 0u;
}
inline ::google::protobuf::uint32 Heroes_Rank_Config::hero_appear_id() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Rank_Config.hero_appear_id)
  return hero_appear_id_;
}
inline void Heroes_Rank_Config::set_hero_appear_id(::google::protobuf::uint32 value) {
  
  hero_appear_id_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Rank_Config.hero_appear_id)
}

// uint32 solider_id = 13;
inline void Heroes_Rank_Config::clear_solider_id() {
  solider_id_ = 0u;
}
inline ::google::protobuf::uint32 Heroes_Rank_Config::solider_id() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Rank_Config.solider_id)
  return solider_id_;
}
inline void Heroes_Rank_Config::set_solider_id(::google::protobuf::uint32 value) {
  
  solider_id_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Rank_Config.solider_id)
}

// uint32 spell_count = 14;
inline void Heroes_Rank_Config::clear_spell_count() {
  spell_count_ = 0u;
}
inline ::google::protobuf::uint32 Heroes_Rank_Config::spell_count() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Rank_Config.spell_count)
  return spell_count_;
}
inline void Heroes_Rank_Config::set_spell_count(::google::protobuf::uint32 value) {
  
  spell_count_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Rank_Config.spell_count)
}

// -------------------------------------------------------------------

// Solo_Hero_Config

// uint32 id = 1;
inline void Solo_Hero_Config::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 Solo_Hero_Config::id() const {
  // @@protoc_insertion_point(field_get:ConfigData.Solo_Hero_Config.id)
  return id_;
}
inline void Solo_Hero_Config::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Solo_Hero_Config.id)
}

// uint32 joystick_mode = 2;
inline void Solo_Hero_Config::clear_joystick_mode() {
  joystick_mode_ = 0u;
}
inline ::google::protobuf::uint32 Solo_Hero_Config::joystick_mode() const {
  // @@protoc_insertion_point(field_get:ConfigData.Solo_Hero_Config.joystick_mode)
  return joystick_mode_;
}
inline void Solo_Hero_Config::set_joystick_mode(::google::protobuf::uint32 value) {
  
  joystick_mode_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Solo_Hero_Config.joystick_mode)
}

// uint32 power_max = 3;
inline void Solo_Hero_Config::clear_power_max() {
  power_max_ = 0u;
}
inline ::google::protobuf::uint32 Solo_Hero_Config::power_max() const {
  // @@protoc_insertion_point(field_get:ConfigData.Solo_Hero_Config.power_max)
  return power_max_;
}
inline void Solo_Hero_Config::set_power_max(::google::protobuf::uint32 value) {
  
  power_max_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Solo_Hero_Config.power_max)
}

// repeated float power_recover = 4;
inline int Solo_Hero_Config::power_recover_size() const {
  return power_recover_.size();
}
inline void Solo_Hero_Config::clear_power_recover() {
  power_recover_.Clear();
}
inline float Solo_Hero_Config::power_recover(int index) const {
  // @@protoc_insertion_point(field_get:ConfigData.Solo_Hero_Config.power_recover)
  return power_recover_.Get(index);
}
inline void Solo_Hero_Config::set_power_recover(int index, float value) {
  power_recover_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigData.Solo_Hero_Config.power_recover)
}
inline void Solo_Hero_Config::add_power_recover(float value) {
  power_recover_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigData.Solo_Hero_Config.power_recover)
}
inline const ::google::protobuf::RepeatedField< float >&
Solo_Hero_Config::power_recover() const {
  // @@protoc_insertion_point(field_list:ConfigData.Solo_Hero_Config.power_recover)
  return power_recover_;
}
inline ::google::protobuf::RepeatedField< float >*
Solo_Hero_Config::mutable_power_recover() {
  // @@protoc_insertion_point(field_mutable_list:ConfigData.Solo_Hero_Config.power_recover)
  return &power_recover_;
}

// repeated float combo_atk = 5;
inline int Solo_Hero_Config::combo_atk_size() const {
  return combo_atk_.size();
}
inline void Solo_Hero_Config::clear_combo_atk() {
  combo_atk_.Clear();
}
inline float Solo_Hero_Config::combo_atk(int index) const {
  // @@protoc_insertion_point(field_get:ConfigData.Solo_Hero_Config.combo_atk)
  return combo_atk_.Get(index);
}
inline void Solo_Hero_Config::set_combo_atk(int index, float value) {
  combo_atk_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigData.Solo_Hero_Config.combo_atk)
}
inline void Solo_Hero_Config::add_combo_atk(float value) {
  combo_atk_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigData.Solo_Hero_Config.combo_atk)
}
inline const ::google::protobuf::RepeatedField< float >&
Solo_Hero_Config::combo_atk() const {
  // @@protoc_insertion_point(field_list:ConfigData.Solo_Hero_Config.combo_atk)
  return combo_atk_;
}
inline ::google::protobuf::RepeatedField< float >*
Solo_Hero_Config::mutable_combo_atk() {
  // @@protoc_insertion_point(field_mutable_list:ConfigData.Solo_Hero_Config.combo_atk)
  return &combo_atk_;
}

// float speed_rate = 6;
inline void Solo_Hero_Config::clear_speed_rate() {
  speed_rate_ = 0;
}
inline float Solo_Hero_Config::speed_rate() const {
  // @@protoc_insertion_point(field_get:ConfigData.Solo_Hero_Config.speed_rate)
  return speed_rate_;
}
inline void Solo_Hero_Config::set_speed_rate(float value) {
  
  speed_rate_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Solo_Hero_Config.speed_rate)
}

// float atk_range = 7;
inline void Solo_Hero_Config::clear_atk_range() {
  atk_range_ = 0;
}
inline float Solo_Hero_Config::atk_range() const {
  // @@protoc_insertion_point(field_get:ConfigData.Solo_Hero_Config.atk_range)
  return atk_range_;
}
inline void Solo_Hero_Config::set_atk_range(float value) {
  
  atk_range_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Solo_Hero_Config.atk_range)
}

// repeated float dmg_range = 8;
inline int Solo_Hero_Config::dmg_range_size() const {
  return dmg_range_.size();
}
inline void Solo_Hero_Config::clear_dmg_range() {
  dmg_range_.Clear();
}
inline float Solo_Hero_Config::dmg_range(int index) const {
  // @@protoc_insertion_point(field_get:ConfigData.Solo_Hero_Config.dmg_range)
  return dmg_range_.Get(index);
}
inline void Solo_Hero_Config::set_dmg_range(int index, float value) {
  dmg_range_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigData.Solo_Hero_Config.dmg_range)
}
inline void Solo_Hero_Config::add_dmg_range(float value) {
  dmg_range_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigData.Solo_Hero_Config.dmg_range)
}
inline const ::google::protobuf::RepeatedField< float >&
Solo_Hero_Config::dmg_range() const {
  // @@protoc_insertion_point(field_list:ConfigData.Solo_Hero_Config.dmg_range)
  return dmg_range_;
}
inline ::google::protobuf::RepeatedField< float >*
Solo_Hero_Config::mutable_dmg_range() {
  // @@protoc_insertion_point(field_mutable_list:ConfigData.Solo_Hero_Config.dmg_range)
  return &dmg_range_;
}

// repeated float dmg_angle = 9;
inline int Solo_Hero_Config::dmg_angle_size() const {
  return dmg_angle_.size();
}
inline void Solo_Hero_Config::clear_dmg_angle() {
  dmg_angle_.Clear();
}
inline float Solo_Hero_Config::dmg_angle(int index) const {
  // @@protoc_insertion_point(field_get:ConfigData.Solo_Hero_Config.dmg_angle)
  return dmg_angle_.Get(index);
}
inline void Solo_Hero_Config::set_dmg_angle(int index, float value) {
  dmg_angle_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigData.Solo_Hero_Config.dmg_angle)
}
inline void Solo_Hero_Config::add_dmg_angle(float value) {
  dmg_angle_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigData.Solo_Hero_Config.dmg_angle)
}
inline const ::google::protobuf::RepeatedField< float >&
Solo_Hero_Config::dmg_angle() const {
  // @@protoc_insertion_point(field_list:ConfigData.Solo_Hero_Config.dmg_angle)
  return dmg_angle_;
}
inline ::google::protobuf::RepeatedField< float >*
Solo_Hero_Config::mutable_dmg_angle() {
  // @@protoc_insertion_point(field_mutable_list:ConfigData.Solo_Hero_Config.dmg_angle)
  return &dmg_angle_;
}

// repeated string solo_shake_effect = 10;
inline int Solo_Hero_Config::solo_shake_effect_size() const {
  return solo_shake_effect_.size();
}
inline void Solo_Hero_Config::clear_solo_shake_effect() {
  solo_shake_effect_.Clear();
}
inline const ::std::string& Solo_Hero_Config::solo_shake_effect(int index) const {
  // @@protoc_insertion_point(field_get:ConfigData.Solo_Hero_Config.solo_shake_effect)
  return solo_shake_effect_.Get(index);
}
inline ::std::string* Solo_Hero_Config::mutable_solo_shake_effect(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigData.Solo_Hero_Config.solo_shake_effect)
  return solo_shake_effect_.Mutable(index);
}
inline void Solo_Hero_Config::set_solo_shake_effect(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ConfigData.Solo_Hero_Config.solo_shake_effect)
  solo_shake_effect_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Solo_Hero_Config::set_solo_shake_effect(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ConfigData.Solo_Hero_Config.solo_shake_effect)
  solo_shake_effect_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Solo_Hero_Config::set_solo_shake_effect(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  solo_shake_effect_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ConfigData.Solo_Hero_Config.solo_shake_effect)
}
inline void Solo_Hero_Config::set_solo_shake_effect(int index, const char* value, size_t size) {
  solo_shake_effect_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ConfigData.Solo_Hero_Config.solo_shake_effect)
}
inline ::std::string* Solo_Hero_Config::add_solo_shake_effect() {
  // @@protoc_insertion_point(field_add_mutable:ConfigData.Solo_Hero_Config.solo_shake_effect)
  return solo_shake_effect_.Add();
}
inline void Solo_Hero_Config::add_solo_shake_effect(const ::std::string& value) {
  solo_shake_effect_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ConfigData.Solo_Hero_Config.solo_shake_effect)
}
#if LANG_CXX11
inline void Solo_Hero_Config::add_solo_shake_effect(::std::string&& value) {
  solo_shake_effect_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ConfigData.Solo_Hero_Config.solo_shake_effect)
}
#endif
inline void Solo_Hero_Config::add_solo_shake_effect(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  solo_shake_effect_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ConfigData.Solo_Hero_Config.solo_shake_effect)
}
inline void Solo_Hero_Config::add_solo_shake_effect(const char* value, size_t size) {
  solo_shake_effect_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ConfigData.Solo_Hero_Config.solo_shake_effect)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Solo_Hero_Config::solo_shake_effect() const {
  // @@protoc_insertion_point(field_list:ConfigData.Solo_Hero_Config.solo_shake_effect)
  return solo_shake_effect_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Solo_Hero_Config::mutable_solo_shake_effect() {
  // @@protoc_insertion_point(field_mutable_list:ConfigData.Solo_Hero_Config.solo_shake_effect)
  return &solo_shake_effect_;
}

// repeated string solo_trigger_effect = 11;
inline int Solo_Hero_Config::solo_trigger_effect_size() const {
  return solo_trigger_effect_.size();
}
inline void Solo_Hero_Config::clear_solo_trigger_effect() {
  solo_trigger_effect_.Clear();
}
inline const ::std::string& Solo_Hero_Config::solo_trigger_effect(int index) const {
  // @@protoc_insertion_point(field_get:ConfigData.Solo_Hero_Config.solo_trigger_effect)
  return solo_trigger_effect_.Get(index);
}
inline ::std::string* Solo_Hero_Config::mutable_solo_trigger_effect(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigData.Solo_Hero_Config.solo_trigger_effect)
  return solo_trigger_effect_.Mutable(index);
}
inline void Solo_Hero_Config::set_solo_trigger_effect(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ConfigData.Solo_Hero_Config.solo_trigger_effect)
  solo_trigger_effect_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Solo_Hero_Config::set_solo_trigger_effect(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ConfigData.Solo_Hero_Config.solo_trigger_effect)
  solo_trigger_effect_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Solo_Hero_Config::set_solo_trigger_effect(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  solo_trigger_effect_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ConfigData.Solo_Hero_Config.solo_trigger_effect)
}
inline void Solo_Hero_Config::set_solo_trigger_effect(int index, const char* value, size_t size) {
  solo_trigger_effect_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ConfigData.Solo_Hero_Config.solo_trigger_effect)
}
inline ::std::string* Solo_Hero_Config::add_solo_trigger_effect() {
  // @@protoc_insertion_point(field_add_mutable:ConfigData.Solo_Hero_Config.solo_trigger_effect)
  return solo_trigger_effect_.Add();
}
inline void Solo_Hero_Config::add_solo_trigger_effect(const ::std::string& value) {
  solo_trigger_effect_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ConfigData.Solo_Hero_Config.solo_trigger_effect)
}
#if LANG_CXX11
inline void Solo_Hero_Config::add_solo_trigger_effect(::std::string&& value) {
  solo_trigger_effect_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ConfigData.Solo_Hero_Config.solo_trigger_effect)
}
#endif
inline void Solo_Hero_Config::add_solo_trigger_effect(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  solo_trigger_effect_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ConfigData.Solo_Hero_Config.solo_trigger_effect)
}
inline void Solo_Hero_Config::add_solo_trigger_effect(const char* value, size_t size) {
  solo_trigger_effect_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ConfigData.Solo_Hero_Config.solo_trigger_effect)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Solo_Hero_Config::solo_trigger_effect() const {
  // @@protoc_insertion_point(field_list:ConfigData.Solo_Hero_Config.solo_trigger_effect)
  return solo_trigger_effect_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Solo_Hero_Config::mutable_solo_trigger_effect() {
  // @@protoc_insertion_point(field_mutable_list:ConfigData.Solo_Hero_Config.solo_trigger_effect)
  return &solo_trigger_effect_;
}

// repeated string solo_hit_fly = 12;
inline int Solo_Hero_Config::solo_hit_fly_size() const {
  return solo_hit_fly_.size();
}
inline void Solo_Hero_Config::clear_solo_hit_fly() {
  solo_hit_fly_.Clear();
}
inline const ::std::string& Solo_Hero_Config::solo_hit_fly(int index) const {
  // @@protoc_insertion_point(field_get:ConfigData.Solo_Hero_Config.solo_hit_fly)
  return solo_hit_fly_.Get(index);
}
inline ::std::string* Solo_Hero_Config::mutable_solo_hit_fly(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigData.Solo_Hero_Config.solo_hit_fly)
  return solo_hit_fly_.Mutable(index);
}
inline void Solo_Hero_Config::set_solo_hit_fly(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ConfigData.Solo_Hero_Config.solo_hit_fly)
  solo_hit_fly_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Solo_Hero_Config::set_solo_hit_fly(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ConfigData.Solo_Hero_Config.solo_hit_fly)
  solo_hit_fly_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Solo_Hero_Config::set_solo_hit_fly(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  solo_hit_fly_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ConfigData.Solo_Hero_Config.solo_hit_fly)
}
inline void Solo_Hero_Config::set_solo_hit_fly(int index, const char* value, size_t size) {
  solo_hit_fly_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ConfigData.Solo_Hero_Config.solo_hit_fly)
}
inline ::std::string* Solo_Hero_Config::add_solo_hit_fly() {
  // @@protoc_insertion_point(field_add_mutable:ConfigData.Solo_Hero_Config.solo_hit_fly)
  return solo_hit_fly_.Add();
}
inline void Solo_Hero_Config::add_solo_hit_fly(const ::std::string& value) {
  solo_hit_fly_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ConfigData.Solo_Hero_Config.solo_hit_fly)
}
#if LANG_CXX11
inline void Solo_Hero_Config::add_solo_hit_fly(::std::string&& value) {
  solo_hit_fly_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ConfigData.Solo_Hero_Config.solo_hit_fly)
}
#endif
inline void Solo_Hero_Config::add_solo_hit_fly(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  solo_hit_fly_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ConfigData.Solo_Hero_Config.solo_hit_fly)
}
inline void Solo_Hero_Config::add_solo_hit_fly(const char* value, size_t size) {
  solo_hit_fly_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ConfigData.Solo_Hero_Config.solo_hit_fly)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Solo_Hero_Config::solo_hit_fly() const {
  // @@protoc_insertion_point(field_list:ConfigData.Solo_Hero_Config.solo_hit_fly)
  return solo_hit_fly_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Solo_Hero_Config::mutable_solo_hit_fly() {
  // @@protoc_insertion_point(field_mutable_list:ConfigData.Solo_Hero_Config.solo_hit_fly)
  return &solo_hit_fly_;
}

// repeated string solo_shake_sound = 13;
inline int Solo_Hero_Config::solo_shake_sound_size() const {
  return solo_shake_sound_.size();
}
inline void Solo_Hero_Config::clear_solo_shake_sound() {
  solo_shake_sound_.Clear();
}
inline const ::std::string& Solo_Hero_Config::solo_shake_sound(int index) const {
  // @@protoc_insertion_point(field_get:ConfigData.Solo_Hero_Config.solo_shake_sound)
  return solo_shake_sound_.Get(index);
}
inline ::std::string* Solo_Hero_Config::mutable_solo_shake_sound(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigData.Solo_Hero_Config.solo_shake_sound)
  return solo_shake_sound_.Mutable(index);
}
inline void Solo_Hero_Config::set_solo_shake_sound(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ConfigData.Solo_Hero_Config.solo_shake_sound)
  solo_shake_sound_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Solo_Hero_Config::set_solo_shake_sound(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ConfigData.Solo_Hero_Config.solo_shake_sound)
  solo_shake_sound_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Solo_Hero_Config::set_solo_shake_sound(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  solo_shake_sound_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ConfigData.Solo_Hero_Config.solo_shake_sound)
}
inline void Solo_Hero_Config::set_solo_shake_sound(int index, const char* value, size_t size) {
  solo_shake_sound_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ConfigData.Solo_Hero_Config.solo_shake_sound)
}
inline ::std::string* Solo_Hero_Config::add_solo_shake_sound() {
  // @@protoc_insertion_point(field_add_mutable:ConfigData.Solo_Hero_Config.solo_shake_sound)
  return solo_shake_sound_.Add();
}
inline void Solo_Hero_Config::add_solo_shake_sound(const ::std::string& value) {
  solo_shake_sound_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ConfigData.Solo_Hero_Config.solo_shake_sound)
}
#if LANG_CXX11
inline void Solo_Hero_Config::add_solo_shake_sound(::std::string&& value) {
  solo_shake_sound_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ConfigData.Solo_Hero_Config.solo_shake_sound)
}
#endif
inline void Solo_Hero_Config::add_solo_shake_sound(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  solo_shake_sound_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ConfigData.Solo_Hero_Config.solo_shake_sound)
}
inline void Solo_Hero_Config::add_solo_shake_sound(const char* value, size_t size) {
  solo_shake_sound_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ConfigData.Solo_Hero_Config.solo_shake_sound)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Solo_Hero_Config::solo_shake_sound() const {
  // @@protoc_insertion_point(field_list:ConfigData.Solo_Hero_Config.solo_shake_sound)
  return solo_shake_sound_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Solo_Hero_Config::mutable_solo_shake_sound() {
  // @@protoc_insertion_point(field_mutable_list:ConfigData.Solo_Hero_Config.solo_shake_sound)
  return &solo_shake_sound_;
}

// string solo_trigger_sound = 14;
inline void Solo_Hero_Config::clear_solo_trigger_sound() {
  solo_trigger_sound_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Solo_Hero_Config::solo_trigger_sound() const {
  // @@protoc_insertion_point(field_get:ConfigData.Solo_Hero_Config.solo_trigger_sound)
  return solo_trigger_sound_.GetNoArena();
}
inline void Solo_Hero_Config::set_solo_trigger_sound(const ::std::string& value) {
  
  solo_trigger_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.Solo_Hero_Config.solo_trigger_sound)
}
#if LANG_CXX11
inline void Solo_Hero_Config::set_solo_trigger_sound(::std::string&& value) {
  
  solo_trigger_sound_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.Solo_Hero_Config.solo_trigger_sound)
}
#endif
inline void Solo_Hero_Config::set_solo_trigger_sound(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  solo_trigger_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.Solo_Hero_Config.solo_trigger_sound)
}
inline void Solo_Hero_Config::set_solo_trigger_sound(const char* value, size_t size) {
  
  solo_trigger_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.Solo_Hero_Config.solo_trigger_sound)
}
inline ::std::string* Solo_Hero_Config::mutable_solo_trigger_sound() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.Solo_Hero_Config.solo_trigger_sound)
  return solo_trigger_sound_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Solo_Hero_Config::release_solo_trigger_sound() {
  // @@protoc_insertion_point(field_release:ConfigData.Solo_Hero_Config.solo_trigger_sound)
  
  return solo_trigger_sound_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Solo_Hero_Config::set_allocated_solo_trigger_sound(::std::string* solo_trigger_sound) {
  if (solo_trigger_sound != NULL) {
    
  } else {
    
  }
  solo_trigger_sound_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), solo_trigger_sound);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.Solo_Hero_Config.solo_trigger_sound)
}

// repeated float cooldown_delay = 15;
inline int Solo_Hero_Config::cooldown_delay_size() const {
  return cooldown_delay_.size();
}
inline void Solo_Hero_Config::clear_cooldown_delay() {
  cooldown_delay_.Clear();
}
inline float Solo_Hero_Config::cooldown_delay(int index) const {
  // @@protoc_insertion_point(field_get:ConfigData.Solo_Hero_Config.cooldown_delay)
  return cooldown_delay_.Get(index);
}
inline void Solo_Hero_Config::set_cooldown_delay(int index, float value) {
  cooldown_delay_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigData.Solo_Hero_Config.cooldown_delay)
}
inline void Solo_Hero_Config::add_cooldown_delay(float value) {
  cooldown_delay_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigData.Solo_Hero_Config.cooldown_delay)
}
inline const ::google::protobuf::RepeatedField< float >&
Solo_Hero_Config::cooldown_delay() const {
  // @@protoc_insertion_point(field_list:ConfigData.Solo_Hero_Config.cooldown_delay)
  return cooldown_delay_;
}
inline ::google::protobuf::RepeatedField< float >*
Solo_Hero_Config::mutable_cooldown_delay() {
  // @@protoc_insertion_point(field_mutable_list:ConfigData.Solo_Hero_Config.cooldown_delay)
  return &cooldown_delay_;
}

// float evade_dis = 16;
inline void Solo_Hero_Config::clear_evade_dis() {
  evade_dis_ = 0;
}
inline float Solo_Hero_Config::evade_dis() const {
  // @@protoc_insertion_point(field_get:ConfigData.Solo_Hero_Config.evade_dis)
  return evade_dis_;
}
inline void Solo_Hero_Config::set_evade_dis(float value) {
  
  evade_dis_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Solo_Hero_Config.evade_dis)
}

// repeated string camera_shake = 17;
inline int Solo_Hero_Config::camera_shake_size() const {
  return camera_shake_.size();
}
inline void Solo_Hero_Config::clear_camera_shake() {
  camera_shake_.Clear();
}
inline const ::std::string& Solo_Hero_Config::camera_shake(int index) const {
  // @@protoc_insertion_point(field_get:ConfigData.Solo_Hero_Config.camera_shake)
  return camera_shake_.Get(index);
}
inline ::std::string* Solo_Hero_Config::mutable_camera_shake(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigData.Solo_Hero_Config.camera_shake)
  return camera_shake_.Mutable(index);
}
inline void Solo_Hero_Config::set_camera_shake(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ConfigData.Solo_Hero_Config.camera_shake)
  camera_shake_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Solo_Hero_Config::set_camera_shake(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ConfigData.Solo_Hero_Config.camera_shake)
  camera_shake_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Solo_Hero_Config::set_camera_shake(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  camera_shake_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ConfigData.Solo_Hero_Config.camera_shake)
}
inline void Solo_Hero_Config::set_camera_shake(int index, const char* value, size_t size) {
  camera_shake_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ConfigData.Solo_Hero_Config.camera_shake)
}
inline ::std::string* Solo_Hero_Config::add_camera_shake() {
  // @@protoc_insertion_point(field_add_mutable:ConfigData.Solo_Hero_Config.camera_shake)
  return camera_shake_.Add();
}
inline void Solo_Hero_Config::add_camera_shake(const ::std::string& value) {
  camera_shake_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ConfigData.Solo_Hero_Config.camera_shake)
}
#if LANG_CXX11
inline void Solo_Hero_Config::add_camera_shake(::std::string&& value) {
  camera_shake_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ConfigData.Solo_Hero_Config.camera_shake)
}
#endif
inline void Solo_Hero_Config::add_camera_shake(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  camera_shake_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ConfigData.Solo_Hero_Config.camera_shake)
}
inline void Solo_Hero_Config::add_camera_shake(const char* value, size_t size) {
  camera_shake_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ConfigData.Solo_Hero_Config.camera_shake)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Solo_Hero_Config::camera_shake() const {
  // @@protoc_insertion_point(field_list:ConfigData.Solo_Hero_Config.camera_shake)
  return camera_shake_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Solo_Hero_Config::mutable_camera_shake() {
  // @@protoc_insertion_point(field_mutable_list:ConfigData.Solo_Hero_Config.camera_shake)
  return &camera_shake_;
}

// -------------------------------------------------------------------

// Solo_Heroes_Data_Config

// uint32 id = 1;
inline void Solo_Heroes_Data_Config::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 Solo_Heroes_Data_Config::id() const {
  // @@protoc_insertion_point(field_get:ConfigData.Solo_Heroes_Data_Config.id)
  return id_;
}
inline void Solo_Heroes_Data_Config::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Solo_Heroes_Data_Config.id)
}

// uint32 debug_level = 2;
inline void Solo_Heroes_Data_Config::clear_debug_level() {
  debug_level_ = 0u;
}
inline ::google::protobuf::uint32 Solo_Heroes_Data_Config::debug_level() const {
  // @@protoc_insertion_point(field_get:ConfigData.Solo_Heroes_Data_Config.debug_level)
  return debug_level_;
}
inline void Solo_Heroes_Data_Config::set_debug_level(::google::protobuf::uint32 value) {
  
  debug_level_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Solo_Heroes_Data_Config.debug_level)
}

// float hp_base = 3;
inline void Solo_Heroes_Data_Config::clear_hp_base() {
  hp_base_ = 0;
}
inline float Solo_Heroes_Data_Config::hp_base() const {
  // @@protoc_insertion_point(field_get:ConfigData.Solo_Heroes_Data_Config.hp_base)
  return hp_base_;
}
inline void Solo_Heroes_Data_Config::set_hp_base(float value) {
  
  hp_base_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Solo_Heroes_Data_Config.hp_base)
}

// float hp_growth = 4;
inline void Solo_Heroes_Data_Config::clear_hp_growth() {
  hp_growth_ = 0;
}
inline float Solo_Heroes_Data_Config::hp_growth() const {
  // @@protoc_insertion_point(field_get:ConfigData.Solo_Heroes_Data_Config.hp_growth)
  return hp_growth_;
}
inline void Solo_Heroes_Data_Config::set_hp_growth(float value) {
  
  hp_growth_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Solo_Heroes_Data_Config.hp_growth)
}

// float attack_base = 5;
inline void Solo_Heroes_Data_Config::clear_attack_base() {
  attack_base_ = 0;
}
inline float Solo_Heroes_Data_Config::attack_base() const {
  // @@protoc_insertion_point(field_get:ConfigData.Solo_Heroes_Data_Config.attack_base)
  return attack_base_;
}
inline void Solo_Heroes_Data_Config::set_attack_base(float value) {
  
  attack_base_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Solo_Heroes_Data_Config.attack_base)
}

// float attack_growth = 6;
inline void Solo_Heroes_Data_Config::clear_attack_growth() {
  attack_growth_ = 0;
}
inline float Solo_Heroes_Data_Config::attack_growth() const {
  // @@protoc_insertion_point(field_get:ConfigData.Solo_Heroes_Data_Config.attack_growth)
  return attack_growth_;
}
inline void Solo_Heroes_Data_Config::set_attack_growth(float value) {
  
  attack_growth_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Solo_Heroes_Data_Config.attack_growth)
}

// float real_attack_base = 7;
inline void Solo_Heroes_Data_Config::clear_real_attack_base() {
  real_attack_base_ = 0;
}
inline float Solo_Heroes_Data_Config::real_attack_base() const {
  // @@protoc_insertion_point(field_get:ConfigData.Solo_Heroes_Data_Config.real_attack_base)
  return real_attack_base_;
}
inline void Solo_Heroes_Data_Config::set_real_attack_base(float value) {
  
  real_attack_base_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Solo_Heroes_Data_Config.real_attack_base)
}

// float real_attack_growth = 8;
inline void Solo_Heroes_Data_Config::clear_real_attack_growth() {
  real_attack_growth_ = 0;
}
inline float Solo_Heroes_Data_Config::real_attack_growth() const {
  // @@protoc_insertion_point(field_get:ConfigData.Solo_Heroes_Data_Config.real_attack_growth)
  return real_attack_growth_;
}
inline void Solo_Heroes_Data_Config::set_real_attack_growth(float value) {
  
  real_attack_growth_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Solo_Heroes_Data_Config.real_attack_growth)
}

// float defence_base = 9;
inline void Solo_Heroes_Data_Config::clear_defence_base() {
  defence_base_ = 0;
}
inline float Solo_Heroes_Data_Config::defence_base() const {
  // @@protoc_insertion_point(field_get:ConfigData.Solo_Heroes_Data_Config.defence_base)
  return defence_base_;
}
inline void Solo_Heroes_Data_Config::set_defence_base(float value) {
  
  defence_base_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Solo_Heroes_Data_Config.defence_base)
}

// float defence_growth = 10;
inline void Solo_Heroes_Data_Config::clear_defence_growth() {
  defence_growth_ = 0;
}
inline float Solo_Heroes_Data_Config::defence_growth() const {
  // @@protoc_insertion_point(field_get:ConfigData.Solo_Heroes_Data_Config.defence_growth)
  return defence_growth_;
}
inline void Solo_Heroes_Data_Config::set_defence_growth(float value) {
  
  defence_growth_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Solo_Heroes_Data_Config.defence_growth)
}

// float dodge_base = 11;
inline void Solo_Heroes_Data_Config::clear_dodge_base() {
  dodge_base_ = 0;
}
inline float Solo_Heroes_Data_Config::dodge_base() const {
  // @@protoc_insertion_point(field_get:ConfigData.Solo_Heroes_Data_Config.dodge_base)
  return dodge_base_;
}
inline void Solo_Heroes_Data_Config::set_dodge_base(float value) {
  
  dodge_base_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Solo_Heroes_Data_Config.dodge_base)
}

// float dodge_growth = 12;
inline void Solo_Heroes_Data_Config::clear_dodge_growth() {
  dodge_growth_ = 0;
}
inline float Solo_Heroes_Data_Config::dodge_growth() const {
  // @@protoc_insertion_point(field_get:ConfigData.Solo_Heroes_Data_Config.dodge_growth)
  return dodge_growth_;
}
inline void Solo_Heroes_Data_Config::set_dodge_growth(float value) {
  
  dodge_growth_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Solo_Heroes_Data_Config.dodge_growth)
}

// float critical_base = 13;
inline void Solo_Heroes_Data_Config::clear_critical_base() {
  critical_base_ = 0;
}
inline float Solo_Heroes_Data_Config::critical_base() const {
  // @@protoc_insertion_point(field_get:ConfigData.Solo_Heroes_Data_Config.critical_base)
  return critical_base_;
}
inline void Solo_Heroes_Data_Config::set_critical_base(float value) {
  
  critical_base_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Solo_Heroes_Data_Config.critical_base)
}

// float critical_growth = 14;
inline void Solo_Heroes_Data_Config::clear_critical_growth() {
  critical_growth_ = 0;
}
inline float Solo_Heroes_Data_Config::critical_growth() const {
  // @@protoc_insertion_point(field_get:ConfigData.Solo_Heroes_Data_Config.critical_growth)
  return critical_growth_;
}
inline void Solo_Heroes_Data_Config::set_critical_growth(float value) {
  
  critical_growth_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Solo_Heroes_Data_Config.critical_growth)
}

// -------------------------------------------------------------------

// UI_Heroes_Config

// uint32 id = 1;
inline void UI_Heroes_Config::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 UI_Heroes_Config::id() const {
  // @@protoc_insertion_point(field_get:ConfigData.UI_Heroes_Config.id)
  return id_;
}
inline void UI_Heroes_Config::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.UI_Heroes_Config.id)
}

// string hero_epic_global = 2;
inline void UI_Heroes_Config::clear_hero_epic_global() {
  hero_epic_global_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UI_Heroes_Config::hero_epic_global() const {
  // @@protoc_insertion_point(field_get:ConfigData.UI_Heroes_Config.hero_epic_global)
  return hero_epic_global_.GetNoArena();
}
inline void UI_Heroes_Config::set_hero_epic_global(const ::std::string& value) {
  
  hero_epic_global_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.UI_Heroes_Config.hero_epic_global)
}
#if LANG_CXX11
inline void UI_Heroes_Config::set_hero_epic_global(::std::string&& value) {
  
  hero_epic_global_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.UI_Heroes_Config.hero_epic_global)
}
#endif
inline void UI_Heroes_Config::set_hero_epic_global(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hero_epic_global_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.UI_Heroes_Config.hero_epic_global)
}
inline void UI_Heroes_Config::set_hero_epic_global(const char* value, size_t size) {
  
  hero_epic_global_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.UI_Heroes_Config.hero_epic_global)
}
inline ::std::string* UI_Heroes_Config::mutable_hero_epic_global() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.UI_Heroes_Config.hero_epic_global)
  return hero_epic_global_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UI_Heroes_Config::release_hero_epic_global() {
  // @@protoc_insertion_point(field_release:ConfigData.UI_Heroes_Config.hero_epic_global)
  
  return hero_epic_global_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UI_Heroes_Config::set_allocated_hero_epic_global(::std::string* hero_epic_global) {
  if (hero_epic_global != NULL) {
    
  } else {
    
  }
  hero_epic_global_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hero_epic_global);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.UI_Heroes_Config.hero_epic_global)
}

// string Type = 3;
inline void UI_Heroes_Config::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UI_Heroes_Config::type() const {
  // @@protoc_insertion_point(field_get:ConfigData.UI_Heroes_Config.Type)
  return type_.GetNoArena();
}
inline void UI_Heroes_Config::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.UI_Heroes_Config.Type)
}
#if LANG_CXX11
inline void UI_Heroes_Config::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.UI_Heroes_Config.Type)
}
#endif
inline void UI_Heroes_Config::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.UI_Heroes_Config.Type)
}
inline void UI_Heroes_Config::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.UI_Heroes_Config.Type)
}
inline ::std::string* UI_Heroes_Config::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.UI_Heroes_Config.Type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UI_Heroes_Config::release_type() {
  // @@protoc_insertion_point(field_release:ConfigData.UI_Heroes_Config.Type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UI_Heroes_Config::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.UI_Heroes_Config.Type)
}

// bool hide = 4;
inline void UI_Heroes_Config::clear_hide() {
  hide_ = false;
}
inline bool UI_Heroes_Config::hide() const {
  // @@protoc_insertion_point(field_get:ConfigData.UI_Heroes_Config.hide)
  return hide_;
}
inline void UI_Heroes_Config::set_hide(bool value) {
  
  hide_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.UI_Heroes_Config.hide)
}

// float scale = 5;
inline void UI_Heroes_Config::clear_scale() {
  scale_ = 0;
}
inline float UI_Heroes_Config::scale() const {
  // @@protoc_insertion_point(field_get:ConfigData.UI_Heroes_Config.scale)
  return scale_;
}
inline void UI_Heroes_Config::set_scale(float value) {
  
  scale_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.UI_Heroes_Config.scale)
}

// string rot = 6;
inline void UI_Heroes_Config::clear_rot() {
  rot_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UI_Heroes_Config::rot() const {
  // @@protoc_insertion_point(field_get:ConfigData.UI_Heroes_Config.rot)
  return rot_.GetNoArena();
}
inline void UI_Heroes_Config::set_rot(const ::std::string& value) {
  
  rot_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.UI_Heroes_Config.rot)
}
#if LANG_CXX11
inline void UI_Heroes_Config::set_rot(::std::string&& value) {
  
  rot_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.UI_Heroes_Config.rot)
}
#endif
inline void UI_Heroes_Config::set_rot(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  rot_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.UI_Heroes_Config.rot)
}
inline void UI_Heroes_Config::set_rot(const char* value, size_t size) {
  
  rot_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.UI_Heroes_Config.rot)
}
inline ::std::string* UI_Heroes_Config::mutable_rot() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.UI_Heroes_Config.rot)
  return rot_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UI_Heroes_Config::release_rot() {
  // @@protoc_insertion_point(field_release:ConfigData.UI_Heroes_Config.rot)
  
  return rot_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UI_Heroes_Config::set_allocated_rot(::std::string* rot) {
  if (rot != NULL) {
    
  } else {
    
  }
  rot_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rot);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.UI_Heroes_Config.rot)
}

// string position = 7;
inline void UI_Heroes_Config::clear_position() {
  position_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UI_Heroes_Config::position() const {
  // @@protoc_insertion_point(field_get:ConfigData.UI_Heroes_Config.position)
  return position_.GetNoArena();
}
inline void UI_Heroes_Config::set_position(const ::std::string& value) {
  
  position_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.UI_Heroes_Config.position)
}
#if LANG_CXX11
inline void UI_Heroes_Config::set_position(::std::string&& value) {
  
  position_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.UI_Heroes_Config.position)
}
#endif
inline void UI_Heroes_Config::set_position(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  position_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.UI_Heroes_Config.position)
}
inline void UI_Heroes_Config::set_position(const char* value, size_t size) {
  
  position_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.UI_Heroes_Config.position)
}
inline ::std::string* UI_Heroes_Config::mutable_position() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.UI_Heroes_Config.position)
  return position_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UI_Heroes_Config::release_position() {
  // @@protoc_insertion_point(field_release:ConfigData.UI_Heroes_Config.position)
  
  return position_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UI_Heroes_Config::set_allocated_position(::std::string* position) {
  if (position != NULL) {
    
  } else {
    
  }
  position_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), position);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.UI_Heroes_Config.position)
}

// string equip = 8;
inline void UI_Heroes_Config::clear_equip() {
  equip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UI_Heroes_Config::equip() const {
  // @@protoc_insertion_point(field_get:ConfigData.UI_Heroes_Config.equip)
  return equip_.GetNoArena();
}
inline void UI_Heroes_Config::set_equip(const ::std::string& value) {
  
  equip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.UI_Heroes_Config.equip)
}
#if LANG_CXX11
inline void UI_Heroes_Config::set_equip(::std::string&& value) {
  
  equip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.UI_Heroes_Config.equip)
}
#endif
inline void UI_Heroes_Config::set_equip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  equip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.UI_Heroes_Config.equip)
}
inline void UI_Heroes_Config::set_equip(const char* value, size_t size) {
  
  equip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.UI_Heroes_Config.equip)
}
inline ::std::string* UI_Heroes_Config::mutable_equip() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.UI_Heroes_Config.equip)
  return equip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UI_Heroes_Config::release_equip() {
  // @@protoc_insertion_point(field_release:ConfigData.UI_Heroes_Config.equip)
  
  return equip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UI_Heroes_Config::set_allocated_equip(::std::string* equip) {
  if (equip != NULL) {
    
  } else {
    
  }
  equip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), equip);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.UI_Heroes_Config.equip)
}

// uint32 card_id = 9;
inline void UI_Heroes_Config::clear_card_id() {
  card_id_ = 0u;
}
inline ::google::protobuf::uint32 UI_Heroes_Config::card_id() const {
  // @@protoc_insertion_point(field_get:ConfigData.UI_Heroes_Config.card_id)
  return card_id_;
}
inline void UI_Heroes_Config::set_card_id(::google::protobuf::uint32 value) {
  
  card_id_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.UI_Heroes_Config.card_id)
}

// uint32 summon_cost = 10;
inline void UI_Heroes_Config::clear_summon_cost() {
  summon_cost_ = 0u;
}
inline ::google::protobuf::uint32 UI_Heroes_Config::summon_cost() const {
  // @@protoc_insertion_point(field_get:ConfigData.UI_Heroes_Config.summon_cost)
  return summon_cost_;
}
inline void UI_Heroes_Config::set_summon_cost(::google::protobuf::uint32 value) {
  
  summon_cost_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.UI_Heroes_Config.summon_cost)
}

// uint32 levelup_gold = 11;
inline void UI_Heroes_Config::clear_levelup_gold() {
  levelup_gold_ = 0u;
}
inline ::google::protobuf::uint32 UI_Heroes_Config::levelup_gold() const {
  // @@protoc_insertion_point(field_get:ConfigData.UI_Heroes_Config.levelup_gold)
  return levelup_gold_;
}
inline void UI_Heroes_Config::set_levelup_gold(::google::protobuf::uint32 value) {
  
  levelup_gold_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.UI_Heroes_Config.levelup_gold)
}

// string hero_sound = 12;
inline void UI_Heroes_Config::clear_hero_sound() {
  hero_sound_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UI_Heroes_Config::hero_sound() const {
  // @@protoc_insertion_point(field_get:ConfigData.UI_Heroes_Config.hero_sound)
  return hero_sound_.GetNoArena();
}
inline void UI_Heroes_Config::set_hero_sound(const ::std::string& value) {
  
  hero_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.UI_Heroes_Config.hero_sound)
}
#if LANG_CXX11
inline void UI_Heroes_Config::set_hero_sound(::std::string&& value) {
  
  hero_sound_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.UI_Heroes_Config.hero_sound)
}
#endif
inline void UI_Heroes_Config::set_hero_sound(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hero_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.UI_Heroes_Config.hero_sound)
}
inline void UI_Heroes_Config::set_hero_sound(const char* value, size_t size) {
  
  hero_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.UI_Heroes_Config.hero_sound)
}
inline ::std::string* UI_Heroes_Config::mutable_hero_sound() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.UI_Heroes_Config.hero_sound)
  return hero_sound_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UI_Heroes_Config::release_hero_sound() {
  // @@protoc_insertion_point(field_release:ConfigData.UI_Heroes_Config.hero_sound)
  
  return hero_sound_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UI_Heroes_Config::set_allocated_hero_sound(::std::string* hero_sound) {
  if (hero_sound != NULL) {
    
  } else {
    
  }
  hero_sound_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hero_sound);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.UI_Heroes_Config.hero_sound)
}

// float talent_cost_rrate = 13;
inline void UI_Heroes_Config::clear_talent_cost_rrate() {
  talent_cost_rrate_ = 0;
}
inline float UI_Heroes_Config::talent_cost_rrate() const {
  // @@protoc_insertion_point(field_get:ConfigData.UI_Heroes_Config.talent_cost_rrate)
  return talent_cost_rrate_;
}
inline void UI_Heroes_Config::set_talent_cost_rrate(float value) {
  
  talent_cost_rrate_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.UI_Heroes_Config.talent_cost_rrate)
}

// float rrate_grow = 14;
inline void UI_Heroes_Config::clear_rrate_grow() {
  rrate_grow_ = 0;
}
inline float UI_Heroes_Config::rrate_grow() const {
  // @@protoc_insertion_point(field_get:ConfigData.UI_Heroes_Config.rrate_grow)
  return rrate_grow_;
}
inline void UI_Heroes_Config::set_rrate_grow(float value) {
  
  rrate_grow_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.UI_Heroes_Config.rrate_grow)
}

// string sfx = 15;
inline void UI_Heroes_Config::clear_sfx() {
  sfx_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UI_Heroes_Config::sfx() const {
  // @@protoc_insertion_point(field_get:ConfigData.UI_Heroes_Config.sfx)
  return sfx_.GetNoArena();
}
inline void UI_Heroes_Config::set_sfx(const ::std::string& value) {
  
  sfx_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.UI_Heroes_Config.sfx)
}
#if LANG_CXX11
inline void UI_Heroes_Config::set_sfx(::std::string&& value) {
  
  sfx_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.UI_Heroes_Config.sfx)
}
#endif
inline void UI_Heroes_Config::set_sfx(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sfx_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.UI_Heroes_Config.sfx)
}
inline void UI_Heroes_Config::set_sfx(const char* value, size_t size) {
  
  sfx_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.UI_Heroes_Config.sfx)
}
inline ::std::string* UI_Heroes_Config::mutable_sfx() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.UI_Heroes_Config.sfx)
  return sfx_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UI_Heroes_Config::release_sfx() {
  // @@protoc_insertion_point(field_release:ConfigData.UI_Heroes_Config.sfx)
  
  return sfx_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UI_Heroes_Config::set_allocated_sfx(::std::string* sfx) {
  if (sfx != NULL) {
    
  } else {
    
  }
  sfx_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sfx);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.UI_Heroes_Config.sfx)
}

// -------------------------------------------------------------------

// Heroes_Type_Config

// uint32 id = 1;
inline void Heroes_Type_Config::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 Heroes_Type_Config::id() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Type_Config.id)
  return id_;
}
inline void Heroes_Type_Config::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Type_Config.id)
}

// string Hero_Icon = 2;
inline void Heroes_Type_Config::clear_hero_icon() {
  hero_icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Heroes_Type_Config::hero_icon() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Type_Config.Hero_Icon)
  return hero_icon_.GetNoArena();
}
inline void Heroes_Type_Config::set_hero_icon(const ::std::string& value) {
  
  hero_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Type_Config.Hero_Icon)
}
#if LANG_CXX11
inline void Heroes_Type_Config::set_hero_icon(::std::string&& value) {
  
  hero_icon_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.Heroes_Type_Config.Hero_Icon)
}
#endif
inline void Heroes_Type_Config::set_hero_icon(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hero_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.Heroes_Type_Config.Hero_Icon)
}
inline void Heroes_Type_Config::set_hero_icon(const char* value, size_t size) {
  
  hero_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.Heroes_Type_Config.Hero_Icon)
}
inline ::std::string* Heroes_Type_Config::mutable_hero_icon() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.Heroes_Type_Config.Hero_Icon)
  return hero_icon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Heroes_Type_Config::release_hero_icon() {
  // @@protoc_insertion_point(field_release:ConfigData.Heroes_Type_Config.Hero_Icon)
  
  return hero_icon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Heroes_Type_Config::set_allocated_hero_icon(::std::string* hero_icon) {
  if (hero_icon != NULL) {
    
  } else {
    
  }
  hero_icon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hero_icon);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.Heroes_Type_Config.Hero_Icon)
}

// string global_string_id = 3;
inline void Heroes_Type_Config::clear_global_string_id() {
  global_string_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Heroes_Type_Config::global_string_id() const {
  // @@protoc_insertion_point(field_get:ConfigData.Heroes_Type_Config.global_string_id)
  return global_string_id_.GetNoArena();
}
inline void Heroes_Type_Config::set_global_string_id(const ::std::string& value) {
  
  global_string_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.Heroes_Type_Config.global_string_id)
}
#if LANG_CXX11
inline void Heroes_Type_Config::set_global_string_id(::std::string&& value) {
  
  global_string_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.Heroes_Type_Config.global_string_id)
}
#endif
inline void Heroes_Type_Config::set_global_string_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  global_string_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.Heroes_Type_Config.global_string_id)
}
inline void Heroes_Type_Config::set_global_string_id(const char* value, size_t size) {
  
  global_string_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.Heroes_Type_Config.global_string_id)
}
inline ::std::string* Heroes_Type_Config::mutable_global_string_id() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.Heroes_Type_Config.global_string_id)
  return global_string_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Heroes_Type_Config::release_global_string_id() {
  // @@protoc_insertion_point(field_release:ConfigData.Heroes_Type_Config.global_string_id)
  
  return global_string_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Heroes_Type_Config::set_allocated_global_string_id(::std::string* global_string_id) {
  if (global_string_id != NULL) {
    
  } else {
    
  }
  global_string_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), global_string_id);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.Heroes_Type_Config.global_string_id)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Heroes_Config_Data

// map<uint32, .ConfigData.Appearance_Config> Appearance_Config_items = 1;
inline int Heroes_Config_Data::appearance_config_items_size() const {
  return appearance_config_items_.size();
}
inline void Heroes_Config_Data::clear_appearance_config_items() {
  appearance_config_items_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::Appearance_Config >&
Heroes_Config_Data::appearance_config_items() const {
  // @@protoc_insertion_point(field_map:ConfigData.Heroes_Config_Data.Appearance_Config_items)
  return appearance_config_items_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::Appearance_Config >*
Heroes_Config_Data::mutable_appearance_config_items() {
  // @@protoc_insertion_point(field_mutable_map:ConfigData.Heroes_Config_Data.Appearance_Config_items)
  return appearance_config_items_.MutableMap();
}

// map<uint32, .ConfigData.Heroes_Config> Heroes_Config_items = 2;
inline int Heroes_Config_Data::heroes_config_items_size() const {
  return heroes_config_items_.size();
}
inline void Heroes_Config_Data::clear_heroes_config_items() {
  heroes_config_items_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::Heroes_Config >&
Heroes_Config_Data::heroes_config_items() const {
  // @@protoc_insertion_point(field_map:ConfigData.Heroes_Config_Data.Heroes_Config_items)
  return heroes_config_items_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::Heroes_Config >*
Heroes_Config_Data::mutable_heroes_config_items() {
  // @@protoc_insertion_point(field_mutable_map:ConfigData.Heroes_Config_Data.Heroes_Config_items)
  return heroes_config_items_.MutableMap();
}

// map<uint32, .ConfigData.Heros_Words_Config> Heros_Words_Config_items = 3;
inline int Heroes_Config_Data::heros_words_config_items_size() const {
  return heros_words_config_items_.size();
}
inline void Heroes_Config_Data::clear_heros_words_config_items() {
  heros_words_config_items_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::Heros_Words_Config >&
Heroes_Config_Data::heros_words_config_items() const {
  // @@protoc_insertion_point(field_map:ConfigData.Heroes_Config_Data.Heros_Words_Config_items)
  return heros_words_config_items_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::Heros_Words_Config >*
Heroes_Config_Data::mutable_heros_words_config_items() {
  // @@protoc_insertion_point(field_mutable_map:ConfigData.Heroes_Config_Data.Heros_Words_Config_items)
  return heros_words_config_items_.MutableMap();
}

// map<uint32, .ConfigData.Heroes_Data_Config> Heroes_Data_Config_items = 4;
inline int Heroes_Config_Data::heroes_data_config_items_size() const {
  return heroes_data_config_items_.size();
}
inline void Heroes_Config_Data::clear_heroes_data_config_items() {
  heroes_data_config_items_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::Heroes_Data_Config >&
Heroes_Config_Data::heroes_data_config_items() const {
  // @@protoc_insertion_point(field_map:ConfigData.Heroes_Config_Data.Heroes_Data_Config_items)
  return heroes_data_config_items_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::Heroes_Data_Config >*
Heroes_Config_Data::mutable_heroes_data_config_items() {
  // @@protoc_insertion_point(field_mutable_map:ConfigData.Heroes_Config_Data.Heroes_Data_Config_items)
  return heroes_data_config_items_.MutableMap();
}

// map<uint32, .ConfigData.Heroes_Skill_Config> Heroes_Skill_Config_items = 5;
inline int Heroes_Config_Data::heroes_skill_config_items_size() const {
  return heroes_skill_config_items_.size();
}
inline void Heroes_Config_Data::clear_heroes_skill_config_items() {
  heroes_skill_config_items_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::Heroes_Skill_Config >&
Heroes_Config_Data::heroes_skill_config_items() const {
  // @@protoc_insertion_point(field_map:ConfigData.Heroes_Config_Data.Heroes_Skill_Config_items)
  return heroes_skill_config_items_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::Heroes_Skill_Config >*
Heroes_Config_Data::mutable_heroes_skill_config_items() {
  // @@protoc_insertion_point(field_mutable_map:ConfigData.Heroes_Config_Data.Heroes_Skill_Config_items)
  return heroes_skill_config_items_.MutableMap();
}

// map<uint32, .ConfigData.Heroes_Rank_Config> Heroes_Rank_Config_items = 6;
inline int Heroes_Config_Data::heroes_rank_config_items_size() const {
  return heroes_rank_config_items_.size();
}
inline void Heroes_Config_Data::clear_heroes_rank_config_items() {
  heroes_rank_config_items_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::Heroes_Rank_Config >&
Heroes_Config_Data::heroes_rank_config_items() const {
  // @@protoc_insertion_point(field_map:ConfigData.Heroes_Config_Data.Heroes_Rank_Config_items)
  return heroes_rank_config_items_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::Heroes_Rank_Config >*
Heroes_Config_Data::mutable_heroes_rank_config_items() {
  // @@protoc_insertion_point(field_mutable_map:ConfigData.Heroes_Config_Data.Heroes_Rank_Config_items)
  return heroes_rank_config_items_.MutableMap();
}

// map<uint32, .ConfigData.Solo_Hero_Config> Solo_Hero_Config_items = 7;
inline int Heroes_Config_Data::solo_hero_config_items_size() const {
  return solo_hero_config_items_.size();
}
inline void Heroes_Config_Data::clear_solo_hero_config_items() {
  solo_hero_config_items_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::Solo_Hero_Config >&
Heroes_Config_Data::solo_hero_config_items() const {
  // @@protoc_insertion_point(field_map:ConfigData.Heroes_Config_Data.Solo_Hero_Config_items)
  return solo_hero_config_items_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::Solo_Hero_Config >*
Heroes_Config_Data::mutable_solo_hero_config_items() {
  // @@protoc_insertion_point(field_mutable_map:ConfigData.Heroes_Config_Data.Solo_Hero_Config_items)
  return solo_hero_config_items_.MutableMap();
}

// map<uint32, .ConfigData.Solo_Heroes_Data_Config> Solo_Heroes_Data_Config_items = 8;
inline int Heroes_Config_Data::solo_heroes_data_config_items_size() const {
  return solo_heroes_data_config_items_.size();
}
inline void Heroes_Config_Data::clear_solo_heroes_data_config_items() {
  solo_heroes_data_config_items_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::Solo_Heroes_Data_Config >&
Heroes_Config_Data::solo_heroes_data_config_items() const {
  // @@protoc_insertion_point(field_map:ConfigData.Heroes_Config_Data.Solo_Heroes_Data_Config_items)
  return solo_heroes_data_config_items_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::Solo_Heroes_Data_Config >*
Heroes_Config_Data::mutable_solo_heroes_data_config_items() {
  // @@protoc_insertion_point(field_mutable_map:ConfigData.Heroes_Config_Data.Solo_Heroes_Data_Config_items)
  return solo_heroes_data_config_items_.MutableMap();
}

// map<uint32, .ConfigData.UI_Heroes_Config> UI_Heroes_Config_items = 9;
inline int Heroes_Config_Data::ui_heroes_config_items_size() const {
  return ui_heroes_config_items_.size();
}
inline void Heroes_Config_Data::clear_ui_heroes_config_items() {
  ui_heroes_config_items_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::UI_Heroes_Config >&
Heroes_Config_Data::ui_heroes_config_items() const {
  // @@protoc_insertion_point(field_map:ConfigData.Heroes_Config_Data.UI_Heroes_Config_items)
  return ui_heroes_config_items_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::UI_Heroes_Config >*
Heroes_Config_Data::mutable_ui_heroes_config_items() {
  // @@protoc_insertion_point(field_mutable_map:ConfigData.Heroes_Config_Data.UI_Heroes_Config_items)
  return ui_heroes_config_items_.MutableMap();
}

// map<uint32, .ConfigData.Heroes_Type_Config> Heroes_Type_Config_items = 10;
inline int Heroes_Config_Data::heroes_type_config_items_size() const {
  return heroes_type_config_items_.size();
}
inline void Heroes_Config_Data::clear_heroes_type_config_items() {
  heroes_type_config_items_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::Heroes_Type_Config >&
Heroes_Config_Data::heroes_type_config_items() const {
  // @@protoc_insertion_point(field_map:ConfigData.Heroes_Config_Data.Heroes_Type_Config_items)
  return heroes_type_config_items_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::Heroes_Type_Config >*
Heroes_Config_Data::mutable_heroes_type_config_items() {
  // @@protoc_insertion_point(field_mutable_map:ConfigData.Heroes_Config_Data.Heroes_Type_Config_items)
  return heroes_type_config_items_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ConfigData

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_Heroes_5fConfig_2eproto
