// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Heroes_Config.proto

package ConfigData

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Appearance_Config struct {
	//* 唯一标识
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//* 资源包名
	FolderName string `protobuf:"bytes,2,opt,name=folder_name,json=folderName,proto3" json:"folder_name,omitempty"`
	//* 模型路径
	Mesh string `protobuf:"bytes,3,opt,name=mesh,proto3" json:"mesh,omitempty"`
	//* 贴图材质名
	Texture string `protobuf:"bytes,4,opt,name=texture,proto3" json:"texture,omitempty"`
	//* 动作表ID(索引GeneralAnimations_Config)
	AnimId uint32 `protobuf:"varint,5,opt,name=anim_id,json=animId,proto3" json:"anim_id,omitempty"`
	//* 是否烘焙模型
	BakeMesh bool `protobuf:"varint,6,opt,name=bake_mesh,json=bakeMesh,proto3" json:"bake_mesh,omitempty"`
	//* 世界地图模型缩放
	ScaleMap float32 `protobuf:"fixed32,7,opt,name=scale_map,json=scaleMap,proto3" json:"scale_map,omitempty"`
	//* loading界面模型缩放
	ScaleLoading float32 `protobuf:"fixed32,8,opt,name=scale_loading,json=scaleLoading,proto3" json:"scale_loading,omitempty"`
	//* 打击音效
	AtkSound string `protobuf:"bytes,9,opt,name=atk_sound,json=atkSound,proto3" json:"atk_sound,omitempty"`
	//* 远程发射音效
	RangeSound string `protobuf:"bytes,10,opt,name=range_sound,json=rangeSound,proto3" json:"range_sound,omitempty"`
	//* 远程击中音效
	RangeHitSound string `protobuf:"bytes,11,opt,name=range_hit_sound,json=rangeHitSound,proto3" json:"range_hit_sound,omitempty"`
	//* 单个冲锋音效
	ChargeSound string `protobuf:"bytes,12,opt,name=charge_sound,json=chargeSound,proto3" json:"charge_sound,omitempty"`
	//* 死亡特效
	DeathEffect          string   `protobuf:"bytes,13,opt,name=death_effect,json=deathEffect,proto3" json:"death_effect,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Appearance_Config) Reset()         { *m = Appearance_Config{} }
func (m *Appearance_Config) String() string { return proto.CompactTextString(m) }
func (*Appearance_Config) ProtoMessage()    {}
func (*Appearance_Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_f456ca96fe808bc1, []int{0}
}

func (m *Appearance_Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Appearance_Config.Unmarshal(m, b)
}
func (m *Appearance_Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Appearance_Config.Marshal(b, m, deterministic)
}
func (m *Appearance_Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Appearance_Config.Merge(m, src)
}
func (m *Appearance_Config) XXX_Size() int {
	return xxx_messageInfo_Appearance_Config.Size(m)
}
func (m *Appearance_Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Appearance_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Appearance_Config proto.InternalMessageInfo

func (m *Appearance_Config) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Appearance_Config) GetFolderName() string {
	if m != nil {
		return m.FolderName
	}
	return ""
}

func (m *Appearance_Config) GetMesh() string {
	if m != nil {
		return m.Mesh
	}
	return ""
}

func (m *Appearance_Config) GetTexture() string {
	if m != nil {
		return m.Texture
	}
	return ""
}

func (m *Appearance_Config) GetAnimId() uint32 {
	if m != nil {
		return m.AnimId
	}
	return 0
}

func (m *Appearance_Config) GetBakeMesh() bool {
	if m != nil {
		return m.BakeMesh
	}
	return false
}

func (m *Appearance_Config) GetScaleMap() float32 {
	if m != nil {
		return m.ScaleMap
	}
	return 0
}

func (m *Appearance_Config) GetScaleLoading() float32 {
	if m != nil {
		return m.ScaleLoading
	}
	return 0
}

func (m *Appearance_Config) GetAtkSound() string {
	if m != nil {
		return m.AtkSound
	}
	return ""
}

func (m *Appearance_Config) GetRangeSound() string {
	if m != nil {
		return m.RangeSound
	}
	return ""
}

func (m *Appearance_Config) GetRangeHitSound() string {
	if m != nil {
		return m.RangeHitSound
	}
	return ""
}

func (m *Appearance_Config) GetChargeSound() string {
	if m != nil {
		return m.ChargeSound
	}
	return ""
}

func (m *Appearance_Config) GetDeathEffect() string {
	if m != nil {
		return m.DeathEffect
	}
	return ""
}

type Heroes_Config struct {
	//* 唯一标识
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//* 名称或描述
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	//* 调试等级
	DebugLevel uint32 `protobuf:"varint,3,opt,name=debug_level,json=debugLevel,proto3" json:"debug_level,omitempty"`
	//* 调试突破(之后删除）
	DebugFloor uint32 `protobuf:"varint,4,opt,name=debug_floor,json=debugFloor,proto3" json:"debug_floor,omitempty"`
	//* 小兵调试等级
	DebugPawnCountLevel uint32 `protobuf:"varint,5,opt,name=debug_pawn_count_level,json=debugPawnCountLevel,proto3" json:"debug_pawn_count_level,omitempty"`
	//* 调试星级
	DebugRank uint32 `protobuf:"varint,6,opt,name=debug_rank,json=debugRank,proto3" json:"debug_rank,omitempty"`
	//* 调试天赋技能
	DebugTalent []uint32 `protobuf:"varint,7,rep,packed,name=debug_talent,json=debugTalent,proto3" json:"debug_talent,omitempty"`
	//* 英雄名称语言包
	HeroNameGlobal string `protobuf:"bytes,8,opt,name=hero_name_global,json=heroNameGlobal,proto3" json:"hero_name_global,omitempty"`
	//* 英雄战前布阵头像
	IconFormation string `protobuf:"bytes,9,opt,name=icon_formation,json=iconFormation,proto3" json:"icon_formation,omitempty"`
	//* 英雄战斗中旗帜头像
	IconFlag string `protobuf:"bytes,10,opt,name=icon_flag,json=iconFlag,proto3" json:"icon_flag,omitempty"`
	//* 旗帜高度
	TeamBannerHeight int32 `protobuf:"varint,11,opt,name=team_banner_height,json=teamBannerHeight,proto3" json:"team_banner_height,omitempty"`
	//* 英雄类型配置
	Classify uint32 `protobuf:"varint,12,opt,name=classify,proto3" json:"classify,omitempty"`
	//* 英雄战斗定位类型（用来显示icon，索引Hero_Tpye页）
	HeroType uint32 `protobuf:"varint,13,opt,name=hero_type,json=heroType,proto3" json:"hero_type,omitempty"`
	//* 品质（1绿色，2蓝色、3紫色，4橙色）
	Quality uint32 `protobuf:"varint,14,opt,name=quality,proto3" json:"quality,omitempty"`
	//* 飞行功能ID
	ProjectileId uint32 `protobuf:"varint,15,opt,name=projectile_id,json=projectileId,proto3" json:"projectile_id,omitempty"`
	//* 队伍逻辑(索引TeamLogical_Config)
	TeamloigicId uint32 `protobuf:"varint,16,opt,name=teamloigic_id,json=teamloigicId,proto3" json:"teamloigic_id,omitempty"`
	//* 可拥有技能
	Skills []uint32 `protobuf:"varint,17,rep,packed,name=skills,proto3" json:"skills,omitempty"`
	//* 质量
	Mass float32 `protobuf:"fixed32,18,opt,name=mass,proto3" json:"mass,omitempty"`
	//* 物理碰撞范围（敌方|队友|友方）
	PhysicRadius []float32 `protobuf:"fixed32,19,rep,packed,name=physic_radius,json=physicRadius,proto3" json:"physic_radius,omitempty"`
	//* 模型缩放比例
	Scale float32 `protobuf:"fixed32,20,opt,name=scale,proto3" json:"scale,omitempty"`
	//* 影子缩放比例（长|宽）
	ShadowScale []float32 `protobuf:"fixed32,21,rep,packed,name=shadow_scale,json=shadowScale,proto3" json:"shadow_scale,omitempty"`
	//* 英雄是否可以被捕获
	CanCapture bool `protobuf:"varint,22,opt,name=can_capture,json=canCapture,proto3" json:"can_capture,omitempty"`
	//* 英雄短语音
	HeroSoundShort string `protobuf:"bytes,23,opt,name=hero_sound_short,json=heroSoundShort,proto3" json:"hero_sound_short,omitempty"`
	//* 近战攻击
	MeleeDps float32 `protobuf:"fixed32,24,opt,name=melee_dps,json=meleeDps,proto3" json:"melee_dps,omitempty"`
	//* 近战攻击速度
	//(单位:秒)
	MeleeSpeed float32 `protobuf:"fixed32,25,opt,name=melee_speed,json=meleeSpeed,proto3" json:"melee_speed,omitempty"`
	//* 近战范围攻击半径
	MeleeRadius float32 `protobuf:"fixed32,26,opt,name=melee_radius,json=meleeRadius,proto3" json:"melee_radius,omitempty"`
	//* 近战击中特效
	MeleeHitEffect []string `protobuf:"bytes,27,rep,name=melee_hit_effect,json=meleeHitEffect,proto3" json:"melee_hit_effect,omitempty"`
	//* 远程攻击力
	RangeDps float32 `protobuf:"fixed32,28,opt,name=range_dps,json=rangeDps,proto3" json:"range_dps,omitempty"`
	//* 远程攻击速度(单位:秒)
	RangeSpeed float32 `protobuf:"fixed32,29,opt,name=range_speed,json=rangeSpeed,proto3" json:"range_speed,omitempty"`
	//* 远程伤害半径
	RangeRadius float32 `protobuf:"fixed32,30,opt,name=range_radius,json=rangeRadius,proto3" json:"range_radius,omitempty"`
	//* 远程击中特效
	RangeHitEffect []string `protobuf:"bytes,31,rep,name=range_hit_effect,json=rangeHitEffect,proto3" json:"range_hit_effect,omitempty"`
	//* 冲锋伤害
	ChargeDmg float32 `protobuf:"fixed32,32,opt,name=charge_dmg,json=chargeDmg,proto3" json:"charge_dmg,omitempty"`
	//* 冲锋特效
	ChargeAnimEffect string `protobuf:"bytes,33,opt,name=charge_anim_effect,json=chargeAnimEffect,proto3" json:"charge_anim_effect,omitempty"`
	//* 冲锋击中特效
	ChargeAnimEffectHit string `protobuf:"bytes,34,opt,name=charge_anim_effect_hit,json=chargeAnimEffectHit,proto3" json:"charge_anim_effect_hit,omitempty"`
	//* 聚焦后的镜头高度
	FocusAltitude float32 `protobuf:"fixed32,35,opt,name=focus_altitude,json=focusAltitude,proto3" json:"focus_altitude,omitempty"`
	//* 暴击伤害加成
	CriDamage float32 `protobuf:"fixed32,36,opt,name=cri_damage,json=criDamage,proto3" json:"cri_damage,omitempty"`
	//* 是否天赋全开
	FullTalent bool `protobuf:"varint,37,opt,name=full_talent,json=fullTalent,proto3" json:"full_talent,omitempty"`
	//* 悬赏掉落包
	CatchReward uint32 `protobuf:"varint,38,opt,name=catch_reward,json=catchReward,proto3" json:"catch_reward,omitempty"`
	//* 英雄偏向
	HeroDeviation string `protobuf:"bytes,39,opt,name=hero_deviation,json=heroDeviation,proto3" json:"hero_deviation,omitempty"`
	//* 英雄列传
	HeroProfile string `protobuf:"bytes,40,opt,name=hero_profile,json=heroProfile,proto3" json:"hero_profile,omitempty"`
	//* 最大行动点数
	MaxActionPoint uint32 `protobuf:"varint,41,opt,name=max_action_point,json=maxActionPoint,proto3" json:"max_action_point,omitempty"`
	//* 初始士气
	Morale uint32 `protobuf:"varint,42,opt,name=morale,proto3" json:"morale,omitempty"`
	//* 士气攻击力
	MoraleAtk uint32 `protobuf:"varint,43,opt,name=morale_atk,json=moraleAtk,proto3" json:"morale_atk,omitempty"`
	//* 士气防御力
	MoraleDef uint32 `protobuf:"varint,44,opt,name=morale_def,json=moraleDef,proto3" json:"morale_def,omitempty"`
	//* 英雄死亡扣除士气
	DeadMorale           uint32   `protobuf:"varint,45,opt,name=dead_morale,json=deadMorale,proto3" json:"dead_morale,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Heroes_Config) Reset()         { *m = Heroes_Config{} }
func (m *Heroes_Config) String() string { return proto.CompactTextString(m) }
func (*Heroes_Config) ProtoMessage()    {}
func (*Heroes_Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_f456ca96fe808bc1, []int{1}
}

func (m *Heroes_Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Heroes_Config.Unmarshal(m, b)
}
func (m *Heroes_Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Heroes_Config.Marshal(b, m, deterministic)
}
func (m *Heroes_Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Heroes_Config.Merge(m, src)
}
func (m *Heroes_Config) XXX_Size() int {
	return xxx_messageInfo_Heroes_Config.Size(m)
}
func (m *Heroes_Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Heroes_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Heroes_Config proto.InternalMessageInfo

func (m *Heroes_Config) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Heroes_Config) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *Heroes_Config) GetDebugLevel() uint32 {
	if m != nil {
		return m.DebugLevel
	}
	return 0
}

func (m *Heroes_Config) GetDebugFloor() uint32 {
	if m != nil {
		return m.DebugFloor
	}
	return 0
}

func (m *Heroes_Config) GetDebugPawnCountLevel() uint32 {
	if m != nil {
		return m.DebugPawnCountLevel
	}
	return 0
}

func (m *Heroes_Config) GetDebugRank() uint32 {
	if m != nil {
		return m.DebugRank
	}
	return 0
}

func (m *Heroes_Config) GetDebugTalent() []uint32 {
	if m != nil {
		return m.DebugTalent
	}
	return nil
}

func (m *Heroes_Config) GetHeroNameGlobal() string {
	if m != nil {
		return m.HeroNameGlobal
	}
	return ""
}

func (m *Heroes_Config) GetIconFormation() string {
	if m != nil {
		return m.IconFormation
	}
	return ""
}

func (m *Heroes_Config) GetIconFlag() string {
	if m != nil {
		return m.IconFlag
	}
	return ""
}

func (m *Heroes_Config) GetTeamBannerHeight() int32 {
	if m != nil {
		return m.TeamBannerHeight
	}
	return 0
}

func (m *Heroes_Config) GetClassify() uint32 {
	if m != nil {
		return m.Classify
	}
	return 0
}

func (m *Heroes_Config) GetHeroType() uint32 {
	if m != nil {
		return m.HeroType
	}
	return 0
}

func (m *Heroes_Config) GetQuality() uint32 {
	if m != nil {
		return m.Quality
	}
	return 0
}

func (m *Heroes_Config) GetProjectileId() uint32 {
	if m != nil {
		return m.ProjectileId
	}
	return 0
}

func (m *Heroes_Config) GetTeamloigicId() uint32 {
	if m != nil {
		return m.TeamloigicId
	}
	return 0
}

func (m *Heroes_Config) GetSkills() []uint32 {
	if m != nil {
		return m.Skills
	}
	return nil
}

func (m *Heroes_Config) GetMass() float32 {
	if m != nil {
		return m.Mass
	}
	return 0
}

func (m *Heroes_Config) GetPhysicRadius() []float32 {
	if m != nil {
		return m.PhysicRadius
	}
	return nil
}

func (m *Heroes_Config) GetScale() float32 {
	if m != nil {
		return m.Scale
	}
	return 0
}

func (m *Heroes_Config) GetShadowScale() []float32 {
	if m != nil {
		return m.ShadowScale
	}
	return nil
}

func (m *Heroes_Config) GetCanCapture() bool {
	if m != nil {
		return m.CanCapture
	}
	return false
}

func (m *Heroes_Config) GetHeroSoundShort() string {
	if m != nil {
		return m.HeroSoundShort
	}
	return ""
}

func (m *Heroes_Config) GetMeleeDps() float32 {
	if m != nil {
		return m.MeleeDps
	}
	return 0
}

func (m *Heroes_Config) GetMeleeSpeed() float32 {
	if m != nil {
		return m.MeleeSpeed
	}
	return 0
}

func (m *Heroes_Config) GetMeleeRadius() float32 {
	if m != nil {
		return m.MeleeRadius
	}
	return 0
}

func (m *Heroes_Config) GetMeleeHitEffect() []string {
	if m != nil {
		return m.MeleeHitEffect
	}
	return nil
}

func (m *Heroes_Config) GetRangeDps() float32 {
	if m != nil {
		return m.RangeDps
	}
	return 0
}

func (m *Heroes_Config) GetRangeSpeed() float32 {
	if m != nil {
		return m.RangeSpeed
	}
	return 0
}

func (m *Heroes_Config) GetRangeRadius() float32 {
	if m != nil {
		return m.RangeRadius
	}
	return 0
}

func (m *Heroes_Config) GetRangeHitEffect() []string {
	if m != nil {
		return m.RangeHitEffect
	}
	return nil
}

func (m *Heroes_Config) GetChargeDmg() float32 {
	if m != nil {
		return m.ChargeDmg
	}
	return 0
}

func (m *Heroes_Config) GetChargeAnimEffect() string {
	if m != nil {
		return m.ChargeAnimEffect
	}
	return ""
}

func (m *Heroes_Config) GetChargeAnimEffectHit() string {
	if m != nil {
		return m.ChargeAnimEffectHit
	}
	return ""
}

func (m *Heroes_Config) GetFocusAltitude() float32 {
	if m != nil {
		return m.FocusAltitude
	}
	return 0
}

func (m *Heroes_Config) GetCriDamage() float32 {
	if m != nil {
		return m.CriDamage
	}
	return 0
}

func (m *Heroes_Config) GetFullTalent() bool {
	if m != nil {
		return m.FullTalent
	}
	return false
}

func (m *Heroes_Config) GetCatchReward() uint32 {
	if m != nil {
		return m.CatchReward
	}
	return 0
}

func (m *Heroes_Config) GetHeroDeviation() string {
	if m != nil {
		return m.HeroDeviation
	}
	return ""
}

func (m *Heroes_Config) GetHeroProfile() string {
	if m != nil {
		return m.HeroProfile
	}
	return ""
}

func (m *Heroes_Config) GetMaxActionPoint() uint32 {
	if m != nil {
		return m.MaxActionPoint
	}
	return 0
}

func (m *Heroes_Config) GetMorale() uint32 {
	if m != nil {
		return m.Morale
	}
	return 0
}

func (m *Heroes_Config) GetMoraleAtk() uint32 {
	if m != nil {
		return m.MoraleAtk
	}
	return 0
}

func (m *Heroes_Config) GetMoraleDef() uint32 {
	if m != nil {
		return m.MoraleDef
	}
	return 0
}

func (m *Heroes_Config) GetDeadMorale() uint32 {
	if m != nil {
		return m.DeadMorale
	}
	return 0
}

type Heros_Words_Config struct {
	//* 唯一标识
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//* 开场说的话
	BattleStartWords []string `protobuf:"bytes,2,rep,name=battle_start_words,json=battleStartWords,proto3" json:"battle_start_words,omitempty"`
	//* 冲锋说的话
	ChargeWords []string `protobuf:"bytes,3,rep,name=charge_words,json=chargeWords,proto3" json:"charge_words,omitempty"`
	//* 放技能说的话
	CastSpellWords []string `protobuf:"bytes,4,rep,name=cast_spell_words,json=castSpellWords,proto3" json:"cast_spell_words,omitempty"`
	//* 遗言
	LastWords            []string `protobuf:"bytes,5,rep,name=last_words,json=lastWords,proto3" json:"last_words,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Heros_Words_Config) Reset()         { *m = Heros_Words_Config{} }
func (m *Heros_Words_Config) String() string { return proto.CompactTextString(m) }
func (*Heros_Words_Config) ProtoMessage()    {}
func (*Heros_Words_Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_f456ca96fe808bc1, []int{2}
}

func (m *Heros_Words_Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Heros_Words_Config.Unmarshal(m, b)
}
func (m *Heros_Words_Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Heros_Words_Config.Marshal(b, m, deterministic)
}
func (m *Heros_Words_Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Heros_Words_Config.Merge(m, src)
}
func (m *Heros_Words_Config) XXX_Size() int {
	return xxx_messageInfo_Heros_Words_Config.Size(m)
}
func (m *Heros_Words_Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Heros_Words_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Heros_Words_Config proto.InternalMessageInfo

func (m *Heros_Words_Config) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Heros_Words_Config) GetBattleStartWords() []string {
	if m != nil {
		return m.BattleStartWords
	}
	return nil
}

func (m *Heros_Words_Config) GetChargeWords() []string {
	if m != nil {
		return m.ChargeWords
	}
	return nil
}

func (m *Heros_Words_Config) GetCastSpellWords() []string {
	if m != nil {
		return m.CastSpellWords
	}
	return nil
}

func (m *Heros_Words_Config) GetLastWords() []string {
	if m != nil {
		return m.LastWords
	}
	return nil
}

type Heroes_Data_Config struct {
	//* ID
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//*
	HeroId uint32 `protobuf:"varint,2,opt,name=hero_id,json=heroId,proto3" json:"hero_id,omitempty"`
	//* 阶数
	Floor int32 `protobuf:"varint,3,opt,name=floor,proto3" json:"floor,omitempty"`
	//* 血量
	HpBase float32 `protobuf:"fixed32,4,opt,name=hp_base,json=hpBase,proto3" json:"hp_base,omitempty"`
	//* 血量成长系数
	HpGrowth float32 `protobuf:"fixed32,5,opt,name=hp_growth,json=hpGrowth,proto3" json:"hp_growth,omitempty"`
	//* 攻击值
	AttackBase float32 `protobuf:"fixed32,6,opt,name=attack_base,json=attackBase,proto3" json:"attack_base,omitempty"`
	//* 攻击成长系数
	AttackGrowth float32 `protobuf:"fixed32,7,opt,name=attack_growth,json=attackGrowth,proto3" json:"attack_growth,omitempty"`
	//* 真实伤害
	RealAttackBase float32 `protobuf:"fixed32,8,opt,name=real_attack_base,json=realAttackBase,proto3" json:"real_attack_base,omitempty"`
	//* 真实伤害成长
	RealAttackGrowth float32 `protobuf:"fixed32,9,opt,name=real_attack_growth,json=realAttackGrowth,proto3" json:"real_attack_growth,omitempty"`
	//* 防御
	DefenceBase float32 `protobuf:"fixed32,10,opt,name=defence_base,json=defenceBase,proto3" json:"defence_base,omitempty"`
	//* 防御成长洗漱
	DefenceGrowth float32 `protobuf:"fixed32,11,opt,name=defence_growth,json=defenceGrowth,proto3" json:"defence_growth,omitempty"`
	//* 闪避值
	DodgeBase float32 `protobuf:"fixed32,12,opt,name=dodge_base,json=dodgeBase,proto3" json:"dodge_base,omitempty"`
	//* 闪避成长系数
	DodgeGrowth float32 `protobuf:"fixed32,13,opt,name=dodge_growth,json=dodgeGrowth,proto3" json:"dodge_growth,omitempty"`
	//* 暴击值
	CriticalBase float32 `protobuf:"fixed32,14,opt,name=critical_base,json=criticalBase,proto3" json:"critical_base,omitempty"`
	//* 暴击成长系数
	CriticalGrowth float32 `protobuf:"fixed32,15,opt,name=critical_growth,json=criticalGrowth,proto3" json:"critical_growth,omitempty"`
	//* 基础征服时间
	ConquerTimeBase float32 `protobuf:"fixed32,16,opt,name=conquer_time_base,json=conquerTimeBase,proto3" json:"conquer_time_base,omitempty"`
	//* 征服时间成长
	ConquerTimeGrowth float32 `protobuf:"fixed32,17,opt,name=conquer_time_growth,json=conquerTimeGrowth,proto3" json:"conquer_time_growth,omitempty"`
	//* 最大等级
	MaxLevel int32 `protobuf:"varint,18,opt,name=max_level,json=maxLevel,proto3" json:"max_level,omitempty"`
	//* 突破材料列表
	UpMaterials []uint32 `protobuf:"varint,19,rep,packed,name=up_materials,json=upMaterials,proto3" json:"up_materials,omitempty"`
	//* 突破所需的玩家等级
	PlayerLv             int32    `protobuf:"varint,20,opt,name=player_lv,json=playerLv,proto3" json:"player_lv,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Heroes_Data_Config) Reset()         { *m = Heroes_Data_Config{} }
func (m *Heroes_Data_Config) String() string { return proto.CompactTextString(m) }
func (*Heroes_Data_Config) ProtoMessage()    {}
func (*Heroes_Data_Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_f456ca96fe808bc1, []int{3}
}

func (m *Heroes_Data_Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Heroes_Data_Config.Unmarshal(m, b)
}
func (m *Heroes_Data_Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Heroes_Data_Config.Marshal(b, m, deterministic)
}
func (m *Heroes_Data_Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Heroes_Data_Config.Merge(m, src)
}
func (m *Heroes_Data_Config) XXX_Size() int {
	return xxx_messageInfo_Heroes_Data_Config.Size(m)
}
func (m *Heroes_Data_Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Heroes_Data_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Heroes_Data_Config proto.InternalMessageInfo

func (m *Heroes_Data_Config) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Heroes_Data_Config) GetHeroId() uint32 {
	if m != nil {
		return m.HeroId
	}
	return 0
}

func (m *Heroes_Data_Config) GetFloor() int32 {
	if m != nil {
		return m.Floor
	}
	return 0
}

func (m *Heroes_Data_Config) GetHpBase() float32 {
	if m != nil {
		return m.HpBase
	}
	return 0
}

func (m *Heroes_Data_Config) GetHpGrowth() float32 {
	if m != nil {
		return m.HpGrowth
	}
	return 0
}

func (m *Heroes_Data_Config) GetAttackBase() float32 {
	if m != nil {
		return m.AttackBase
	}
	return 0
}

func (m *Heroes_Data_Config) GetAttackGrowth() float32 {
	if m != nil {
		return m.AttackGrowth
	}
	return 0
}

func (m *Heroes_Data_Config) GetRealAttackBase() float32 {
	if m != nil {
		return m.RealAttackBase
	}
	return 0
}

func (m *Heroes_Data_Config) GetRealAttackGrowth() float32 {
	if m != nil {
		return m.RealAttackGrowth
	}
	return 0
}

func (m *Heroes_Data_Config) GetDefenceBase() float32 {
	if m != nil {
		return m.DefenceBase
	}
	return 0
}

func (m *Heroes_Data_Config) GetDefenceGrowth() float32 {
	if m != nil {
		return m.DefenceGrowth
	}
	return 0
}

func (m *Heroes_Data_Config) GetDodgeBase() float32 {
	if m != nil {
		return m.DodgeBase
	}
	return 0
}

func (m *Heroes_Data_Config) GetDodgeGrowth() float32 {
	if m != nil {
		return m.DodgeGrowth
	}
	return 0
}

func (m *Heroes_Data_Config) GetCriticalBase() float32 {
	if m != nil {
		return m.CriticalBase
	}
	return 0
}

func (m *Heroes_Data_Config) GetCriticalGrowth() float32 {
	if m != nil {
		return m.CriticalGrowth
	}
	return 0
}

func (m *Heroes_Data_Config) GetConquerTimeBase() float32 {
	if m != nil {
		return m.ConquerTimeBase
	}
	return 0
}

func (m *Heroes_Data_Config) GetConquerTimeGrowth() float32 {
	if m != nil {
		return m.ConquerTimeGrowth
	}
	return 0
}

func (m *Heroes_Data_Config) GetMaxLevel() int32 {
	if m != nil {
		return m.MaxLevel
	}
	return 0
}

func (m *Heroes_Data_Config) GetUpMaterials() []uint32 {
	if m != nil {
		return m.UpMaterials
	}
	return nil
}

func (m *Heroes_Data_Config) GetPlayerLv() int32 {
	if m != nil {
		return m.PlayerLv
	}
	return 0
}

type Heroes_Skill_Config struct {
	//* ID
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//*
	HeroId uint32 `protobuf:"varint,2,opt,name=hero_id,json=heroId,proto3" json:"hero_id,omitempty"`
	//* 技能格子
	SkillSlot uint32 `protobuf:"varint,3,opt,name=skill_slot,json=skillSlot,proto3" json:"skill_slot,omitempty"`
	//* 格子品质色
	Quality uint32 `protobuf:"varint,4,opt,name=quality,proto3" json:"quality,omitempty"`
	//* 所需等级
	NeedLevel uint32 `protobuf:"varint,5,opt,name=need_level,json=needLevel,proto3" json:"need_level,omitempty"`
	//* 所需星级
	NeedRank int32 `protobuf:"varint,6,opt,name=need_rank,json=needRank,proto3" json:"need_rank,omitempty"`
	//* 技能表
	SkillTable []uint32 `protobuf:"varint,7,rep,packed,name=skill_table,json=skillTable,proto3" json:"skill_table,omitempty"`
	//* 刷技能材料
	Materials []uint32 `protobuf:"varint,8,rep,packed,name=materials,proto3" json:"materials,omitempty"`
	//* 格子升级材料
	UpMaterials          []uint32 `protobuf:"varint,9,rep,packed,name=up_materials,json=upMaterials,proto3" json:"up_materials,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Heroes_Skill_Config) Reset()         { *m = Heroes_Skill_Config{} }
func (m *Heroes_Skill_Config) String() string { return proto.CompactTextString(m) }
func (*Heroes_Skill_Config) ProtoMessage()    {}
func (*Heroes_Skill_Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_f456ca96fe808bc1, []int{4}
}

func (m *Heroes_Skill_Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Heroes_Skill_Config.Unmarshal(m, b)
}
func (m *Heroes_Skill_Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Heroes_Skill_Config.Marshal(b, m, deterministic)
}
func (m *Heroes_Skill_Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Heroes_Skill_Config.Merge(m, src)
}
func (m *Heroes_Skill_Config) XXX_Size() int {
	return xxx_messageInfo_Heroes_Skill_Config.Size(m)
}
func (m *Heroes_Skill_Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Heroes_Skill_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Heroes_Skill_Config proto.InternalMessageInfo

func (m *Heroes_Skill_Config) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Heroes_Skill_Config) GetHeroId() uint32 {
	if m != nil {
		return m.HeroId
	}
	return 0
}

func (m *Heroes_Skill_Config) GetSkillSlot() uint32 {
	if m != nil {
		return m.SkillSlot
	}
	return 0
}

func (m *Heroes_Skill_Config) GetQuality() uint32 {
	if m != nil {
		return m.Quality
	}
	return 0
}

func (m *Heroes_Skill_Config) GetNeedLevel() uint32 {
	if m != nil {
		return m.NeedLevel
	}
	return 0
}

func (m *Heroes_Skill_Config) GetNeedRank() int32 {
	if m != nil {
		return m.NeedRank
	}
	return 0
}

func (m *Heroes_Skill_Config) GetSkillTable() []uint32 {
	if m != nil {
		return m.SkillTable
	}
	return nil
}

func (m *Heroes_Skill_Config) GetMaterials() []uint32 {
	if m != nil {
		return m.Materials
	}
	return nil
}

func (m *Heroes_Skill_Config) GetUpMaterials() []uint32 {
	if m != nil {
		return m.UpMaterials
	}
	return nil
}

type Heroes_Rank_Config struct {
	//* 唯一标识
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//* 英雄ID
	HeroId uint32 `protobuf:"varint,2,opt,name=hero_id,json=heroId,proto3" json:"hero_id,omitempty"`
	//* 星阶
	Rank uint32 `protobuf:"varint,3,opt,name=rank,proto3" json:"rank,omitempty"`
	//* 升级经验
	Exp uint32 `protobuf:"varint,4,opt,name=exp,proto3" json:"exp,omitempty"`
	//* 最低等级限制
	LevelLimit uint32 `protobuf:"varint,5,opt,name=level_limit,json=levelLimit,proto3" json:"level_limit,omitempty"`
	//* 血量倍率
	Hp float32 `protobuf:"fixed32,6,opt,name=hp,proto3" json:"hp,omitempty"`
	//* 攻击倍率
	Attack float32 `protobuf:"fixed32,7,opt,name=attack,proto3" json:"attack,omitempty"`
	//* 真实伤害倍率
	RealAttack float32 `protobuf:"fixed32,8,opt,name=real_attack,json=realAttack,proto3" json:"real_attack,omitempty"`
	//* 防御倍率
	Defence float32 `protobuf:"fixed32,9,opt,name=defence,proto3" json:"defence,omitempty"`
	//* 闪避倍率
	Dodge float32 `protobuf:"fixed32,10,opt,name=dodge,proto3" json:"dodge,omitempty"`
	//* 暴击倍率
	Critical float32 `protobuf:"fixed32,11,opt,name=critical,proto3" json:"critical,omitempty"`
	//* 英雄模型资源配置ID
	//（索引Apperance_Config）
	HeroAppearId uint32 `protobuf:"varint,12,opt,name=hero_appear_id,json=heroAppearId,proto3" json:"hero_appear_id,omitempty"`
	//* 士兵ID（索引SoldierAttribute_Config）
	SoliderId uint32 `protobuf:"varint,13,opt,name=solider_id,json=soliderId,proto3" json:"solider_id,omitempty"`
	//* 主动技能释放次数
	SpellCount           uint32   `protobuf:"varint,14,opt,name=spell_count,json=spellCount,proto3" json:"spell_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Heroes_Rank_Config) Reset()         { *m = Heroes_Rank_Config{} }
func (m *Heroes_Rank_Config) String() string { return proto.CompactTextString(m) }
func (*Heroes_Rank_Config) ProtoMessage()    {}
func (*Heroes_Rank_Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_f456ca96fe808bc1, []int{5}
}

func (m *Heroes_Rank_Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Heroes_Rank_Config.Unmarshal(m, b)
}
func (m *Heroes_Rank_Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Heroes_Rank_Config.Marshal(b, m, deterministic)
}
func (m *Heroes_Rank_Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Heroes_Rank_Config.Merge(m, src)
}
func (m *Heroes_Rank_Config) XXX_Size() int {
	return xxx_messageInfo_Heroes_Rank_Config.Size(m)
}
func (m *Heroes_Rank_Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Heroes_Rank_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Heroes_Rank_Config proto.InternalMessageInfo

func (m *Heroes_Rank_Config) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Heroes_Rank_Config) GetHeroId() uint32 {
	if m != nil {
		return m.HeroId
	}
	return 0
}

func (m *Heroes_Rank_Config) GetRank() uint32 {
	if m != nil {
		return m.Rank
	}
	return 0
}

func (m *Heroes_Rank_Config) GetExp() uint32 {
	if m != nil {
		return m.Exp
	}
	return 0
}

func (m *Heroes_Rank_Config) GetLevelLimit() uint32 {
	if m != nil {
		return m.LevelLimit
	}
	return 0
}

func (m *Heroes_Rank_Config) GetHp() float32 {
	if m != nil {
		return m.Hp
	}
	return 0
}

func (m *Heroes_Rank_Config) GetAttack() float32 {
	if m != nil {
		return m.Attack
	}
	return 0
}

func (m *Heroes_Rank_Config) GetRealAttack() float32 {
	if m != nil {
		return m.RealAttack
	}
	return 0
}

func (m *Heroes_Rank_Config) GetDefence() float32 {
	if m != nil {
		return m.Defence
	}
	return 0
}

func (m *Heroes_Rank_Config) GetDodge() float32 {
	if m != nil {
		return m.Dodge
	}
	return 0
}

func (m *Heroes_Rank_Config) GetCritical() float32 {
	if m != nil {
		return m.Critical
	}
	return 0
}

func (m *Heroes_Rank_Config) GetHeroAppearId() uint32 {
	if m != nil {
		return m.HeroAppearId
	}
	return 0
}

func (m *Heroes_Rank_Config) GetSoliderId() uint32 {
	if m != nil {
		return m.SoliderId
	}
	return 0
}

func (m *Heroes_Rank_Config) GetSpellCount() uint32 {
	if m != nil {
		return m.SpellCount
	}
	return 0
}

type Solo_Hero_Config struct {
	//* 唯一标识
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//* 摇杆模式
	JoystickMode uint32 `protobuf:"varint,2,opt,name=joystick_mode,json=joystickMode,proto3" json:"joystick_mode,omitempty"`
	//* 能量上限
	PowerMax uint32 `protobuf:"varint,3,opt,name=power_max,json=powerMax,proto3" json:"power_max,omitempty"`
	//* 每击获得能量
	PowerRecover []float32 `protobuf:"fixed32,4,rep,packed,name=power_recover,json=powerRecover,proto3" json:"power_recover,omitempty"`
	//* 连击数增加提升攻击力
	ComboAtk []float32 `protobuf:"fixed32,5,rep,packed,name=combo_atk,json=comboAtk,proto3" json:"combo_atk,omitempty"`
	//* 移动速度倍数
	SpeedRate float32 `protobuf:"fixed32,6,opt,name=speed_rate,json=speedRate,proto3" json:"speed_rate,omitempty"`
	//* 攻击范围，射程
	AtkRange float32 `protobuf:"fixed32,7,opt,name=atk_range,json=atkRange,proto3" json:"atk_range,omitempty"`
	//* 伤害范围
	DmgRange []float32 `protobuf:"fixed32,8,rep,packed,name=dmg_range,json=dmgRange,proto3" json:"dmg_range,omitempty"`
	//* 伤害角度
	DmgAngle []float32 `protobuf:"fixed32,9,rep,packed,name=dmg_angle,json=dmgAngle,proto3" json:"dmg_angle,omitempty"`
	//* 开始特效
	SoloShakeEffect []string `protobuf:"bytes,10,rep,name=solo_shake_effect,json=soloShakeEffect,proto3" json:"solo_shake_effect,omitempty"`
	//* 触发特效
	SoloTriggerEffect []string `protobuf:"bytes,11,rep,name=solo_trigger_effect,json=soloTriggerEffect,proto3" json:"solo_trigger_effect,omitempty"`
	//* 击飞参数
	SoloHitFly []string `protobuf:"bytes,12,rep,name=solo_hit_fly,json=soloHitFly,proto3" json:"solo_hit_fly,omitempty"`
	//* 触发音效
	SoloShakeSound []string `protobuf:"bytes,13,rep,name=solo_shake_sound,json=soloShakeSound,proto3" json:"solo_shake_sound,omitempty"`
	//* 击中音效
	SoloTriggerSound string `protobuf:"bytes,14,opt,name=solo_trigger_sound,json=soloTriggerSound,proto3" json:"solo_trigger_sound,omitempty"`
	//* 连击后额外硬直
	CooldownDelay []float32 `protobuf:"fixed32,15,rep,packed,name=cooldown_delay,json=cooldownDelay,proto3" json:"cooldown_delay,omitempty"`
	//* 闪避距离
	EvadeDis float32 `protobuf:"fixed32,16,opt,name=evade_dis,json=evadeDis,proto3" json:"evade_dis,omitempty"`
	//* 镜头震动
	CameraShake          []string `protobuf:"bytes,17,rep,name=camera_shake,json=cameraShake,proto3" json:"camera_shake,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Solo_Hero_Config) Reset()         { *m = Solo_Hero_Config{} }
func (m *Solo_Hero_Config) String() string { return proto.CompactTextString(m) }
func (*Solo_Hero_Config) ProtoMessage()    {}
func (*Solo_Hero_Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_f456ca96fe808bc1, []int{6}
}

func (m *Solo_Hero_Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Solo_Hero_Config.Unmarshal(m, b)
}
func (m *Solo_Hero_Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Solo_Hero_Config.Marshal(b, m, deterministic)
}
func (m *Solo_Hero_Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Solo_Hero_Config.Merge(m, src)
}
func (m *Solo_Hero_Config) XXX_Size() int {
	return xxx_messageInfo_Solo_Hero_Config.Size(m)
}
func (m *Solo_Hero_Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Solo_Hero_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Solo_Hero_Config proto.InternalMessageInfo

func (m *Solo_Hero_Config) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Solo_Hero_Config) GetJoystickMode() uint32 {
	if m != nil {
		return m.JoystickMode
	}
	return 0
}

func (m *Solo_Hero_Config) GetPowerMax() uint32 {
	if m != nil {
		return m.PowerMax
	}
	return 0
}

func (m *Solo_Hero_Config) GetPowerRecover() []float32 {
	if m != nil {
		return m.PowerRecover
	}
	return nil
}

func (m *Solo_Hero_Config) GetComboAtk() []float32 {
	if m != nil {
		return m.ComboAtk
	}
	return nil
}

func (m *Solo_Hero_Config) GetSpeedRate() float32 {
	if m != nil {
		return m.SpeedRate
	}
	return 0
}

func (m *Solo_Hero_Config) GetAtkRange() float32 {
	if m != nil {
		return m.AtkRange
	}
	return 0
}

func (m *Solo_Hero_Config) GetDmgRange() []float32 {
	if m != nil {
		return m.DmgRange
	}
	return nil
}

func (m *Solo_Hero_Config) GetDmgAngle() []float32 {
	if m != nil {
		return m.DmgAngle
	}
	return nil
}

func (m *Solo_Hero_Config) GetSoloShakeEffect() []string {
	if m != nil {
		return m.SoloShakeEffect
	}
	return nil
}

func (m *Solo_Hero_Config) GetSoloTriggerEffect() []string {
	if m != nil {
		return m.SoloTriggerEffect
	}
	return nil
}

func (m *Solo_Hero_Config) GetSoloHitFly() []string {
	if m != nil {
		return m.SoloHitFly
	}
	return nil
}

func (m *Solo_Hero_Config) GetSoloShakeSound() []string {
	if m != nil {
		return m.SoloShakeSound
	}
	return nil
}

func (m *Solo_Hero_Config) GetSoloTriggerSound() string {
	if m != nil {
		return m.SoloTriggerSound
	}
	return ""
}

func (m *Solo_Hero_Config) GetCooldownDelay() []float32 {
	if m != nil {
		return m.CooldownDelay
	}
	return nil
}

func (m *Solo_Hero_Config) GetEvadeDis() float32 {
	if m != nil {
		return m.EvadeDis
	}
	return 0
}

func (m *Solo_Hero_Config) GetCameraShake() []string {
	if m != nil {
		return m.CameraShake
	}
	return nil
}

type Solo_Heroes_Data_Config struct {
	//* 唯一标识
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//* 英雄测试等级(如果填X则用玩家数据，填了数字则用数字覆盖玩家数据）
	DebugLevel uint32 `protobuf:"varint,2,opt,name=debug_level,json=debugLevel,proto3" json:"debug_level,omitempty"`
	//* 血量
	HpBase float32 `protobuf:"fixed32,3,opt,name=hp_base,json=hpBase,proto3" json:"hp_base,omitempty"`
	//* 血量成长系数
	HpGrowth float32 `protobuf:"fixed32,4,opt,name=hp_growth,json=hpGrowth,proto3" json:"hp_growth,omitempty"`
	//* 攻击值
	AttackBase float32 `protobuf:"fixed32,5,opt,name=attack_base,json=attackBase,proto3" json:"attack_base,omitempty"`
	//* 攻击成长系数
	AttackGrowth float32 `protobuf:"fixed32,6,opt,name=attack_growth,json=attackGrowth,proto3" json:"attack_growth,omitempty"`
	//* 真实伤害
	RealAttackBase float32 `protobuf:"fixed32,7,opt,name=real_attack_base,json=realAttackBase,proto3" json:"real_attack_base,omitempty"`
	//* 真实伤害成长
	RealAttackGrowth float32 `protobuf:"fixed32,8,opt,name=real_attack_growth,json=realAttackGrowth,proto3" json:"real_attack_growth,omitempty"`
	//* 防御
	DefenceBase float32 `protobuf:"fixed32,9,opt,name=defence_base,json=defenceBase,proto3" json:"defence_base,omitempty"`
	//* 防御成长洗漱
	DefenceGrowth float32 `protobuf:"fixed32,10,opt,name=defence_growth,json=defenceGrowth,proto3" json:"defence_growth,omitempty"`
	//* 闪避值
	DodgeBase float32 `protobuf:"fixed32,11,opt,name=dodge_base,json=dodgeBase,proto3" json:"dodge_base,omitempty"`
	//* 闪避成长系数
	DodgeGrowth float32 `protobuf:"fixed32,12,opt,name=dodge_growth,json=dodgeGrowth,proto3" json:"dodge_growth,omitempty"`
	//* 暴击值
	CriticalBase float32 `protobuf:"fixed32,13,opt,name=critical_base,json=criticalBase,proto3" json:"critical_base,omitempty"`
	//* 暴击成长系数
	CriticalGrowth       float32  `protobuf:"fixed32,14,opt,name=critical_growth,json=criticalGrowth,proto3" json:"critical_growth,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Solo_Heroes_Data_Config) Reset()         { *m = Solo_Heroes_Data_Config{} }
func (m *Solo_Heroes_Data_Config) String() string { return proto.CompactTextString(m) }
func (*Solo_Heroes_Data_Config) ProtoMessage()    {}
func (*Solo_Heroes_Data_Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_f456ca96fe808bc1, []int{7}
}

func (m *Solo_Heroes_Data_Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Solo_Heroes_Data_Config.Unmarshal(m, b)
}
func (m *Solo_Heroes_Data_Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Solo_Heroes_Data_Config.Marshal(b, m, deterministic)
}
func (m *Solo_Heroes_Data_Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Solo_Heroes_Data_Config.Merge(m, src)
}
func (m *Solo_Heroes_Data_Config) XXX_Size() int {
	return xxx_messageInfo_Solo_Heroes_Data_Config.Size(m)
}
func (m *Solo_Heroes_Data_Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Solo_Heroes_Data_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Solo_Heroes_Data_Config proto.InternalMessageInfo

func (m *Solo_Heroes_Data_Config) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Solo_Heroes_Data_Config) GetDebugLevel() uint32 {
	if m != nil {
		return m.DebugLevel
	}
	return 0
}

func (m *Solo_Heroes_Data_Config) GetHpBase() float32 {
	if m != nil {
		return m.HpBase
	}
	return 0
}

func (m *Solo_Heroes_Data_Config) GetHpGrowth() float32 {
	if m != nil {
		return m.HpGrowth
	}
	return 0
}

func (m *Solo_Heroes_Data_Config) GetAttackBase() float32 {
	if m != nil {
		return m.AttackBase
	}
	return 0
}

func (m *Solo_Heroes_Data_Config) GetAttackGrowth() float32 {
	if m != nil {
		return m.AttackGrowth
	}
	return 0
}

func (m *Solo_Heroes_Data_Config) GetRealAttackBase() float32 {
	if m != nil {
		return m.RealAttackBase
	}
	return 0
}

func (m *Solo_Heroes_Data_Config) GetRealAttackGrowth() float32 {
	if m != nil {
		return m.RealAttackGrowth
	}
	return 0
}

func (m *Solo_Heroes_Data_Config) GetDefenceBase() float32 {
	if m != nil {
		return m.DefenceBase
	}
	return 0
}

func (m *Solo_Heroes_Data_Config) GetDefenceGrowth() float32 {
	if m != nil {
		return m.DefenceGrowth
	}
	return 0
}

func (m *Solo_Heroes_Data_Config) GetDodgeBase() float32 {
	if m != nil {
		return m.DodgeBase
	}
	return 0
}

func (m *Solo_Heroes_Data_Config) GetDodgeGrowth() float32 {
	if m != nil {
		return m.DodgeGrowth
	}
	return 0
}

func (m *Solo_Heroes_Data_Config) GetCriticalBase() float32 {
	if m != nil {
		return m.CriticalBase
	}
	return 0
}

func (m *Solo_Heroes_Data_Config) GetCriticalGrowth() float32 {
	if m != nil {
		return m.CriticalGrowth
	}
	return 0
}

type UI_Heroes_Config struct {
	//* 唯一标识
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//* 英雄描述语言(索引多语言表)
	HeroEpicGlobal string `protobuf:"bytes,2,opt,name=hero_epic_global,json=heroEpicGlobal,proto3" json:"hero_epic_global,omitempty"`
	//* 英雄定位说明(索引多语言表)
	Type string `protobuf:"bytes,3,opt,name=Type,proto3" json:"Type,omitempty"`
	//* 是否隐藏
	Hide bool `protobuf:"varint,4,opt,name=hide,proto3" json:"hide,omitempty"`
	//* 缩放比例
	Scale float32 `protobuf:"fixed32,5,opt,name=scale,proto3" json:"scale,omitempty"`
	//* 旋转
	Rot string `protobuf:"bytes,6,opt,name=rot,proto3" json:"rot,omitempty"`
	//* 偏移
	Position string `protobuf:"bytes,7,opt,name=position,proto3" json:"position,omitempty"`
	//* 装备ID(用|隔开)
	Equip string `protobuf:"bytes,8,opt,name=equip,proto3" json:"equip,omitempty"`
	//* 英雄碎片ID
	CardId uint32 `protobuf:"varint,9,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"`
	//* 英雄合成(召唤)需要碎片数
	SummonCost uint32 `protobuf:"varint,10,opt,name=summon_cost,json=summonCost,proto3" json:"summon_cost,omitempty"`
	//* 英雄升级花费
	LevelupGold uint32 `protobuf:"varint,11,opt,name=levelup_gold,json=levelupGold,proto3" json:"levelup_gold,omitempty"`
	//* 英雄语音
	HeroSound string `protobuf:"bytes,12,opt,name=hero_sound,json=heroSound,proto3" json:"hero_sound,omitempty"`
	//* 天赋消耗基础返还率
	TalentCostRrate float32 `protobuf:"fixed32,13,opt,name=talent_cost_rrate,json=talentCostRrate,proto3" json:"talent_cost_rrate,omitempty"`
	//* 返还率成长
	RrateGrow float32 `protobuf:"fixed32,14,opt,name=rrate_grow,json=rrateGrow,proto3" json:"rrate_grow,omitempty"`
	//* 抽将展示动画场景名
	Sfx                  string   `protobuf:"bytes,15,opt,name=sfx,proto3" json:"sfx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UI_Heroes_Config) Reset()         { *m = UI_Heroes_Config{} }
func (m *UI_Heroes_Config) String() string { return proto.CompactTextString(m) }
func (*UI_Heroes_Config) ProtoMessage()    {}
func (*UI_Heroes_Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_f456ca96fe808bc1, []int{8}
}

func (m *UI_Heroes_Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UI_Heroes_Config.Unmarshal(m, b)
}
func (m *UI_Heroes_Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UI_Heroes_Config.Marshal(b, m, deterministic)
}
func (m *UI_Heroes_Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UI_Heroes_Config.Merge(m, src)
}
func (m *UI_Heroes_Config) XXX_Size() int {
	return xxx_messageInfo_UI_Heroes_Config.Size(m)
}
func (m *UI_Heroes_Config) XXX_DiscardUnknown() {
	xxx_messageInfo_UI_Heroes_Config.DiscardUnknown(m)
}

var xxx_messageInfo_UI_Heroes_Config proto.InternalMessageInfo

func (m *UI_Heroes_Config) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UI_Heroes_Config) GetHeroEpicGlobal() string {
	if m != nil {
		return m.HeroEpicGlobal
	}
	return ""
}

func (m *UI_Heroes_Config) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *UI_Heroes_Config) GetHide() bool {
	if m != nil {
		return m.Hide
	}
	return false
}

func (m *UI_Heroes_Config) GetScale() float32 {
	if m != nil {
		return m.Scale
	}
	return 0
}

func (m *UI_Heroes_Config) GetRot() string {
	if m != nil {
		return m.Rot
	}
	return ""
}

func (m *UI_Heroes_Config) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

func (m *UI_Heroes_Config) GetEquip() string {
	if m != nil {
		return m.Equip
	}
	return ""
}

func (m *UI_Heroes_Config) GetCardId() uint32 {
	if m != nil {
		return m.CardId
	}
	return 0
}

func (m *UI_Heroes_Config) GetSummonCost() uint32 {
	if m != nil {
		return m.SummonCost
	}
	return 0
}

func (m *UI_Heroes_Config) GetLevelupGold() uint32 {
	if m != nil {
		return m.LevelupGold
	}
	return 0
}

func (m *UI_Heroes_Config) GetHeroSound() string {
	if m != nil {
		return m.HeroSound
	}
	return ""
}

func (m *UI_Heroes_Config) GetTalentCostRrate() float32 {
	if m != nil {
		return m.TalentCostRrate
	}
	return 0
}

func (m *UI_Heroes_Config) GetRrateGrow() float32 {
	if m != nil {
		return m.RrateGrow
	}
	return 0
}

func (m *UI_Heroes_Config) GetSfx() string {
	if m != nil {
		return m.Sfx
	}
	return ""
}

type Heroes_Type_Config struct {
	//* 唯一标识
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//* 图标资源
	Hero_Icon string `protobuf:"bytes,2,opt,name=Hero_Icon,json=HeroIcon,proto3" json:"Hero_Icon,omitempty"`
	//* 多语言key
	GlobalStringId       string   `protobuf:"bytes,3,opt,name=global_string_id,json=globalStringId,proto3" json:"global_string_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Heroes_Type_Config) Reset()         { *m = Heroes_Type_Config{} }
func (m *Heroes_Type_Config) String() string { return proto.CompactTextString(m) }
func (*Heroes_Type_Config) ProtoMessage()    {}
func (*Heroes_Type_Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_f456ca96fe808bc1, []int{9}
}

func (m *Heroes_Type_Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Heroes_Type_Config.Unmarshal(m, b)
}
func (m *Heroes_Type_Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Heroes_Type_Config.Marshal(b, m, deterministic)
}
func (m *Heroes_Type_Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Heroes_Type_Config.Merge(m, src)
}
func (m *Heroes_Type_Config) XXX_Size() int {
	return xxx_messageInfo_Heroes_Type_Config.Size(m)
}
func (m *Heroes_Type_Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Heroes_Type_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Heroes_Type_Config proto.InternalMessageInfo

func (m *Heroes_Type_Config) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Heroes_Type_Config) GetHero_Icon() string {
	if m != nil {
		return m.Hero_Icon
	}
	return ""
}

func (m *Heroes_Type_Config) GetGlobalStringId() string {
	if m != nil {
		return m.GlobalStringId
	}
	return ""
}

type Heroes_Config_Data struct {
	Appearance_ConfigItems       map[uint32]*Appearance_Config       `protobuf:"bytes,1,rep,name=Appearance_Config_items,json=AppearanceConfigItems,proto3" json:"Appearance_Config_items,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Heroes_ConfigItems           map[uint32]*Heroes_Config           `protobuf:"bytes,2,rep,name=Heroes_Config_items,json=HeroesConfigItems,proto3" json:"Heroes_Config_items,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Heros_Words_ConfigItems      map[uint32]*Heros_Words_Config      `protobuf:"bytes,3,rep,name=Heros_Words_Config_items,json=HerosWordsConfigItems,proto3" json:"Heros_Words_Config_items,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Heroes_Data_ConfigItems      map[uint32]*Heroes_Data_Config      `protobuf:"bytes,4,rep,name=Heroes_Data_Config_items,json=HeroesDataConfigItems,proto3" json:"Heroes_Data_Config_items,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Heroes_Skill_ConfigItems     map[uint32]*Heroes_Skill_Config     `protobuf:"bytes,5,rep,name=Heroes_Skill_Config_items,json=HeroesSkillConfigItems,proto3" json:"Heroes_Skill_Config_items,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Heroes_Rank_ConfigItems      map[uint32]*Heroes_Rank_Config      `protobuf:"bytes,6,rep,name=Heroes_Rank_Config_items,json=HeroesRankConfigItems,proto3" json:"Heroes_Rank_Config_items,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Solo_Hero_ConfigItems        map[uint32]*Solo_Hero_Config        `protobuf:"bytes,7,rep,name=Solo_Hero_Config_items,json=SoloHeroConfigItems,proto3" json:"Solo_Hero_Config_items,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Solo_Heroes_Data_ConfigItems map[uint32]*Solo_Heroes_Data_Config `protobuf:"bytes,8,rep,name=Solo_Heroes_Data_Config_items,json=SoloHeroesDataConfigItems,proto3" json:"Solo_Heroes_Data_Config_items,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	UI_Heroes_ConfigItems        map[uint32]*UI_Heroes_Config        `protobuf:"bytes,9,rep,name=UI_Heroes_Config_items,json=UIHeroesConfigItems,proto3" json:"UI_Heroes_Config_items,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Heroes_Type_ConfigItems      map[uint32]*Heroes_Type_Config      `protobuf:"bytes,10,rep,name=Heroes_Type_Config_items,json=HeroesTypeConfigItems,proto3" json:"Heroes_Type_Config_items,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral         struct{}                            `json:"-"`
	XXX_unrecognized             []byte                              `json:"-"`
	XXX_sizecache                int32                               `json:"-"`
}

func (m *Heroes_Config_Data) Reset()         { *m = Heroes_Config_Data{} }
func (m *Heroes_Config_Data) String() string { return proto.CompactTextString(m) }
func (*Heroes_Config_Data) ProtoMessage()    {}
func (*Heroes_Config_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_f456ca96fe808bc1, []int{10}
}

func (m *Heroes_Config_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Heroes_Config_Data.Unmarshal(m, b)
}
func (m *Heroes_Config_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Heroes_Config_Data.Marshal(b, m, deterministic)
}
func (m *Heroes_Config_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Heroes_Config_Data.Merge(m, src)
}
func (m *Heroes_Config_Data) XXX_Size() int {
	return xxx_messageInfo_Heroes_Config_Data.Size(m)
}
func (m *Heroes_Config_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_Heroes_Config_Data.DiscardUnknown(m)
}

var xxx_messageInfo_Heroes_Config_Data proto.InternalMessageInfo

func (m *Heroes_Config_Data) GetAppearance_ConfigItems() map[uint32]*Appearance_Config {
	if m != nil {
		return m.Appearance_ConfigItems
	}
	return nil
}

func (m *Heroes_Config_Data) GetHeroes_ConfigItems() map[uint32]*Heroes_Config {
	if m != nil {
		return m.Heroes_ConfigItems
	}
	return nil
}

func (m *Heroes_Config_Data) GetHeros_Words_ConfigItems() map[uint32]*Heros_Words_Config {
	if m != nil {
		return m.Heros_Words_ConfigItems
	}
	return nil
}

func (m *Heroes_Config_Data) GetHeroes_Data_ConfigItems() map[uint32]*Heroes_Data_Config {
	if m != nil {
		return m.Heroes_Data_ConfigItems
	}
	return nil
}

func (m *Heroes_Config_Data) GetHeroes_Skill_ConfigItems() map[uint32]*Heroes_Skill_Config {
	if m != nil {
		return m.Heroes_Skill_ConfigItems
	}
	return nil
}

func (m *Heroes_Config_Data) GetHeroes_Rank_ConfigItems() map[uint32]*Heroes_Rank_Config {
	if m != nil {
		return m.Heroes_Rank_ConfigItems
	}
	return nil
}

func (m *Heroes_Config_Data) GetSolo_Hero_ConfigItems() map[uint32]*Solo_Hero_Config {
	if m != nil {
		return m.Solo_Hero_ConfigItems
	}
	return nil
}

func (m *Heroes_Config_Data) GetSolo_Heroes_Data_ConfigItems() map[uint32]*Solo_Heroes_Data_Config {
	if m != nil {
		return m.Solo_Heroes_Data_ConfigItems
	}
	return nil
}

func (m *Heroes_Config_Data) GetUI_Heroes_ConfigItems() map[uint32]*UI_Heroes_Config {
	if m != nil {
		return m.UI_Heroes_ConfigItems
	}
	return nil
}

func (m *Heroes_Config_Data) GetHeroes_Type_ConfigItems() map[uint32]*Heroes_Type_Config {
	if m != nil {
		return m.Heroes_Type_ConfigItems
	}
	return nil
}

func init() {
	proto.RegisterType((*Appearance_Config)(nil), "ConfigData.Appearance_Config")
	proto.RegisterType((*Heroes_Config)(nil), "ConfigData.Heroes_Config")
	proto.RegisterType((*Heros_Words_Config)(nil), "ConfigData.Heros_Words_Config")
	proto.RegisterType((*Heroes_Data_Config)(nil), "ConfigData.Heroes_Data_Config")
	proto.RegisterType((*Heroes_Skill_Config)(nil), "ConfigData.Heroes_Skill_Config")
	proto.RegisterType((*Heroes_Rank_Config)(nil), "ConfigData.Heroes_Rank_Config")
	proto.RegisterType((*Solo_Hero_Config)(nil), "ConfigData.Solo_Hero_Config")
	proto.RegisterType((*Solo_Heroes_Data_Config)(nil), "ConfigData.Solo_Heroes_Data_Config")
	proto.RegisterType((*UI_Heroes_Config)(nil), "ConfigData.UI_Heroes_Config")
	proto.RegisterType((*Heroes_Type_Config)(nil), "ConfigData.Heroes_Type_Config")
	proto.RegisterType((*Heroes_Config_Data)(nil), "ConfigData.Heroes_Config_Data")
	proto.RegisterMapType((map[uint32]*Appearance_Config)(nil), "ConfigData.Heroes_Config_Data.AppearanceConfigItemsEntry")
	proto.RegisterMapType((map[uint32]*Heroes_Config)(nil), "ConfigData.Heroes_Config_Data.HeroesConfigItemsEntry")
	proto.RegisterMapType((map[uint32]*Heroes_Data_Config)(nil), "ConfigData.Heroes_Config_Data.HeroesDataConfigItemsEntry")
	proto.RegisterMapType((map[uint32]*Heroes_Rank_Config)(nil), "ConfigData.Heroes_Config_Data.HeroesRankConfigItemsEntry")
	proto.RegisterMapType((map[uint32]*Heroes_Skill_Config)(nil), "ConfigData.Heroes_Config_Data.HeroesSkillConfigItemsEntry")
	proto.RegisterMapType((map[uint32]*Heroes_Type_Config)(nil), "ConfigData.Heroes_Config_Data.HeroesTypeConfigItemsEntry")
	proto.RegisterMapType((map[uint32]*Heros_Words_Config)(nil), "ConfigData.Heroes_Config_Data.HerosWordsConfigItemsEntry")
	proto.RegisterMapType((map[uint32]*Solo_Hero_Config)(nil), "ConfigData.Heroes_Config_Data.SoloHeroConfigItemsEntry")
	proto.RegisterMapType((map[uint32]*Solo_Heroes_Data_Config)(nil), "ConfigData.Heroes_Config_Data.SoloHeroesDataConfigItemsEntry")
	proto.RegisterMapType((map[uint32]*UI_Heroes_Config)(nil), "ConfigData.Heroes_Config_Data.UIHeroesConfigItemsEntry")
}

func init() { proto.RegisterFile("Heroes_Config.proto", fileDescriptor_f456ca96fe808bc1) }

var fileDescriptor_f456ca96fe808bc1 = []byte{
	// 2587 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x59, 0xcd, 0x72, 0x1b, 0xb9,
	0x11, 0x2e, 0x91, 0xa2, 0x44, 0x82, 0x22, 0x45, 0x8d, 0x76, 0xe5, 0xb1, 0xb4, 0x5a, 0xcb, 0xd4,
	0x7a, 0x57, 0xd9, 0x38, 0x4a, 0xd5, 0x3a, 0x5b, 0xc9, 0x6e, 0x55, 0x0e, 0x5a, 0x6b, 0x6d, 0xa9,
	0xca, 0x4a, 0xb9, 0x46, 0xde, 0xca, 0x11, 0x05, 0xcd, 0x80, 0x24, 0x4c, 0xcc, 0x60, 0x3c, 0x03,
	0xea, 0xe7, 0x94, 0x63, 0x9e, 0x20, 0x79, 0x85, 0x1c, 0x73, 0xcf, 0x21, 0xef, 0x91, 0x37, 0xc9,
	0x2d, 0xa9, 0xee, 0xc6, 0x90, 0x43, 0x91, 0xb4, 0x24, 0xdf, 0x06, 0x5f, 0x37, 0xfa, 0x03, 0xd0,
	0xe8, 0x1f, 0x90, 0x6c, 0xf3, 0x44, 0x66, 0x46, 0xe6, 0xfc, 0xa5, 0x49, 0x7a, 0xaa, 0x7f, 0x98,
	0x66, 0xc6, 0x1a, 0x8f, 0xd1, 0xe8, 0x58, 0x58, 0xd1, 0xfd, 0x7b, 0x95, 0x6d, 0x1c, 0xa5, 0xa9,
	0x14, 0x99, 0x48, 0x42, 0xe9, 0xf4, 0xbc, 0x36, 0xab, 0xa8, 0xc8, 0x5f, 0xda, 0x5b, 0x3a, 0x68,
	0x05, 0x15, 0x15, 0x79, 0x4f, 0x58, 0xb3, 0x67, 0x74, 0x24, 0x33, 0x9e, 0x88, 0x58, 0xfa, 0x95,
	0xbd, 0xa5, 0x83, 0x46, 0xc0, 0x08, 0xfa, 0x93, 0x88, 0xa5, 0xe7, 0xb1, 0xe5, 0x58, 0xe6, 0x03,
	0xbf, 0x8a, 0x12, 0xfc, 0xf6, 0x7c, 0xb6, 0x6a, 0xe5, 0xb5, 0x1d, 0x65, 0xd2, 0x5f, 0x46, 0xb8,
	0x18, 0x7a, 0x8f, 0xd8, 0xaa, 0x48, 0x54, 0xcc, 0x55, 0xe4, 0xd7, 0x90, 0x63, 0x05, 0x86, 0xa7,
	0x91, 0xb7, 0xc3, 0x1a, 0x17, 0x62, 0x28, 0x39, 0xda, 0x5a, 0xd9, 0x5b, 0x3a, 0xa8, 0x07, 0x75,
	0x00, 0xce, 0xc0, 0xde, 0x0e, 0x6b, 0xe4, 0xa1, 0xd0, 0x92, 0xc7, 0x22, 0xf5, 0x57, 0xf7, 0x96,
	0x0e, 0x2a, 0x41, 0x1d, 0x81, 0x33, 0x91, 0x7a, 0xfb, 0xac, 0x45, 0x42, 0x6d, 0x44, 0xa4, 0x92,
	0xbe, 0x5f, 0x47, 0x85, 0x35, 0x04, 0xdf, 0x10, 0x06, 0x16, 0x84, 0x1d, 0xf2, 0xdc, 0x8c, 0x92,
	0xc8, 0x6f, 0xe0, 0x9a, 0xea, 0xc2, 0x0e, 0xcf, 0x61, 0x0c, 0x7b, 0xcc, 0x44, 0xd2, 0x97, 0x4e,
	0xcc, 0x68, 0x8f, 0x08, 0x91, 0xc2, 0xd7, 0x6c, 0x9d, 0x14, 0x06, 0xca, 0x3a, 0xa5, 0x26, 0x2a,
	0xb5, 0x10, 0x3e, 0x51, 0x96, 0xf4, 0x9e, 0xb2, 0xb5, 0x70, 0x20, 0xb2, 0xb1, 0xa5, 0x35, 0x54,
	0x6a, 0x12, 0x36, 0x56, 0x89, 0xa4, 0xb0, 0x03, 0x2e, 0x7b, 0x3d, 0x19, 0x5a, 0xbf, 0x45, 0x2a,
	0x88, 0xfd, 0x8c, 0x50, 0xf7, 0xaf, 0x6b, 0xac, 0x35, 0xe5, 0xbc, 0x19, 0xa7, 0x78, 0x6c, 0x39,
	0x92, 0x79, 0xe8, 0xbc, 0x81, 0xdf, 0xb0, 0x89, 0x48, 0x5e, 0x8c, 0xfa, 0x5c, 0xcb, 0x4b, 0xa9,
	0xd1, 0x1d, 0xad, 0x80, 0x21, 0xf4, 0x06, 0x90, 0x89, 0x42, 0x4f, 0x1b, 0x93, 0xa1, 0x63, 0x0a,
	0x85, 0x57, 0x80, 0x78, 0x2f, 0xd8, 0x16, 0x29, 0xa4, 0xe2, 0x2a, 0xe1, 0xa1, 0x19, 0x25, 0xd6,
	0x19, 0x23, 0x57, 0x6d, 0xa2, 0xf4, 0xad, 0xb8, 0x4a, 0x5e, 0x82, 0x8c, 0xac, 0xee, 0x32, 0x32,
	0xc1, 0x33, 0x91, 0x0c, 0xd1, 0x71, 0xad, 0xa0, 0x81, 0x48, 0x20, 0x92, 0x21, 0x6d, 0x17, 0xc4,
	0x56, 0x68, 0x99, 0x58, 0x7f, 0x75, 0xaf, 0x7a, 0xd0, 0x0a, 0x68, 0x21, 0xef, 0x10, 0xf2, 0x0e,
	0x58, 0x67, 0x20, 0x33, 0x83, 0xf7, 0x8b, 0xf7, 0xb5, 0xb9, 0x10, 0x1a, 0x5d, 0xd8, 0x08, 0xda,
	0x80, 0xc3, 0x25, 0x7b, 0x8d, 0xa8, 0xf7, 0x8c, 0xb5, 0x55, 0x68, 0x12, 0xde, 0x33, 0x59, 0x2c,
	0xac, 0x32, 0x89, 0xf3, 0x64, 0x0b, 0xd0, 0x57, 0x05, 0x08, 0xbe, 0x26, 0x35, 0x2d, 0xfa, 0xce,
	0x99, 0x75, 0xd4, 0xd0, 0xa2, 0xef, 0x3d, 0x67, 0x9e, 0x95, 0x22, 0xe6, 0x17, 0x22, 0x49, 0x64,
	0xc6, 0x07, 0x52, 0xf5, 0x07, 0x16, 0xbd, 0x59, 0x0b, 0x3a, 0x20, 0xf9, 0x09, 0x05, 0x27, 0x88,
	0x7b, 0xdb, 0xac, 0x1e, 0x6a, 0x91, 0xe7, 0xaa, 0x77, 0x83, 0xce, 0x6c, 0x05, 0xe3, 0x31, 0xd0,
	0xe0, 0xba, 0xed, 0x4d, 0x2a, 0xd1, 0x8d, 0xad, 0xa0, 0x0e, 0xc0, 0xbb, 0x9b, 0x54, 0x42, 0x04,
	0x7c, 0x18, 0x09, 0xad, 0xec, 0x8d, 0xdf, 0x46, 0x51, 0x31, 0x84, 0xeb, 0x9a, 0x66, 0xe6, 0xbd,
	0x0c, 0xad, 0xd2, 0x12, 0xe2, 0x60, 0x1d, 0xe5, 0x6b, 0x13, 0xf0, 0x34, 0x02, 0x25, 0x58, 0x8b,
	0x36, 0xaa, 0xaf, 0x42, 0x50, 0xea, 0x90, 0xd2, 0x04, 0x3c, 0x8d, 0xbc, 0x2d, 0xb6, 0x92, 0x0f,
	0x95, 0xd6, 0xb9, 0xbf, 0x81, 0xa7, 0xea, 0x46, 0x18, 0x91, 0x22, 0xcf, 0x7d, 0x0f, 0xe3, 0x00,
	0xbf, 0x91, 0x75, 0x70, 0x93, 0xab, 0x90, 0x67, 0x22, 0x52, 0xa3, 0xdc, 0xdf, 0xdc, 0xab, 0x42,
	0x90, 0x10, 0x18, 0x20, 0xe6, 0x7d, 0xc6, 0x6a, 0x18, 0x34, 0xfe, 0x67, 0x38, 0x93, 0x06, 0xe0,
	0xc2, 0x7c, 0x20, 0x22, 0x73, 0xc5, 0x49, 0xf8, 0x39, 0xce, 0x6c, 0x12, 0x76, 0x8e, 0x2a, 0x4f,
	0x58, 0x33, 0x14, 0x09, 0x0f, 0x45, 0x8a, 0x31, 0xbf, 0x85, 0xe1, 0xcb, 0x42, 0x91, 0xbc, 0x24,
	0x64, 0xec, 0x63, 0x0c, 0x0b, 0x9e, 0x0f, 0x4c, 0x66, 0xfd, 0x47, 0x13, 0x1f, 0x63, 0x68, 0x9c,
	0x03, 0x0a, 0xa7, 0x1a, 0x4b, 0x2d, 0x25, 0x8f, 0xd2, 0xdc, 0xf7, 0x29, 0xd4, 0x11, 0x38, 0x4e,
	0x73, 0xe0, 0x21, 0x61, 0x9e, 0x4a, 0x19, 0xf9, 0x8f, 0x51, 0xcc, 0x10, 0x3a, 0x07, 0x04, 0xd6,
	0x4a, 0x0a, 0x6e, 0x97, 0xdb, 0xa8, 0x41, 0x93, 0xdc, 0x26, 0x0f, 0x58, 0x87, 0x54, 0x20, 0x96,
	0x5d, 0x10, 0xee, 0xec, 0x55, 0x61, 0x29, 0x88, 0x9f, 0x28, 0x4b, 0x71, 0x08, 0x4b, 0xa1, 0xa8,
	0x87, 0xa5, 0x7c, 0x41, 0x4b, 0x41, 0xc0, 0x2d, 0xc5, 0xe5, 0x0c, 0x5c, 0xca, 0x2e, 0x2d, 0x85,
	0x72, 0x46, 0xb1, 0x14, 0x52, 0x70, 0x4b, 0xf9, 0x92, 0x96, 0x82, 0xd8, 0x64, 0x29, 0x93, 0xb4,
	0xe2, 0x96, 0xf2, 0x84, 0x96, 0x52, 0xe4, 0x15, 0xb7, 0x94, 0x5d, 0xc6, 0x5c, 0x62, 0x89, 0xe2,
	0xbe, 0xbf, 0x87, 0xa6, 0x1a, 0x84, 0x1c, 0xc7, 0x78, 0xa9, 0x9d, 0x18, 0x93, 0xab, 0x33, 0xf5,
	0x14, 0x0f, 0xb8, 0x43, 0x92, 0xa3, 0x44, 0xc5, 0xce, 0xd8, 0x0b, 0xb6, 0x35, 0xab, 0x0d, 0x6b,
	0xf0, 0xbb, 0x38, 0x63, 0xf3, 0xf6, 0x8c, 0x13, 0x65, 0x21, 0xf6, 0x7a, 0x26, 0x1c, 0xe5, 0x5c,
	0x68, 0xab, 0xec, 0x28, 0x92, 0xfe, 0x3e, 0xae, 0xa2, 0x85, 0xe8, 0x91, 0x03, 0x71, 0xa1, 0x99,
	0xe2, 0x91, 0x88, 0x45, 0x5f, 0xfa, 0x5f, 0xb9, 0x85, 0x66, 0xea, 0x18, 0x01, 0xac, 0x26, 0x23,
	0xad, 0x8b, 0x6c, 0xf0, 0x8c, 0x2e, 0x0a, 0x40, 0x2e, 0x19, 0x40, 0x06, 0x15, 0x36, 0x1c, 0xf0,
	0x4c, 0x5e, 0x89, 0x2c, 0xf2, 0xbf, 0xc6, 0x7b, 0xdf, 0x44, 0x2c, 0x40, 0x08, 0x56, 0x82, 0x77,
	0x29, 0x92, 0x97, 0x8a, 0xb2, 0xc0, 0x37, 0x94, 0x05, 0x00, 0x3d, 0x2e, 0x40, 0xb0, 0x84, 0x6a,
	0x69, 0x66, 0x7a, 0x4a, 0x4b, 0xff, 0x80, 0x12, 0x2d, 0x60, 0x6f, 0x09, 0xc2, 0xab, 0x20, 0xae,
	0xb9, 0x08, 0x61, 0x02, 0x4f, 0x8d, 0x4a, 0xac, 0xff, 0x2b, 0x24, 0x6c, 0xc7, 0xe2, 0xfa, 0x08,
	0xe1, 0xb7, 0x80, 0x42, 0xa8, 0xc5, 0x26, 0x83, 0xdb, 0xff, 0x2d, 0x55, 0x2d, 0x1a, 0xc1, 0x76,
	0xe9, 0x8b, 0x0b, 0x3b, 0xf4, 0x7f, 0x4d, 0xd9, 0x8f, 0x90, 0x23, 0x3b, 0x2c, 0x89, 0x23, 0xd9,
	0xf3, 0x9f, 0x97, 0xc5, 0xc7, 0xb2, 0x47, 0x19, 0x59, 0x44, 0xdc, 0x99, 0xfe, 0x4d, 0x91, 0x91,
	0x45, 0x74, 0x86, 0x48, 0xf7, 0xdf, 0x4b, 0xcc, 0x83, 0x4a, 0x90, 0xf3, 0x3f, 0x9b, 0x2c, 0x5a,
	0x58, 0x0e, 0x9e, 0x33, 0xef, 0x42, 0x58, 0xab, 0x25, 0xcf, 0xad, 0xc8, 0x2c, 0xbf, 0x02, 0x65,
	0xbf, 0x82, 0x37, 0xa9, 0x43, 0x92, 0x73, 0x10, 0xa0, 0x91, 0x52, 0x91, 0x22, 0xbd, 0x2a, 0xea,
	0xb9, 0x22, 0x45, 0x2a, 0x07, 0xac, 0x13, 0x8a, 0xdc, 0xc2, 0xdd, 0xd6, 0xda, 0xa9, 0x2d, 0xd3,
	0xc5, 0x04, 0xfc, 0x1c, 0x60, 0xd2, 0xdc, 0x65, 0x4c, 0x83, 0x26, 0xe9, 0xd4, 0x50, 0xa7, 0x01,
	0x08, 0x8a, 0xbb, 0xff, 0xaa, 0xd1, 0x06, 0x64, 0xce, 0xa1, 0xe7, 0x58, 0xb4, 0x81, 0x47, 0x6c,
	0x15, 0x7d, 0xa5, 0x22, 0x2c, 0x69, 0xad, 0x60, 0x05, 0x86, 0xa7, 0x11, 0x64, 0x24, 0xaa, 0x56,
	0x55, 0x4c, 0xd0, 0x34, 0x40, 0xf5, 0x94, 0x5f, 0x88, 0x9c, 0xda, 0x8b, 0x4a, 0xb0, 0x32, 0x48,
	0x7f, 0x12, 0xb9, 0xc4, 0x94, 0x9c, 0xf2, 0x7e, 0x66, 0xae, 0xec, 0x00, 0x8b, 0x56, 0x25, 0xa8,
	0x0f, 0xd2, 0xd7, 0x38, 0x86, 0xd3, 0x16, 0xd6, 0x8a, 0x70, 0x48, 0x33, 0x57, 0x28, 0x62, 0x09,
	0xc2, 0xd9, 0xfb, 0xac, 0xe5, 0x14, 0x9c, 0x05, 0xea, 0x34, 0xd6, 0x08, 0x74, 0x56, 0x20, 0x66,
	0xa5, 0xd0, 0xbc, 0x6c, 0x8a, 0x1a, 0x8e, 0x36, 0xe0, 0x47, 0x13, 0x73, 0xcf, 0x99, 0x57, 0xd6,
	0x74, 0x36, 0x1b, 0xa8, 0xdb, 0x99, 0xe8, 0x3a, 0xbb, 0x58, 0x28, 0x7b, 0x12, 0x3a, 0x31, 0xb4,
	0xc9, 0x28, 0x5d, 0x38, 0x0c, 0x0d, 0x3e, 0x63, 0xed, 0x42, 0xc5, 0x19, 0x6b, 0x52, 0x08, 0x3a,
	0xd4, 0x59, 0x82, 0x8a, 0x6c, 0xa2, 0xbe, 0xb3, 0xb3, 0x46, 0x21, 0x88, 0x08, 0x5a, 0x01, 0x22,
	0x14, 0x3b, 0x1b, 0x2d, 0x47, 0x04, 0x98, 0xb3, 0xb0, 0xcf, 0x5a, 0x61, 0xa6, 0xac, 0x0a, 0x85,
	0x26, 0x23, 0x6d, 0x3a, 0x88, 0x02, 0x44, 0x3b, 0xdf, 0xb0, 0xf5, 0xb1, 0x92, 0x33, 0xb5, 0x4e,
	0xe7, 0x50, 0xc0, 0xce, 0xda, 0xb7, 0x6c, 0x23, 0x34, 0xc9, 0x87, 0x91, 0xcc, 0xb8, 0x55, 0xb1,
	0x5b, 0x56, 0x07, 0x55, 0xd7, 0x9d, 0xe0, 0x9d, 0x8a, 0x69, 0x71, 0x87, 0x6c, 0x73, 0x4a, 0xd7,
	0x19, 0xde, 0x40, 0xed, 0x8d, 0x92, 0xb6, 0xb3, 0x0d, 0xd5, 0x42, 0x5c, 0xbb, 0x2e, 0xc5, 0xc3,
	0x3b, 0x52, 0x8f, 0xc5, 0x35, 0xb5, 0x26, 0x4f, 0xd9, 0xda, 0x28, 0xe5, 0xb1, 0xb0, 0x32, 0x53,
	0x42, 0x53, 0xc9, 0x6b, 0x05, 0xcd, 0x51, 0x7a, 0x56, 0x40, 0x30, 0x3f, 0xd5, 0xe2, 0x46, 0x66,
	0x5c, 0x5f, 0x62, 0xd5, 0xab, 0x05, 0x75, 0x02, 0xde, 0x5c, 0x76, 0xff, 0x56, 0x19, 0x37, 0xd1,
	0xe7, 0x50, 0x59, 0x1f, 0x7c, 0x7b, 0x77, 0x19, 0xc3, 0x92, 0xcc, 0x73, 0x6d, 0xac, 0xeb, 0xc8,
	0x1a, 0x88, 0x9c, 0x6b, 0x63, 0xcb, 0x3d, 0xc2, 0xf2, 0x74, 0x8f, 0xb0, 0xcb, 0x58, 0x22, 0x65,
	0x34, 0xd5, 0x7d, 0x35, 0x00, 0xa1, 0x8d, 0xed, 0x30, 0x1c, 0x4c, 0x5a, 0xae, 0x5a, 0x50, 0x07,
	0x00, 0x3b, 0xae, 0x27, 0xac, 0x49, 0xa4, 0x56, 0x5c, 0x68, 0xe9, 0x1a, 0x2e, 0x5a, 0xc7, 0x3b,
	0x40, 0xbc, 0x2f, 0xe0, 0xcc, 0x8a, 0x33, 0xa9, 0xa3, 0x78, 0x02, 0xcc, 0x1c, 0x5a, 0x63, 0xe6,
	0xd0, 0xba, 0xff, 0xab, 0x8c, 0x83, 0x1a, 0x18, 0x1f, 0x7c, 0x2c, 0x1e, 0x5b, 0xc6, 0x95, 0xd3,
	0x81, 0xe0, 0xb7, 0xd7, 0x61, 0x55, 0x79, 0x9d, 0xba, 0x73, 0x80, 0x4f, 0xd8, 0x07, 0x6e, 0x9f,
	0x6b, 0x15, 0x2b, 0xeb, 0x0e, 0x81, 0x21, 0xf4, 0x06, 0x10, 0xe0, 0x1b, 0xa4, 0x2e, 0x8c, 0x2b,
	0x83, 0x14, 0x72, 0x34, 0x85, 0x9a, 0x8b, 0x5b, 0x37, 0xc2, 0x4a, 0x3d, 0x89, 0x43, 0x17, 0xac,
	0x6c, 0x12, 0x80, 0xe0, 0x07, 0x17, 0x41, 0x2e, 0x3a, 0x8b, 0x21, 0xa4, 0x1f, 0x8c, 0x0b, 0x17,
	0x8d, 0x34, 0xc0, 0xa6, 0xd0, 0x5d, 0x71, 0x17, 0x81, 0xe3, 0xb1, 0xf7, 0x95, 0x2b, 0x4e, 0x02,
	0x1f, 0x56, 0xb0, 0x77, 0x6a, 0x1b, 0xb1, 0x16, 0xd1, 0x6b, 0xcb, 0x5d, 0x0c, 0xa3, 0x15, 0xbc,
	0xaa, 0x54, 0xe4, 0x7a, 0xc7, 0x86, 0x43, 0x4e, 0xf1, 0x3d, 0x42, 0x99, 0x17, 0x7b, 0x70, 0xd7,
	0x40, 0x32, 0x84, 0xb0, 0xf3, 0xee, 0xfe, 0x67, 0x99, 0x75, 0xce, 0x8d, 0x36, 0x1c, 0xdc, 0xb0,
	0xe8, 0xfc, 0xf7, 0x59, 0xeb, 0xbd, 0xb9, 0xc9, 0xad, 0x0a, 0x87, 0x3c, 0x36, 0x91, 0x74, 0x5e,
	0x58, 0x2b, 0xc0, 0x33, 0x13, 0x61, 0xc6, 0x4c, 0xcd, 0x95, 0xcc, 0x78, 0x2c, 0xae, 0x9d, 0x43,
	0xea, 0x08, 0x9c, 0x89, 0x6b, 0x6c, 0x1a, 0x51, 0x98, 0xc9, 0xd0, 0x5c, 0xca, 0x0c, 0x6b, 0x00,
	0x34, 0x8d, 0x00, 0x06, 0x84, 0x81, 0x85, 0xd0, 0xc4, 0x17, 0x06, 0x2b, 0x60, 0x0d, 0x15, 0xea,
	0x08, 0xb8, 0x02, 0x88, 0xfd, 0x11, 0xcf, 0x84, 0x2d, 0x52, 0x6e, 0x03, 0x91, 0x40, 0x58, 0x59,
	0xbc, 0xca, 0xb0, 0xd9, 0x29, 0xde, 0x75, 0xc2, 0x0e, 0x03, 0x18, 0x83, 0x30, 0x8a, 0xfb, 0x4e,
	0x58, 0x27, 0xc3, 0x51, 0xdc, 0x9f, 0x12, 0x8a, 0xa4, 0xaf, 0x25, 0xde, 0x51, 0x12, 0x1e, 0xc1,
	0x18, 0x32, 0x4e, 0x0e, 0xa7, 0x93, 0x0f, 0xe0, 0x45, 0xe9, 0xba, 0x21, 0x86, 0xb5, 0x69, 0x1d,
	0x04, 0xe7, 0x80, 0xbb, 0x66, 0xe8, 0x90, 0x6d, 0xa2, 0xae, 0xcd, 0x54, 0xbf, 0x2f, 0xb3, 0x42,
	0xbb, 0x89, 0xda, 0x68, 0xe6, 0x1d, 0x49, 0x9c, 0xfe, 0x1e, 0x5b, 0x43, 0x7d, 0x68, 0xd9, 0x7a,
	0x1a, 0x5e, 0x05, 0xa0, 0x08, 0xee, 0x34, 0x27, 0xca, 0xbe, 0xd2, 0x37, 0x50, 0x21, 0x4a, 0xec,
	0xf4, 0x10, 0x6c, 0x51, 0xf1, 0x1c, 0x93, 0xd3, 0x5b, 0xf0, 0x39, 0xf3, 0xa6, 0xb8, 0x49, 0xb7,
	0x4d, 0x6d, 0x5b, 0x89, 0x9a, 0xb4, 0x9f, 0xb1, 0x76, 0x68, 0x8c, 0x8e, 0xcc, 0x55, 0xc2, 0x23,
	0xa9, 0xc5, 0x8d, 0xbf, 0x8e, 0xfb, 0x6e, 0x15, 0xe8, 0x31, 0x80, 0x70, 0x32, 0xf2, 0x52, 0x44,
	0x92, 0x47, 0x2a, 0x77, 0x69, 0xb6, 0x8e, 0xc0, 0xb1, 0xa2, 0xda, 0x2f, 0x62, 0x99, 0x09, 0x5a,
	0x1d, 0x3e, 0x1c, 0xa0, 0xf6, 0x23, 0x86, 0x2b, 0xeb, 0xfe, 0xb7, 0xca, 0x1e, 0x8d, 0xef, 0xd6,
	0x1d, 0x75, 0xfb, 0xd6, 0x9b, 0xb3, 0x32, 0xf3, 0xe6, 0x2c, 0x55, 0xea, 0xea, 0xe2, 0x4a, 0xbd,
	0xfc, 0xf1, 0x4a, 0x5d, 0xbb, 0xbb, 0x52, 0xaf, 0xdc, 0xb3, 0x52, 0xaf, 0x3e, 0xa0, 0x52, 0xd7,
	0xef, 0x59, 0xa9, 0x1b, 0xf7, 0xa9, 0xd4, 0xec, 0xee, 0x4a, 0xdd, 0xbc, 0xab, 0x52, 0xaf, 0xdd,
	0xa3, 0x52, 0xb7, 0xee, 0x57, 0xa9, 0xdb, 0xf3, 0x2a, 0x75, 0xf7, 0x1f, 0x55, 0xd6, 0xf9, 0xe5,
	0x94, 0x7f, 0xfc, 0xb7, 0x87, 0xe2, 0x29, 0x27, 0x53, 0x15, 0x16, 0xcf, 0xf5, 0xca, 0xe4, 0x29,
	0xf7, 0x73, 0xaa, 0x42, 0xf7, 0x5c, 0xf7, 0xd8, 0x32, 0xbc, 0x85, 0x8b, 0x5f, 0x86, 0xf0, 0x5d,
	0xec, 0xb1, 0xe5, 0x81, 0x8a, 0xa8, 0x6f, 0xab, 0x07, 0xf8, 0x3d, 0x79, 0x76, 0xd6, 0xca, 0xcf,
	0xce, 0x0e, 0xab, 0x66, 0xc6, 0xa2, 0x67, 0x1b, 0x01, 0x7c, 0x42, 0xde, 0x4d, 0x4d, 0xae, 0xb0,
	0xe5, 0x5f, 0xa5, 0x67, 0x7d, 0x31, 0x06, 0x1b, 0xf2, 0xc3, 0x48, 0xa5, 0xee, 0x97, 0x03, 0x1a,
	0xc0, 0xf5, 0x0b, 0x45, 0x16, 0x41, 0x92, 0x6d, 0x50, 0x09, 0x82, 0xa1, 0xcb, 0xb0, 0xa3, 0x38,
	0x36, 0x09, 0x0f, 0x4d, 0x6e, 0xd1, 0x3b, 0x90, 0x61, 0x11, 0x7a, 0x69, 0x72, 0x7c, 0x87, 0xe0,
	0x9d, 0x1e, 0xa5, 0xbc, 0x6f, 0x34, 0xfd, 0xdc, 0xd3, 0x0a, 0x9a, 0x0e, 0x7b, 0x6d, 0x34, 0x26,
	0xf1, 0xc9, 0x9b, 0xd6, 0xfd, 0xd4, 0xd3, 0x18, 0xbf, 0x66, 0x21, 0x09, 0xd1, 0x2b, 0x07, 0x29,
	0x78, 0x86, 0x19, 0x90, 0xdc, 0xb3, 0x4e, 0x02, 0x20, 0x0a, 0x00, 0x06, 0x53, 0x28, 0x47, 0xf7,
	0x38, 0xe7, 0x34, 0x10, 0x01, 0xcf, 0xc0, 0x51, 0xe4, 0xbd, 0x6b, 0x6c, 0xaf, 0x1a, 0x01, 0x7c,
	0x76, 0x87, 0xe3, 0x0a, 0x0c, 0xa7, 0xba, 0xc8, 0x55, 0x3b, 0xac, 0x81, 0x05, 0xe2, 0x34, 0x34,
	0x89, 0xf3, 0x51, 0x1d, 0x00, 0x18, 0x83, 0x1f, 0xc9, 0x7b, 0x3c, 0xb7, 0x99, 0x4a, 0xfa, 0x70,
	0x48, 0xe4, 0xa9, 0x36, 0xe1, 0xe7, 0x08, 0x9f, 0x46, 0xdd, 0x7f, 0x6e, 0x8c, 0xd9, 0x88, 0x08,
	0x73, 0x82, 0xf7, 0x81, 0x3d, 0x9a, 0xf9, 0xf9, 0x90, 0x2b, 0x2b, 0xe3, 0xdc, 0x5f, 0xda, 0xab,
	0x1e, 0x34, 0xbf, 0xfb, 0xe1, 0x70, 0xf2, 0x6b, 0xe3, 0xe1, 0xac, 0x81, 0xc3, 0xc9, 0x6c, 0x42,
	0x4f, 0x61, 0xee, 0xcf, 0x89, 0xcd, 0x6e, 0x82, 0xcf, 0xe7, 0xca, 0x3c, 0x79, 0xeb, 0x57, 0x4d,
	0x47, 0x57, 0x41, 0xba, 0xef, 0xef, 0xa0, 0x23, 0x68, 0x86, 0x6a, 0x63, 0x06, 0xf7, 0x32, 0xe6,
	0xcf, 0xbe, 0xba, 0x1c, 0x57, 0xf5, 0x5e, 0x5b, 0xc3, 0xe9, 0x38, 0x7b, 0x76, 0x6b, 0x73, 0x65,
	0x05, 0xe7, 0x74, 0xc2, 0x75, 0x9c, 0xcb, 0xf7, 0xe6, 0x94, 0x39, 0x7c, 0xce, 0xe7, 0x9c, 0x91,
	0x79, 0x23, 0xf6, 0x78, 0x4e, 0x7f, 0xeb, 0x48, 0x6b, 0x48, 0xfa, 0xe3, 0xbd, 0x48, 0x71, 0xfa,
	0x0c, 0xeb, 0xd6, 0x7c, 0x61, 0x69, 0xab, 0xa5, 0xf6, 0xd1, 0xb1, 0xae, 0x3c, 0x60, 0xab, 0x30,
	0x7b, 0xd1, 0x56, 0x6f, 0xc9, 0x3c, 0xcd, 0xb6, 0x6e, 0x37, 0x4c, 0x8e, 0x71, 0x15, 0x19, 0x7f,
	0x7f, 0x07, 0x23, 0x4c, 0x06, 0x78, 0x86, 0x6f, 0x73, 0x8e, 0xc4, 0xfb, 0x0b, 0xdb, 0x5d, 0x50,
	0x42, 0x1d, 0x69, 0x1d, 0x49, 0xff, 0x78, 0x4f, 0xd2, 0x05, 0x5e, 0x7d, 0xbc, 0x50, 0x0e, 0xdb,
	0xbd, 0x9d, 0xc8, 0x1d, 0x73, 0xe3, 0x5e, 0xdb, 0xfd, 0xe5, 0x74, 0x41, 0xb4, 0x6c, 0xce, 0x91,
	0x94, 0x1c, 0x5a, 0xca, 0x46, 0x8e, 0x8f, 0x3d, 0xc0, 0xa1, 0x30, 0x7b, 0x91, 0x43, 0x6f, 0xc9,
	0xb6, 0xfb, 0x6c, 0x7b, 0x71, 0xfe, 0x80, 0x8c, 0x39, 0x94, 0x37, 0x2e, 0x15, 0xc2, 0xa7, 0xf7,
	0x82, 0xd5, 0x2e, 0x85, 0x1e, 0x51, 0x17, 0xdc, 0xfc, 0x6e, 0xb7, 0xbc, 0xa0, 0x99, 0x34, 0x16,
	0x90, 0xee, 0x8f, 0x95, 0x3f, 0x2c, 0x6d, 0x73, 0xb6, 0x35, 0xff, 0x2c, 0xe6, 0x90, 0xfc, 0x76,
	0x9a, 0xe4, 0xf1, 0xc2, 0x5d, 0x97, 0x09, 0x06, 0x6c, 0x7b, 0x71, 0xba, 0x98, 0x43, 0xf2, 0xbb,
	0x69, 0x92, 0x2f, 0x6f, 0x93, 0x4c, 0xa7, 0xad, 0x39, 0x4c, 0xf3, 0xaf, 0xd3, 0x27, 0x30, 0x4d,
	0x5f, 0xed, 0x32, 0xd3, 0x7b, 0xb6, 0xf3, 0x91, 0xcc, 0x30, 0x87, 0xea, 0xfb, 0x69, 0xaa, 0x27,
	0x73, 0xa8, 0xca, 0x39, 0x6a, 0xee, 0xae, 0xe6, 0xe5, 0x83, 0x4f, 0xdb, 0x55, 0x29, 0x2f, 0x95,
	0x99, 0x22, 0xe6, 0x2f, 0xca, 0x03, 0x73, 0x78, 0xbe, 0x9b, 0xe6, 0xf9, 0xa2, 0xcc, 0x73, 0x3b,
	0x17, 0x95, 0x59, 0x3e, 0xb0, 0x2f, 0x3f, 0x1e, 0xf8, 0x73, 0xb8, 0x7e, 0x98, 0xe6, 0xda, 0x9f,
	0xcb, 0xb5, 0xd8, 0x5d, 0x11, 0xf3, 0x17, 0x45, 0xfc, 0x03, 0x37, 0x76, 0x3b, 0xeb, 0xcc, 0x75,
	0xd4, 0xbc, 0x38, 0xff, 0x34, 0x47, 0x95, 0xf2, 0x4d, 0x89, 0xe9, 0xa7, 0x7d, 0xf6, 0x34, 0x34,
	0xf1, 0x21, 0x34, 0x30, 0xca, 0xaa, 0xbe, 0x88, 0x65, 0x7e, 0x98, 0xcb, 0xec, 0x52, 0x66, 0x87,
	0xa1, 0x49, 0x7a, 0x87, 0x62, 0x64, 0xcd, 0xc5, 0x0a, 0xfe, 0x25, 0xfa, 0xe2, 0xff, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x8f, 0xdf, 0xfd, 0x22, 0x29, 0x1d, 0x00, 0x00,
}
