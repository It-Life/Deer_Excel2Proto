// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Spell_Config.proto

#ifndef PROTOBUF_INCLUDED_Spell_5fConfig_2eproto
#define PROTOBUF_INCLUDED_Spell_5fConfig_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_Spell_5fConfig_2eproto 

namespace protobuf_Spell_5fConfig_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[13];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_Spell_5fConfig_2eproto
namespace ConfigData {
class ActiveSpell_Config;
class ActiveSpell_ConfigDefaultTypeInternal;
extern ActiveSpell_ConfigDefaultTypeInternal _ActiveSpell_Config_default_instance_;
class CreateBullet_Config;
class CreateBullet_ConfigDefaultTypeInternal;
extern CreateBullet_ConfigDefaultTypeInternal _CreateBullet_Config_default_instance_;
class DataChangeFunc_Config;
class DataChangeFunc_ConfigDefaultTypeInternal;
extern DataChangeFunc_ConfigDefaultTypeInternal _DataChangeFunc_Config_default_instance_;
class PassiveSpell_Config;
class PassiveSpell_ConfigDefaultTypeInternal;
extern PassiveSpell_ConfigDefaultTypeInternal _PassiveSpell_Config_default_instance_;
class SkillData_Config;
class SkillData_ConfigDefaultTypeInternal;
extern SkillData_ConfigDefaultTypeInternal _SkillData_Config_default_instance_;
class Skill_Level_Config;
class Skill_Level_ConfigDefaultTypeInternal;
extern Skill_Level_ConfigDefaultTypeInternal _Skill_Level_Config_default_instance_;
class Spell_Config_Data;
class Spell_Config_DataDefaultTypeInternal;
extern Spell_Config_DataDefaultTypeInternal _Spell_Config_Data_default_instance_;
class Spell_Config_Data_ActiveSpellConfigItemsEntry_DoNotUse;
class Spell_Config_Data_ActiveSpellConfigItemsEntry_DoNotUseDefaultTypeInternal;
extern Spell_Config_Data_ActiveSpellConfigItemsEntry_DoNotUseDefaultTypeInternal _Spell_Config_Data_ActiveSpellConfigItemsEntry_DoNotUse_default_instance_;
class Spell_Config_Data_CreateBulletConfigItemsEntry_DoNotUse;
class Spell_Config_Data_CreateBulletConfigItemsEntry_DoNotUseDefaultTypeInternal;
extern Spell_Config_Data_CreateBulletConfigItemsEntry_DoNotUseDefaultTypeInternal _Spell_Config_Data_CreateBulletConfigItemsEntry_DoNotUse_default_instance_;
class Spell_Config_Data_DataChangeFuncConfigItemsEntry_DoNotUse;
class Spell_Config_Data_DataChangeFuncConfigItemsEntry_DoNotUseDefaultTypeInternal;
extern Spell_Config_Data_DataChangeFuncConfigItemsEntry_DoNotUseDefaultTypeInternal _Spell_Config_Data_DataChangeFuncConfigItemsEntry_DoNotUse_default_instance_;
class Spell_Config_Data_PassiveSpellConfigItemsEntry_DoNotUse;
class Spell_Config_Data_PassiveSpellConfigItemsEntry_DoNotUseDefaultTypeInternal;
extern Spell_Config_Data_PassiveSpellConfigItemsEntry_DoNotUseDefaultTypeInternal _Spell_Config_Data_PassiveSpellConfigItemsEntry_DoNotUse_default_instance_;
class Spell_Config_Data_SkillDataConfigItemsEntry_DoNotUse;
class Spell_Config_Data_SkillDataConfigItemsEntry_DoNotUseDefaultTypeInternal;
extern Spell_Config_Data_SkillDataConfigItemsEntry_DoNotUseDefaultTypeInternal _Spell_Config_Data_SkillDataConfigItemsEntry_DoNotUse_default_instance_;
class Spell_Config_Data_SkillLevelConfigItemsEntry_DoNotUse;
class Spell_Config_Data_SkillLevelConfigItemsEntry_DoNotUseDefaultTypeInternal;
extern Spell_Config_Data_SkillLevelConfigItemsEntry_DoNotUseDefaultTypeInternal _Spell_Config_Data_SkillLevelConfigItemsEntry_DoNotUse_default_instance_;
}  // namespace ConfigData
namespace google {
namespace protobuf {
template<> ::ConfigData::ActiveSpell_Config* Arena::CreateMaybeMessage<::ConfigData::ActiveSpell_Config>(Arena*);
template<> ::ConfigData::CreateBullet_Config* Arena::CreateMaybeMessage<::ConfigData::CreateBullet_Config>(Arena*);
template<> ::ConfigData::DataChangeFunc_Config* Arena::CreateMaybeMessage<::ConfigData::DataChangeFunc_Config>(Arena*);
template<> ::ConfigData::PassiveSpell_Config* Arena::CreateMaybeMessage<::ConfigData::PassiveSpell_Config>(Arena*);
template<> ::ConfigData::SkillData_Config* Arena::CreateMaybeMessage<::ConfigData::SkillData_Config>(Arena*);
template<> ::ConfigData::Skill_Level_Config* Arena::CreateMaybeMessage<::ConfigData::Skill_Level_Config>(Arena*);
template<> ::ConfigData::Spell_Config_Data* Arena::CreateMaybeMessage<::ConfigData::Spell_Config_Data>(Arena*);
template<> ::ConfigData::Spell_Config_Data_ActiveSpellConfigItemsEntry_DoNotUse* Arena::CreateMaybeMessage<::ConfigData::Spell_Config_Data_ActiveSpellConfigItemsEntry_DoNotUse>(Arena*);
template<> ::ConfigData::Spell_Config_Data_CreateBulletConfigItemsEntry_DoNotUse* Arena::CreateMaybeMessage<::ConfigData::Spell_Config_Data_CreateBulletConfigItemsEntry_DoNotUse>(Arena*);
template<> ::ConfigData::Spell_Config_Data_DataChangeFuncConfigItemsEntry_DoNotUse* Arena::CreateMaybeMessage<::ConfigData::Spell_Config_Data_DataChangeFuncConfigItemsEntry_DoNotUse>(Arena*);
template<> ::ConfigData::Spell_Config_Data_PassiveSpellConfigItemsEntry_DoNotUse* Arena::CreateMaybeMessage<::ConfigData::Spell_Config_Data_PassiveSpellConfigItemsEntry_DoNotUse>(Arena*);
template<> ::ConfigData::Spell_Config_Data_SkillDataConfigItemsEntry_DoNotUse* Arena::CreateMaybeMessage<::ConfigData::Spell_Config_Data_SkillDataConfigItemsEntry_DoNotUse>(Arena*);
template<> ::ConfigData::Spell_Config_Data_SkillLevelConfigItemsEntry_DoNotUse* Arena::CreateMaybeMessage<::ConfigData::Spell_Config_Data_SkillLevelConfigItemsEntry_DoNotUse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace ConfigData {

// ===================================================================

class ActiveSpell_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ConfigData.ActiveSpell_Config) */ {
 public:
  ActiveSpell_Config();
  virtual ~ActiveSpell_Config();

  ActiveSpell_Config(const ActiveSpell_Config& from);

  inline ActiveSpell_Config& operator=(const ActiveSpell_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActiveSpell_Config(ActiveSpell_Config&& from) noexcept
    : ActiveSpell_Config() {
    *this = ::std::move(from);
  }

  inline ActiveSpell_Config& operator=(ActiveSpell_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ActiveSpell_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ActiveSpell_Config* internal_default_instance() {
    return reinterpret_cast<const ActiveSpell_Config*>(
               &_ActiveSpell_Config_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ActiveSpell_Config* other);
  friend void swap(ActiveSpell_Config& a, ActiveSpell_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActiveSpell_Config* New() const final {
    return CreateMaybeMessage<ActiveSpell_Config>(NULL);
  }

  ActiveSpell_Config* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ActiveSpell_Config>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ActiveSpell_Config& from);
  void MergeFrom(const ActiveSpell_Config& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActiveSpell_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string trigger_func_id = 7;
  int trigger_func_id_size() const;
  void clear_trigger_func_id();
  static const int kTriggerFuncIdFieldNumber = 7;
  const ::std::string& trigger_func_id(int index) const;
  ::std::string* mutable_trigger_func_id(int index);
  void set_trigger_func_id(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_trigger_func_id(int index, ::std::string&& value);
  #endif
  void set_trigger_func_id(int index, const char* value);
  void set_trigger_func_id(int index, const char* value, size_t size);
  ::std::string* add_trigger_func_id();
  void add_trigger_func_id(const ::std::string& value);
  #if LANG_CXX11
  void add_trigger_func_id(::std::string&& value);
  #endif
  void add_trigger_func_id(const char* value);
  void add_trigger_func_id(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& trigger_func_id() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_trigger_func_id();

  // repeated string trigger_on_me_func_id = 8;
  int trigger_on_me_func_id_size() const;
  void clear_trigger_on_me_func_id();
  static const int kTriggerOnMeFuncIdFieldNumber = 8;
  const ::std::string& trigger_on_me_func_id(int index) const;
  ::std::string* mutable_trigger_on_me_func_id(int index);
  void set_trigger_on_me_func_id(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_trigger_on_me_func_id(int index, ::std::string&& value);
  #endif
  void set_trigger_on_me_func_id(int index, const char* value);
  void set_trigger_on_me_func_id(int index, const char* value, size_t size);
  ::std::string* add_trigger_on_me_func_id();
  void add_trigger_on_me_func_id(const ::std::string& value);
  #if LANG_CXX11
  void add_trigger_on_me_func_id(::std::string&& value);
  #endif
  void add_trigger_on_me_func_id(const char* value);
  void add_trigger_on_me_func_id(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& trigger_on_me_func_id() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_trigger_on_me_func_id();

  // repeated string team_buff_effect = 11;
  int team_buff_effect_size() const;
  void clear_team_buff_effect();
  static const int kTeamBuffEffectFieldNumber = 11;
  const ::std::string& team_buff_effect(int index) const;
  ::std::string* mutable_team_buff_effect(int index);
  void set_team_buff_effect(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_team_buff_effect(int index, ::std::string&& value);
  #endif
  void set_team_buff_effect(int index, const char* value);
  void set_team_buff_effect(int index, const char* value, size_t size);
  ::std::string* add_team_buff_effect();
  void add_team_buff_effect(const ::std::string& value);
  #if LANG_CXX11
  void add_team_buff_effect(::std::string&& value);
  #endif
  void add_team_buff_effect(const char* value);
  void add_team_buff_effect(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& team_buff_effect() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_team_buff_effect();

  // repeated float infection = 12;
  int infection_size() const;
  void clear_infection();
  static const int kInfectionFieldNumber = 12;
  float infection(int index) const;
  void set_infection(int index, float value);
  void add_infection(float value);
  const ::google::protobuf::RepeatedField< float >&
      infection() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_infection();

  // repeated string spell_anim_can_move = 33;
  int spell_anim_can_move_size() const;
  void clear_spell_anim_can_move();
  static const int kSpellAnimCanMoveFieldNumber = 33;
  const ::std::string& spell_anim_can_move(int index) const;
  ::std::string* mutable_spell_anim_can_move(int index);
  void set_spell_anim_can_move(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_spell_anim_can_move(int index, ::std::string&& value);
  #endif
  void set_spell_anim_can_move(int index, const char* value);
  void set_spell_anim_can_move(int index, const char* value, size_t size);
  ::std::string* add_spell_anim_can_move();
  void add_spell_anim_can_move(const ::std::string& value);
  #if LANG_CXX11
  void add_spell_anim_can_move(::std::string&& value);
  #endif
  void add_spell_anim_can_move(const char* value);
  void add_spell_anim_can_move(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& spell_anim_can_move() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_spell_anim_can_move();

  // string pre_condition_type = 4;
  void clear_pre_condition_type();
  static const int kPreConditionTypeFieldNumber = 4;
  const ::std::string& pre_condition_type() const;
  void set_pre_condition_type(const ::std::string& value);
  #if LANG_CXX11
  void set_pre_condition_type(::std::string&& value);
  #endif
  void set_pre_condition_type(const char* value);
  void set_pre_condition_type(const char* value, size_t size);
  ::std::string* mutable_pre_condition_type();
  ::std::string* release_pre_condition_type();
  void set_allocated_pre_condition_type(::std::string* pre_condition_type);

  // string pre_condition_data = 5;
  void clear_pre_condition_data();
  static const int kPreConditionDataFieldNumber = 5;
  const ::std::string& pre_condition_data() const;
  void set_pre_condition_data(const ::std::string& value);
  #if LANG_CXX11
  void set_pre_condition_data(::std::string&& value);
  #endif
  void set_pre_condition_data(const char* value);
  void set_pre_condition_data(const char* value, size_t size);
  ::std::string* mutable_pre_condition_data();
  ::std::string* release_pre_condition_data();
  void set_allocated_pre_condition_data(::std::string* pre_condition_data);

  // string trigger_anim_effect = 6;
  void clear_trigger_anim_effect();
  static const int kTriggerAnimEffectFieldNumber = 6;
  const ::std::string& trigger_anim_effect() const;
  void set_trigger_anim_effect(const ::std::string& value);
  #if LANG_CXX11
  void set_trigger_anim_effect(::std::string&& value);
  #endif
  void set_trigger_anim_effect(const char* value);
  void set_trigger_anim_effect(const char* value, size_t size);
  ::std::string* mutable_trigger_anim_effect();
  ::std::string* release_trigger_anim_effect();
  void set_allocated_trigger_anim_effect(::std::string* trigger_anim_effect);

  // string range_eff = 9;
  void clear_range_eff();
  static const int kRangeEffFieldNumber = 9;
  const ::std::string& range_eff() const;
  void set_range_eff(const ::std::string& value);
  #if LANG_CXX11
  void set_range_eff(::std::string&& value);
  #endif
  void set_range_eff(const char* value);
  void set_range_eff(const char* value, size_t size);
  ::std::string* mutable_range_eff();
  ::std::string* release_range_eff();
  void set_allocated_range_eff(::std::string* range_eff);

  // string bullet_id = 13;
  void clear_bullet_id();
  static const int kBulletIdFieldNumber = 13;
  const ::std::string& bullet_id() const;
  void set_bullet_id(const ::std::string& value);
  #if LANG_CXX11
  void set_bullet_id(::std::string&& value);
  #endif
  void set_bullet_id(const char* value);
  void set_bullet_id(const char* value, size_t size);
  ::std::string* mutable_bullet_id();
  ::std::string* release_bullet_id();
  void set_allocated_bullet_id(::std::string* bullet_id);

  // string bullet_launch_delay = 14;
  void clear_bullet_launch_delay();
  static const int kBulletLaunchDelayFieldNumber = 14;
  const ::std::string& bullet_launch_delay() const;
  void set_bullet_launch_delay(const ::std::string& value);
  #if LANG_CXX11
  void set_bullet_launch_delay(::std::string&& value);
  #endif
  void set_bullet_launch_delay(const char* value);
  void set_bullet_launch_delay(const char* value, size_t size);
  ::std::string* mutable_bullet_launch_delay();
  ::std::string* release_bullet_launch_delay();
  void set_allocated_bullet_launch_delay(::std::string* bullet_launch_delay);

  // string bullet_effect = 15;
  void clear_bullet_effect();
  static const int kBulletEffectFieldNumber = 15;
  const ::std::string& bullet_effect() const;
  void set_bullet_effect(const ::std::string& value);
  #if LANG_CXX11
  void set_bullet_effect(::std::string&& value);
  #endif
  void set_bullet_effect(const char* value);
  void set_bullet_effect(const char* value, size_t size);
  ::std::string* mutable_bullet_effect();
  ::std::string* release_bullet_effect();
  void set_allocated_bullet_effect(::std::string* bullet_effect);

  // string bullet_hit = 16;
  void clear_bullet_hit();
  static const int kBulletHitFieldNumber = 16;
  const ::std::string& bullet_hit() const;
  void set_bullet_hit(const ::std::string& value);
  #if LANG_CXX11
  void set_bullet_hit(::std::string&& value);
  #endif
  void set_bullet_hit(const char* value);
  void set_bullet_hit(const char* value, size_t size);
  ::std::string* mutable_bullet_hit();
  ::std::string* release_bullet_hit();
  void set_allocated_bullet_hit(::std::string* bullet_hit);

  // string trigger_delay = 17;
  void clear_trigger_delay();
  static const int kTriggerDelayFieldNumber = 17;
  const ::std::string& trigger_delay() const;
  void set_trigger_delay(const ::std::string& value);
  #if LANG_CXX11
  void set_trigger_delay(::std::string&& value);
  #endif
  void set_trigger_delay(const char* value);
  void set_trigger_delay(const char* value, size_t size);
  ::std::string* mutable_trigger_delay();
  ::std::string* release_trigger_delay();
  void set_allocated_trigger_delay(::std::string* trigger_delay);

  // string chain_effect = 19;
  void clear_chain_effect();
  static const int kChainEffectFieldNumber = 19;
  const ::std::string& chain_effect() const;
  void set_chain_effect(const ::std::string& value);
  #if LANG_CXX11
  void set_chain_effect(::std::string&& value);
  #endif
  void set_chain_effect(const char* value);
  void set_chain_effect(const char* value, size_t size);
  ::std::string* mutable_chain_effect();
  ::std::string* release_chain_effect();
  void set_allocated_chain_effect(::std::string* chain_effect);

  // string chain_effect_hit = 20;
  void clear_chain_effect_hit();
  static const int kChainEffectHitFieldNumber = 20;
  const ::std::string& chain_effect_hit() const;
  void set_chain_effect_hit(const ::std::string& value);
  #if LANG_CXX11
  void set_chain_effect_hit(::std::string&& value);
  #endif
  void set_chain_effect_hit(const char* value);
  void set_chain_effect_hit(const char* value, size_t size);
  ::std::string* mutable_chain_effect_hit();
  ::std::string* release_chain_effect_hit();
  void set_allocated_chain_effect_hit(::std::string* chain_effect_hit);

  // string sfx = 22;
  void clear_sfx();
  static const int kSfxFieldNumber = 22;
  const ::std::string& sfx() const;
  void set_sfx(const ::std::string& value);
  #if LANG_CXX11
  void set_sfx(::std::string&& value);
  #endif
  void set_sfx(const char* value);
  void set_sfx(const char* value, size_t size);
  ::std::string* mutable_sfx();
  ::std::string* release_sfx();
  void set_allocated_sfx(::std::string* sfx);

  // string bullet_target = 26;
  void clear_bullet_target();
  static const int kBulletTargetFieldNumber = 26;
  const ::std::string& bullet_target() const;
  void set_bullet_target(const ::std::string& value);
  #if LANG_CXX11
  void set_bullet_target(::std::string&& value);
  #endif
  void set_bullet_target(const char* value);
  void set_bullet_target(const char* value, size_t size);
  ::std::string* mutable_bullet_target();
  ::std::string* release_bullet_target();
  void set_allocated_bullet_target(::std::string* bullet_target);

  // string data_target = 27;
  void clear_data_target();
  static const int kDataTargetFieldNumber = 27;
  const ::std::string& data_target() const;
  void set_data_target(const ::std::string& value);
  #if LANG_CXX11
  void set_data_target(::std::string&& value);
  #endif
  void set_data_target(const char* value);
  void set_data_target(const char* value, size_t size);
  ::std::string* mutable_data_target();
  ::std::string* release_data_target();
  void set_allocated_data_target(::std::string* data_target);

  // string data_param_speed = 30;
  void clear_data_param_speed();
  static const int kDataParamSpeedFieldNumber = 30;
  const ::std::string& data_param_speed() const;
  void set_data_param_speed(const ::std::string& value);
  #if LANG_CXX11
  void set_data_param_speed(::std::string&& value);
  #endif
  void set_data_param_speed(const char* value);
  void set_data_param_speed(const char* value, size_t size);
  ::std::string* mutable_data_param_speed();
  ::std::string* release_data_param_speed();
  void set_allocated_data_param_speed(::std::string* data_param_speed);

  // string range_eff_post = 34;
  void clear_range_eff_post();
  static const int kRangeEffPostFieldNumber = 34;
  const ::std::string& range_eff_post() const;
  void set_range_eff_post(const ::std::string& value);
  #if LANG_CXX11
  void set_range_eff_post(::std::string&& value);
  #endif
  void set_range_eff_post(const char* value);
  void set_range_eff_post(const char* value, size_t size);
  ::std::string* mutable_range_eff_post();
  ::std::string* release_range_eff_post();
  void set_allocated_range_eff_post(::std::string* range_eff_post);

  // string spell_sound = 35;
  void clear_spell_sound();
  static const int kSpellSoundFieldNumber = 35;
  const ::std::string& spell_sound() const;
  void set_spell_sound(const ::std::string& value);
  #if LANG_CXX11
  void set_spell_sound(::std::string&& value);
  #endif
  void set_spell_sound(const char* value);
  void set_spell_sound(const char* value, size_t size);
  ::std::string* mutable_spell_sound();
  ::std::string* release_spell_sound();
  void set_allocated_spell_sound(::std::string* spell_sound);

  // string spell_trigger_sound = 36;
  void clear_spell_trigger_sound();
  static const int kSpellTriggerSoundFieldNumber = 36;
  const ::std::string& spell_trigger_sound() const;
  void set_spell_trigger_sound(const ::std::string& value);
  #if LANG_CXX11
  void set_spell_trigger_sound(::std::string&& value);
  #endif
  void set_spell_trigger_sound(const char* value);
  void set_spell_trigger_sound(const char* value, size_t size);
  ::std::string* mutable_spell_trigger_sound();
  ::std::string* release_spell_trigger_sound();
  void set_allocated_spell_trigger_sound(::std::string* spell_trigger_sound);

  // string sfx_sound = 37;
  void clear_sfx_sound();
  static const int kSfxSoundFieldNumber = 37;
  const ::std::string& sfx_sound() const;
  void set_sfx_sound(const ::std::string& value);
  #if LANG_CXX11
  void set_sfx_sound(::std::string&& value);
  #endif
  void set_sfx_sound(const char* value);
  void set_sfx_sound(const char* value, size_t size);
  ::std::string* mutable_sfx_sound();
  ::std::string* release_sfx_sound();
  void set_allocated_sfx_sound(::std::string* sfx_sound);

  // string pre_condition_dataex = 38;
  void clear_pre_condition_dataex();
  static const int kPreConditionDataexFieldNumber = 38;
  const ::std::string& pre_condition_dataex() const;
  void set_pre_condition_dataex(const ::std::string& value);
  #if LANG_CXX11
  void set_pre_condition_dataex(::std::string&& value);
  #endif
  void set_pre_condition_dataex(const char* value);
  void set_pre_condition_dataex(const char* value, size_t size);
  ::std::string* mutable_pre_condition_dataex();
  ::std::string* release_pre_condition_dataex();
  void set_allocated_pre_condition_dataex(::std::string* pre_condition_dataex);

  // string pre_anim = 39;
  void clear_pre_anim();
  static const int kPreAnimFieldNumber = 39;
  const ::std::string& pre_anim() const;
  void set_pre_anim(const ::std::string& value);
  #if LANG_CXX11
  void set_pre_anim(::std::string&& value);
  #endif
  void set_pre_anim(const char* value);
  void set_pre_anim(const char* value, size_t size);
  ::std::string* mutable_pre_anim();
  ::std::string* release_pre_anim();
  void set_allocated_pre_anim(::std::string* pre_anim);

  // string pre_anim_effect = 40;
  void clear_pre_anim_effect();
  static const int kPreAnimEffectFieldNumber = 40;
  const ::std::string& pre_anim_effect() const;
  void set_pre_anim_effect(const ::std::string& value);
  #if LANG_CXX11
  void set_pre_anim_effect(::std::string&& value);
  #endif
  void set_pre_anim_effect(const char* value);
  void set_pre_anim_effect(const char* value, size_t size);
  ::std::string* mutable_pre_anim_effect();
  ::std::string* release_pre_anim_effect();
  void set_allocated_pre_anim_effect(::std::string* pre_anim_effect);

  // string post_anim = 41;
  void clear_post_anim();
  static const int kPostAnimFieldNumber = 41;
  const ::std::string& post_anim() const;
  void set_post_anim(const ::std::string& value);
  #if LANG_CXX11
  void set_post_anim(::std::string&& value);
  #endif
  void set_post_anim(const char* value);
  void set_post_anim(const char* value, size_t size);
  ::std::string* mutable_post_anim();
  ::std::string* release_post_anim();
  void set_allocated_post_anim(::std::string* post_anim);

  // string post_anim_effect = 42;
  void clear_post_anim_effect();
  static const int kPostAnimEffectFieldNumber = 42;
  const ::std::string& post_anim_effect() const;
  void set_post_anim_effect(const ::std::string& value);
  #if LANG_CXX11
  void set_post_anim_effect(::std::string&& value);
  #endif
  void set_post_anim_effect(const char* value);
  void set_post_anim_effect(const char* value, size_t size);
  ::std::string* mutable_post_anim_effect();
  ::std::string* release_post_anim_effect();
  void set_allocated_post_anim_effect(::std::string* post_anim_effect);

  // string targetmax_growth = 45;
  void clear_targetmax_growth();
  static const int kTargetmaxGrowthFieldNumber = 45;
  const ::std::string& targetmax_growth() const;
  void set_targetmax_growth(const ::std::string& value);
  #if LANG_CXX11
  void set_targetmax_growth(::std::string&& value);
  #endif
  void set_targetmax_growth(const char* value);
  void set_targetmax_growth(const char* value, size_t size);
  ::std::string* mutable_targetmax_growth();
  ::std::string* release_targetmax_growth();
  void set_allocated_targetmax_growth(::std::string* targetmax_growth);

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // int32 cd = 2;
  void clear_cd();
  static const int kCdFieldNumber = 2;
  ::google::protobuf::int32 cd() const;
  void set_cd(::google::protobuf::int32 value);

  // int32 cost = 3;
  void clear_cost();
  static const int kCostFieldNumber = 3;
  ::google::protobuf::int32 cost() const;
  void set_cost(::google::protobuf::int32 value);

  // float range_eff_time = 10;
  void clear_range_eff_time();
  static const int kRangeEffTimeFieldNumber = 10;
  float range_eff_time() const;
  void set_range_eff_time(float value);

  // float damage_num_delay = 18;
  void clear_damage_num_delay();
  static const int kDamageNumDelayFieldNumber = 18;
  float damage_num_delay() const;
  void set_damage_num_delay(float value);

  // float chain_speed = 21;
  void clear_chain_speed();
  static const int kChainSpeedFieldNumber = 21;
  float chain_speed() const;
  void set_chain_speed(float value);

  // float sfx_time = 23;
  void clear_sfx_time();
  static const int kSfxTimeFieldNumber = 23;
  float sfx_time() const;
  void set_sfx_time(float value);

  // uint32 cam_bullet = 24;
  void clear_cam_bullet();
  static const int kCamBulletFieldNumber = 24;
  ::google::protobuf::uint32 cam_bullet() const;
  void set_cam_bullet(::google::protobuf::uint32 value);

  // uint32 cam_bullet_hit = 25;
  void clear_cam_bullet_hit();
  static const int kCamBulletHitFieldNumber = 25;
  ::google::protobuf::uint32 cam_bullet_hit() const;
  void set_cam_bullet_hit(::google::protobuf::uint32 value);

  // uint32 cam_feature = 28;
  void clear_cam_feature();
  static const int kCamFeatureFieldNumber = 28;
  ::google::protobuf::uint32 cam_feature() const;
  void set_cam_feature(::google::protobuf::uint32 value);

  // uint32 cam_trigger = 29;
  void clear_cam_trigger();
  static const int kCamTriggerFieldNumber = 29;
  ::google::protobuf::uint32 cam_trigger() const;
  void set_cam_trigger(::google::protobuf::uint32 value);

  // float trigger_life_time = 31;
  void clear_trigger_life_time();
  static const int kTriggerLifeTimeFieldNumber = 31;
  float trigger_life_time() const;
  void set_trigger_life_time(float value);

  // float trigger_delta_time = 32;
  void clear_trigger_delta_time();
  static const int kTriggerDeltaTimeFieldNumber = 32;
  float trigger_delta_time() const;
  void set_trigger_delta_time(float value);

  // float public_cd = 43;
  void clear_public_cd();
  static const int kPublicCdFieldNumber = 43;
  float public_cd() const;
  void set_public_cd(float value);

  // float range_eff_post_time = 44;
  void clear_range_eff_post_time();
  static const int kRangeEffPostTimeFieldNumber = 44;
  float range_eff_post_time() const;
  void set_range_eff_post_time(float value);

  // @@protoc_insertion_point(class_scope:ConfigData.ActiveSpell_Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> trigger_func_id_;
  ::google::protobuf::RepeatedPtrField< ::std::string> trigger_on_me_func_id_;
  ::google::protobuf::RepeatedPtrField< ::std::string> team_buff_effect_;
  ::google::protobuf::RepeatedField< float > infection_;
  mutable int _infection_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> spell_anim_can_move_;
  ::google::protobuf::internal::ArenaStringPtr pre_condition_type_;
  ::google::protobuf::internal::ArenaStringPtr pre_condition_data_;
  ::google::protobuf::internal::ArenaStringPtr trigger_anim_effect_;
  ::google::protobuf::internal::ArenaStringPtr range_eff_;
  ::google::protobuf::internal::ArenaStringPtr bullet_id_;
  ::google::protobuf::internal::ArenaStringPtr bullet_launch_delay_;
  ::google::protobuf::internal::ArenaStringPtr bullet_effect_;
  ::google::protobuf::internal::ArenaStringPtr bullet_hit_;
  ::google::protobuf::internal::ArenaStringPtr trigger_delay_;
  ::google::protobuf::internal::ArenaStringPtr chain_effect_;
  ::google::protobuf::internal::ArenaStringPtr chain_effect_hit_;
  ::google::protobuf::internal::ArenaStringPtr sfx_;
  ::google::protobuf::internal::ArenaStringPtr bullet_target_;
  ::google::protobuf::internal::ArenaStringPtr data_target_;
  ::google::protobuf::internal::ArenaStringPtr data_param_speed_;
  ::google::protobuf::internal::ArenaStringPtr range_eff_post_;
  ::google::protobuf::internal::ArenaStringPtr spell_sound_;
  ::google::protobuf::internal::ArenaStringPtr spell_trigger_sound_;
  ::google::protobuf::internal::ArenaStringPtr sfx_sound_;
  ::google::protobuf::internal::ArenaStringPtr pre_condition_dataex_;
  ::google::protobuf::internal::ArenaStringPtr pre_anim_;
  ::google::protobuf::internal::ArenaStringPtr pre_anim_effect_;
  ::google::protobuf::internal::ArenaStringPtr post_anim_;
  ::google::protobuf::internal::ArenaStringPtr post_anim_effect_;
  ::google::protobuf::internal::ArenaStringPtr targetmax_growth_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::int32 cd_;
  ::google::protobuf::int32 cost_;
  float range_eff_time_;
  float damage_num_delay_;
  float chain_speed_;
  float sfx_time_;
  ::google::protobuf::uint32 cam_bullet_;
  ::google::protobuf::uint32 cam_bullet_hit_;
  ::google::protobuf::uint32 cam_feature_;
  ::google::protobuf::uint32 cam_trigger_;
  float trigger_life_time_;
  float trigger_delta_time_;
  float public_cd_;
  float range_eff_post_time_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Spell_5fConfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SkillData_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ConfigData.SkillData_Config) */ {
 public:
  SkillData_Config();
  virtual ~SkillData_Config();

  SkillData_Config(const SkillData_Config& from);

  inline SkillData_Config& operator=(const SkillData_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SkillData_Config(SkillData_Config&& from) noexcept
    : SkillData_Config() {
    *this = ::std::move(from);
  }

  inline SkillData_Config& operator=(SkillData_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillData_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SkillData_Config* internal_default_instance() {
    return reinterpret_cast<const SkillData_Config*>(
               &_SkillData_Config_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(SkillData_Config* other);
  friend void swap(SkillData_Config& a, SkillData_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SkillData_Config* New() const final {
    return CreateMaybeMessage<SkillData_Config>(NULL);
  }

  SkillData_Config* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SkillData_Config>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SkillData_Config& from);
  void MergeFrom(const SkillData_Config& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SkillData_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name_global_id = 2;
  void clear_name_global_id();
  static const int kNameGlobalIdFieldNumber = 2;
  const ::std::string& name_global_id() const;
  void set_name_global_id(const ::std::string& value);
  #if LANG_CXX11
  void set_name_global_id(::std::string&& value);
  #endif
  void set_name_global_id(const char* value);
  void set_name_global_id(const char* value, size_t size);
  ::std::string* mutable_name_global_id();
  ::std::string* release_name_global_id();
  void set_allocated_name_global_id(::std::string* name_global_id);

  // string des_global_id = 3;
  void clear_des_global_id();
  static const int kDesGlobalIdFieldNumber = 3;
  const ::std::string& des_global_id() const;
  void set_des_global_id(const ::std::string& value);
  #if LANG_CXX11
  void set_des_global_id(::std::string&& value);
  #endif
  void set_des_global_id(const char* value);
  void set_des_global_id(const char* value, size_t size);
  ::std::string* mutable_des_global_id();
  ::std::string* release_des_global_id();
  void set_allocated_des_global_id(::std::string* des_global_id);

  // string icon = 4;
  void clear_icon();
  static const int kIconFieldNumber = 4;
  const ::std::string& icon() const;
  void set_icon(const ::std::string& value);
  #if LANG_CXX11
  void set_icon(::std::string&& value);
  #endif
  void set_icon(const char* value);
  void set_icon(const char* value, size_t size);
  ::std::string* mutable_icon();
  ::std::string* release_icon();
  void set_allocated_icon(::std::string* icon);

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // uint32 active_id = 5;
  void clear_active_id();
  static const int kActiveIdFieldNumber = 5;
  ::google::protobuf::uint32 active_id() const;
  void set_active_id(::google::protobuf::uint32 value);

  // uint32 passive_id = 6;
  void clear_passive_id();
  static const int kPassiveIdFieldNumber = 6;
  ::google::protobuf::uint32 passive_id() const;
  void set_passive_id(::google::protobuf::uint32 value);

  // int32 level_max = 7;
  void clear_level_max();
  static const int kLevelMaxFieldNumber = 7;
  ::google::protobuf::int32 level_max() const;
  void set_level_max(::google::protobuf::int32 value);

  // float strength_rate1 = 8;
  void clear_strength_rate1();
  static const int kStrengthRate1FieldNumber = 8;
  float strength_rate1() const;
  void set_strength_rate1(float value);

  // float strength_rate2 = 9;
  void clear_strength_rate2();
  static const int kStrengthRate2FieldNumber = 9;
  float strength_rate2() const;
  void set_strength_rate2(float value);

  // float strength_rate3 = 10;
  void clear_strength_rate3();
  static const int kStrengthRate3FieldNumber = 10;
  float strength_rate3() const;
  void set_strength_rate3(float value);

  // int32 debug_level = 11;
  void clear_debug_level();
  static const int kDebugLevelFieldNumber = 11;
  ::google::protobuf::int32 debug_level() const;
  void set_debug_level(::google::protobuf::int32 value);

  // int32 active_level = 12;
  void clear_active_level();
  static const int kActiveLevelFieldNumber = 12;
  ::google::protobuf::int32 active_level() const;
  void set_active_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ConfigData.SkillData_Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_global_id_;
  ::google::protobuf::internal::ArenaStringPtr des_global_id_;
  ::google::protobuf::internal::ArenaStringPtr icon_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 active_id_;
  ::google::protobuf::uint32 passive_id_;
  ::google::protobuf::int32 level_max_;
  float strength_rate1_;
  float strength_rate2_;
  float strength_rate3_;
  ::google::protobuf::int32 debug_level_;
  ::google::protobuf::int32 active_level_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Spell_5fConfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DataChangeFunc_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ConfigData.DataChangeFunc_Config) */ {
 public:
  DataChangeFunc_Config();
  virtual ~DataChangeFunc_Config();

  DataChangeFunc_Config(const DataChangeFunc_Config& from);

  inline DataChangeFunc_Config& operator=(const DataChangeFunc_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataChangeFunc_Config(DataChangeFunc_Config&& from) noexcept
    : DataChangeFunc_Config() {
    *this = ::std::move(from);
  }

  inline DataChangeFunc_Config& operator=(DataChangeFunc_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataChangeFunc_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataChangeFunc_Config* internal_default_instance() {
    return reinterpret_cast<const DataChangeFunc_Config*>(
               &_DataChangeFunc_Config_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(DataChangeFunc_Config* other);
  friend void swap(DataChangeFunc_Config& a, DataChangeFunc_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataChangeFunc_Config* New() const final {
    return CreateMaybeMessage<DataChangeFunc_Config>(NULL);
  }

  DataChangeFunc_Config* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DataChangeFunc_Config>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DataChangeFunc_Config& from);
  void MergeFrom(const DataChangeFunc_Config& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataChangeFunc_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // string dataex = 7;
  void clear_dataex();
  static const int kDataexFieldNumber = 7;
  const ::std::string& dataex() const;
  void set_dataex(const ::std::string& value);
  #if LANG_CXX11
  void set_dataex(::std::string&& value);
  #endif
  void set_dataex(const char* value);
  void set_dataex(const char* value, size_t size);
  ::std::string* mutable_dataex();
  ::std::string* release_dataex();
  void set_allocated_dataex(::std::string* dataex);

  // string dataex2 = 8;
  void clear_dataex2();
  static const int kDataex2FieldNumber = 8;
  const ::std::string& dataex2() const;
  void set_dataex2(const ::std::string& value);
  #if LANG_CXX11
  void set_dataex2(::std::string&& value);
  #endif
  void set_dataex2(const char* value);
  void set_dataex2(const char* value, size_t size);
  ::std::string* mutable_dataex2();
  ::std::string* release_dataex2();
  void set_allocated_dataex2(::std::string* dataex2);

  // string data_start_eff = 9;
  void clear_data_start_eff();
  static const int kDataStartEffFieldNumber = 9;
  const ::std::string& data_start_eff() const;
  void set_data_start_eff(const ::std::string& value);
  #if LANG_CXX11
  void set_data_start_eff(::std::string&& value);
  #endif
  void set_data_start_eff(const char* value);
  void set_data_start_eff(const char* value, size_t size);
  ::std::string* mutable_data_start_eff();
  ::std::string* release_data_start_eff();
  void set_allocated_data_start_eff(::std::string* data_start_eff);

  // string data_eff = 10;
  void clear_data_eff();
  static const int kDataEffFieldNumber = 10;
  const ::std::string& data_eff() const;
  void set_data_eff(const ::std::string& value);
  #if LANG_CXX11
  void set_data_eff(::std::string&& value);
  #endif
  void set_data_eff(const char* value);
  void set_data_eff(const char* value, size_t size);
  ::std::string* mutable_data_eff();
  ::std::string* release_data_eff();
  void set_allocated_data_eff(::std::string* data_eff);

  // string data_end_eff = 11;
  void clear_data_end_eff();
  static const int kDataEndEffFieldNumber = 11;
  const ::std::string& data_end_eff() const;
  void set_data_end_eff(const ::std::string& value);
  #if LANG_CXX11
  void set_data_end_eff(::std::string&& value);
  #endif
  void set_data_end_eff(const char* value);
  void set_data_end_eff(const char* value, size_t size);
  ::std::string* mutable_data_end_eff();
  ::std::string* release_data_end_eff();
  void set_allocated_data_end_eff(::std::string* data_end_eff);

  // string data_hit_fly = 14;
  void clear_data_hit_fly();
  static const int kDataHitFlyFieldNumber = 14;
  const ::std::string& data_hit_fly() const;
  void set_data_hit_fly(const ::std::string& value);
  #if LANG_CXX11
  void set_data_hit_fly(::std::string&& value);
  #endif
  void set_data_hit_fly(const char* value);
  void set_data_hit_fly(const char* value, size_t size);
  ::std::string* mutable_data_hit_fly();
  ::std::string* release_data_hit_fly();
  void set_allocated_data_hit_fly(::std::string* data_hit_fly);

  // string icon = 16;
  void clear_icon();
  static const int kIconFieldNumber = 16;
  const ::std::string& icon() const;
  void set_icon(const ::std::string& value);
  #if LANG_CXX11
  void set_icon(::std::string&& value);
  #endif
  void set_icon(const char* value);
  void set_icon(const char* value, size_t size);
  ::std::string* mutable_icon();
  ::std::string* release_icon();
  void set_allocated_icon(::std::string* icon);

  // string icon_position = 18;
  void clear_icon_position();
  static const int kIconPositionFieldNumber = 18;
  const ::std::string& icon_position() const;
  void set_icon_position(const ::std::string& value);
  #if LANG_CXX11
  void set_icon_position(::std::string&& value);
  #endif
  void set_icon_position(const char* value);
  void set_icon_position(const char* value, size_t size);
  ::std::string* mutable_icon_position();
  ::std::string* release_icon_position();
  void set_allocated_icon_position(::std::string* icon_position);

  // string mark = 19;
  void clear_mark();
  static const int kMarkFieldNumber = 19;
  const ::std::string& mark() const;
  void set_mark(const ::std::string& value);
  #if LANG_CXX11
  void set_mark(::std::string&& value);
  #endif
  void set_mark(const char* value);
  void set_mark(const char* value, size_t size);
  ::std::string* mutable_mark();
  ::std::string* release_mark();
  void set_allocated_mark(::std::string* mark);

  // string growth_prop = 21;
  void clear_growth_prop();
  static const int kGrowthPropFieldNumber = 21;
  const ::std::string& growth_prop() const;
  void set_growth_prop(const ::std::string& value);
  #if LANG_CXX11
  void set_growth_prop(::std::string&& value);
  #endif
  void set_growth_prop(const char* value);
  void set_growth_prop(const char* value, size_t size);
  ::std::string* mutable_growth_prop();
  ::std::string* release_growth_prop();
  void set_allocated_growth_prop(::std::string* growth_prop);

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // float k1 = 3;
  void clear_k1();
  static const int kK1FieldNumber = 3;
  float k1() const;
  void set_k1(float value);

  // float k2 = 4;
  void clear_k2();
  static const int kK2FieldNumber = 4;
  float k2() const;
  void set_k2(float value);

  // float k3 = 5;
  void clear_k3();
  static const int kK3FieldNumber = 5;
  float k3() const;
  void set_k3(float value);

  // uint32 data_type = 6;
  void clear_data_type();
  static const int kDataTypeFieldNumber = 6;
  ::google::protobuf::uint32 data_type() const;
  void set_data_type(::google::protobuf::uint32 value);

  // float data_eff_prob = 12;
  void clear_data_eff_prob();
  static const int kDataEffProbFieldNumber = 12;
  float data_eff_prob() const;
  void set_data_eff_prob(float value);

  // float data_time = 13;
  void clear_data_time();
  static const int kDataTimeFieldNumber = 13;
  float data_time() const;
  void set_data_time(float value);

  // int32 buff_nature = 15;
  void clear_buff_nature();
  static const int kBuffNatureFieldNumber = 15;
  ::google::protobuf::int32 buff_nature() const;
  void set_buff_nature(::google::protobuf::int32 value);

  // int32 superposition = 17;
  void clear_superposition();
  static const int kSuperpositionFieldNumber = 17;
  ::google::protobuf::int32 superposition() const;
  void set_superposition(::google::protobuf::int32 value);

  // int32 mark_affected_rate = 20;
  void clear_mark_affected_rate();
  static const int kMarkAffectedRateFieldNumber = 20;
  ::google::protobuf::int32 mark_affected_rate() const;
  void set_mark_affected_rate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ConfigData.DataChangeFunc_Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr dataex_;
  ::google::protobuf::internal::ArenaStringPtr dataex2_;
  ::google::protobuf::internal::ArenaStringPtr data_start_eff_;
  ::google::protobuf::internal::ArenaStringPtr data_eff_;
  ::google::protobuf::internal::ArenaStringPtr data_end_eff_;
  ::google::protobuf::internal::ArenaStringPtr data_hit_fly_;
  ::google::protobuf::internal::ArenaStringPtr icon_;
  ::google::protobuf::internal::ArenaStringPtr icon_position_;
  ::google::protobuf::internal::ArenaStringPtr mark_;
  ::google::protobuf::internal::ArenaStringPtr growth_prop_;
  ::google::protobuf::uint32 id_;
  float k1_;
  float k2_;
  float k3_;
  ::google::protobuf::uint32 data_type_;
  float data_eff_prob_;
  float data_time_;
  ::google::protobuf::int32 buff_nature_;
  ::google::protobuf::int32 superposition_;
  ::google::protobuf::int32 mark_affected_rate_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Spell_5fConfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PassiveSpell_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ConfigData.PassiveSpell_Config) */ {
 public:
  PassiveSpell_Config();
  virtual ~PassiveSpell_Config();

  PassiveSpell_Config(const PassiveSpell_Config& from);

  inline PassiveSpell_Config& operator=(const PassiveSpell_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PassiveSpell_Config(PassiveSpell_Config&& from) noexcept
    : PassiveSpell_Config() {
    *this = ::std::move(from);
  }

  inline PassiveSpell_Config& operator=(PassiveSpell_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PassiveSpell_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PassiveSpell_Config* internal_default_instance() {
    return reinterpret_cast<const PassiveSpell_Config*>(
               &_PassiveSpell_Config_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(PassiveSpell_Config* other);
  friend void swap(PassiveSpell_Config& a, PassiveSpell_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PassiveSpell_Config* New() const final {
    return CreateMaybeMessage<PassiveSpell_Config>(NULL);
  }

  PassiveSpell_Config* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PassiveSpell_Config>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PassiveSpell_Config& from);
  void MergeFrom(const PassiveSpell_Config& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PassiveSpell_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string active_condition = 2;
  void clear_active_condition();
  static const int kActiveConditionFieldNumber = 2;
  const ::std::string& active_condition() const;
  void set_active_condition(const ::std::string& value);
  #if LANG_CXX11
  void set_active_condition(::std::string&& value);
  #endif
  void set_active_condition(const char* value);
  void set_active_condition(const char* value, size_t size);
  ::std::string* mutable_active_condition();
  ::std::string* release_active_condition();
  void set_allocated_active_condition(::std::string* active_condition);

  // string trigger_condition = 4;
  void clear_trigger_condition();
  static const int kTriggerConditionFieldNumber = 4;
  const ::std::string& trigger_condition() const;
  void set_trigger_condition(const ::std::string& value);
  #if LANG_CXX11
  void set_trigger_condition(::std::string&& value);
  #endif
  void set_trigger_condition(const char* value);
  void set_trigger_condition(const char* value, size_t size);
  ::std::string* mutable_trigger_condition();
  ::std::string* release_trigger_condition();
  void set_allocated_trigger_condition(::std::string* trigger_condition);

  // string trigger_condition_param = 5;
  void clear_trigger_condition_param();
  static const int kTriggerConditionParamFieldNumber = 5;
  const ::std::string& trigger_condition_param() const;
  void set_trigger_condition_param(const ::std::string& value);
  #if LANG_CXX11
  void set_trigger_condition_param(::std::string&& value);
  #endif
  void set_trigger_condition_param(const char* value);
  void set_trigger_condition_param(const char* value, size_t size);
  ::std::string* mutable_trigger_condition_param();
  ::std::string* release_trigger_condition_param();
  void set_allocated_trigger_condition_param(::std::string* trigger_condition_param);

  // string command_target = 8;
  void clear_command_target();
  static const int kCommandTargetFieldNumber = 8;
  const ::std::string& command_target() const;
  void set_command_target(const ::std::string& value);
  #if LANG_CXX11
  void set_command_target(::std::string&& value);
  #endif
  void set_command_target(const char* value);
  void set_command_target(const char* value, size_t size);
  ::std::string* mutable_command_target();
  ::std::string* release_command_target();
  void set_allocated_command_target(::std::string* command_target);

  // string command = 9;
  void clear_command();
  static const int kCommandFieldNumber = 9;
  const ::std::string& command() const;
  void set_command(const ::std::string& value);
  #if LANG_CXX11
  void set_command(::std::string&& value);
  #endif
  void set_command(const char* value);
  void set_command(const char* value, size_t size);
  ::std::string* mutable_command();
  ::std::string* release_command();
  void set_allocated_command(::std::string* command);

  // string effect = 15;
  void clear_effect();
  static const int kEffectFieldNumber = 15;
  const ::std::string& effect() const;
  void set_effect(const ::std::string& value);
  #if LANG_CXX11
  void set_effect(::std::string&& value);
  #endif
  void set_effect(const char* value);
  void set_effect(const char* value, size_t size);
  ::std::string* mutable_effect();
  ::std::string* release_effect();
  void set_allocated_effect(::std::string* effect);

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // float active_time = 3;
  void clear_active_time();
  static const int kActiveTimeFieldNumber = 3;
  float active_time() const;
  void set_active_time(float value);

  // float trigger_probability = 6;
  void clear_trigger_probability();
  static const int kTriggerProbabilityFieldNumber = 6;
  float trigger_probability() const;
  void set_trigger_probability(float value);

  // int32 trigger_cd = 7;
  void clear_trigger_cd();
  static const int kTriggerCdFieldNumber = 7;
  ::google::protobuf::int32 trigger_cd() const;
  void set_trigger_cd(::google::protobuf::int32 value);

  // uint32 data = 10;
  void clear_data();
  static const int kDataFieldNumber = 10;
  ::google::protobuf::uint32 data() const;
  void set_data(::google::protobuf::uint32 value);

  // int32 override_data_k1 = 11;
  void clear_override_data_k1();
  static const int kOverrideDataK1FieldNumber = 11;
  ::google::protobuf::int32 override_data_k1() const;
  void set_override_data_k1(::google::protobuf::int32 value);

  // int32 override_data_k2 = 12;
  void clear_override_data_k2();
  static const int kOverrideDataK2FieldNumber = 12;
  ::google::protobuf::int32 override_data_k2() const;
  void set_override_data_k2(::google::protobuf::int32 value);

  // int32 override_data_k3 = 13;
  void clear_override_data_k3();
  static const int kOverrideDataK3FieldNumber = 13;
  ::google::protobuf::int32 override_data_k3() const;
  void set_override_data_k3(::google::protobuf::int32 value);

  // int32 override_data_time = 14;
  void clear_override_data_time();
  static const int kOverrideDataTimeFieldNumber = 14;
  ::google::protobuf::int32 override_data_time() const;
  void set_override_data_time(::google::protobuf::int32 value);

  // int32 score = 16;
  void clear_score();
  static const int kScoreFieldNumber = 16;
  ::google::protobuf::int32 score() const;
  void set_score(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ConfigData.PassiveSpell_Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr active_condition_;
  ::google::protobuf::internal::ArenaStringPtr trigger_condition_;
  ::google::protobuf::internal::ArenaStringPtr trigger_condition_param_;
  ::google::protobuf::internal::ArenaStringPtr command_target_;
  ::google::protobuf::internal::ArenaStringPtr command_;
  ::google::protobuf::internal::ArenaStringPtr effect_;
  ::google::protobuf::uint32 id_;
  float active_time_;
  float trigger_probability_;
  ::google::protobuf::int32 trigger_cd_;
  ::google::protobuf::uint32 data_;
  ::google::protobuf::int32 override_data_k1_;
  ::google::protobuf::int32 override_data_k2_;
  ::google::protobuf::int32 override_data_k3_;
  ::google::protobuf::int32 override_data_time_;
  ::google::protobuf::int32 score_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Spell_5fConfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateBullet_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ConfigData.CreateBullet_Config) */ {
 public:
  CreateBullet_Config();
  virtual ~CreateBullet_Config();

  CreateBullet_Config(const CreateBullet_Config& from);

  inline CreateBullet_Config& operator=(const CreateBullet_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateBullet_Config(CreateBullet_Config&& from) noexcept
    : CreateBullet_Config() {
    *this = ::std::move(from);
  }

  inline CreateBullet_Config& operator=(CreateBullet_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateBullet_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateBullet_Config* internal_default_instance() {
    return reinterpret_cast<const CreateBullet_Config*>(
               &_CreateBullet_Config_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(CreateBullet_Config* other);
  friend void swap(CreateBullet_Config& a, CreateBullet_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateBullet_Config* New() const final {
    return CreateMaybeMessage<CreateBullet_Config>(NULL);
  }

  CreateBullet_Config* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateBullet_Config>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateBullet_Config& from);
  void MergeFrom(const CreateBullet_Config& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateBullet_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float parabola_src = 7;
  int parabola_src_size() const;
  void clear_parabola_src();
  static const int kParabolaSrcFieldNumber = 7;
  float parabola_src(int index) const;
  void set_parabola_src(int index, float value);
  void add_parabola_src(float value);
  const ::google::protobuf::RepeatedField< float >&
      parabola_src() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_parabola_src();

  // repeated float parabola_ctrl_1 = 8;
  int parabola_ctrl_1_size() const;
  void clear_parabola_ctrl_1();
  static const int kParabolaCtrl1FieldNumber = 8;
  float parabola_ctrl_1(int index) const;
  void set_parabola_ctrl_1(int index, float value);
  void add_parabola_ctrl_1(float value);
  const ::google::protobuf::RepeatedField< float >&
      parabola_ctrl_1() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_parabola_ctrl_1();

  // repeated float parabola_ctrl_2 = 9;
  int parabola_ctrl_2_size() const;
  void clear_parabola_ctrl_2();
  static const int kParabolaCtrl2FieldNumber = 9;
  float parabola_ctrl_2(int index) const;
  void set_parabola_ctrl_2(int index, float value);
  void add_parabola_ctrl_2(float value);
  const ::google::protobuf::RepeatedField< float >&
      parabola_ctrl_2() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_parabola_ctrl_2();

  // repeated float parabola_des = 10;
  int parabola_des_size() const;
  void clear_parabola_des();
  static const int kParabolaDesFieldNumber = 10;
  float parabola_des(int index) const;
  void set_parabola_des(int index, float value);
  void add_parabola_des(float value);
  const ::google::protobuf::RepeatedField< float >&
      parabola_des() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_parabola_des();

  // string point = 2;
  void clear_point();
  static const int kPointFieldNumber = 2;
  const ::std::string& point() const;
  void set_point(const ::std::string& value);
  #if LANG_CXX11
  void set_point(::std::string&& value);
  #endif
  void set_point(const char* value);
  void set_point(const char* value, size_t size);
  ::std::string* mutable_point();
  ::std::string* release_point();
  void set_allocated_point(::std::string* point);

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // float horizon_speed = 3;
  void clear_horizon_speed();
  static const int kHorizonSpeedFieldNumber = 3;
  float horizon_speed() const;
  void set_horizon_speed(float value);

  // float horizontal_range = 4;
  void clear_horizontal_range();
  static const int kHorizontalRangeFieldNumber = 4;
  float horizontal_range() const;
  void set_horizontal_range(float value);

  // float trace_missile = 5;
  void clear_trace_missile();
  static const int kTraceMissileFieldNumber = 5;
  float trace_missile() const;
  void set_trace_missile(float value);

  // float parabola_height = 6;
  void clear_parabola_height();
  static const int kParabolaHeightFieldNumber = 6;
  float parabola_height() const;
  void set_parabola_height(float value);

  // float height_offset_min = 11;
  void clear_height_offset_min();
  static const int kHeightOffsetMinFieldNumber = 11;
  float height_offset_min() const;
  void set_height_offset_min(float value);

  // float height_offset_max = 12;
  void clear_height_offset_max();
  static const int kHeightOffsetMaxFieldNumber = 12;
  float height_offset_max() const;
  void set_height_offset_max(float value);

  // float des_range_offset = 13;
  void clear_des_range_offset();
  static const int kDesRangeOffsetFieldNumber = 13;
  float des_range_offset() const;
  void set_des_range_offset(float value);

  // float ballistic_calc_rate = 14;
  void clear_ballistic_calc_rate();
  static const int kBallisticCalcRateFieldNumber = 14;
  float ballistic_calc_rate() const;
  void set_ballistic_calc_rate(float value);

  // @@protoc_insertion_point(class_scope:ConfigData.CreateBullet_Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > parabola_src_;
  mutable int _parabola_src_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > parabola_ctrl_1_;
  mutable int _parabola_ctrl_1_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > parabola_ctrl_2_;
  mutable int _parabola_ctrl_2_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > parabola_des_;
  mutable int _parabola_des_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr point_;
  ::google::protobuf::uint32 id_;
  float horizon_speed_;
  float horizontal_range_;
  float trace_missile_;
  float parabola_height_;
  float height_offset_min_;
  float height_offset_max_;
  float des_range_offset_;
  float ballistic_calc_rate_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Spell_5fConfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Skill_Level_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ConfigData.Skill_Level_Config) */ {
 public:
  Skill_Level_Config();
  virtual ~Skill_Level_Config();

  Skill_Level_Config(const Skill_Level_Config& from);

  inline Skill_Level_Config& operator=(const Skill_Level_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Skill_Level_Config(Skill_Level_Config&& from) noexcept
    : Skill_Level_Config() {
    *this = ::std::move(from);
  }

  inline Skill_Level_Config& operator=(Skill_Level_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Skill_Level_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Skill_Level_Config* internal_default_instance() {
    return reinterpret_cast<const Skill_Level_Config*>(
               &_Skill_Level_Config_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(Skill_Level_Config* other);
  friend void swap(Skill_Level_Config& a, Skill_Level_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Skill_Level_Config* New() const final {
    return CreateMaybeMessage<Skill_Level_Config>(NULL);
  }

  Skill_Level_Config* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Skill_Level_Config>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Skill_Level_Config& from);
  void MergeFrom(const Skill_Level_Config& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Skill_Level_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 materials = 5;
  int materials_size() const;
  void clear_materials();
  static const int kMaterialsFieldNumber = 5;
  ::google::protobuf::uint32 materials(int index) const;
  void set_materials(int index, ::google::protobuf::uint32 value);
  void add_materials(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      materials() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_materials();

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // uint32 skill_id = 2;
  void clear_skill_id();
  static const int kSkillIdFieldNumber = 2;
  ::google::protobuf::uint32 skill_id() const;
  void set_skill_id(::google::protobuf::uint32 value);

  // int32 level_start = 3;
  void clear_level_start();
  static const int kLevelStartFieldNumber = 3;
  ::google::protobuf::int32 level_start() const;
  void set_level_start(::google::protobuf::int32 value);

  // int32 level_end = 4;
  void clear_level_end();
  static const int kLevelEndFieldNumber = 4;
  ::google::protobuf::int32 level_end() const;
  void set_level_end(::google::protobuf::int32 value);

  // int32 level_limit = 6;
  void clear_level_limit();
  static const int kLevelLimitFieldNumber = 6;
  ::google::protobuf::int32 level_limit() const;
  void set_level_limit(::google::protobuf::int32 value);

  // int32 rank_limit = 7;
  void clear_rank_limit();
  static const int kRankLimitFieldNumber = 7;
  ::google::protobuf::int32 rank_limit() const;
  void set_rank_limit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ConfigData.Skill_Level_Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > materials_;
  mutable int _materials_cached_byte_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 skill_id_;
  ::google::protobuf::int32 level_start_;
  ::google::protobuf::int32 level_end_;
  ::google::protobuf::int32 level_limit_;
  ::google::protobuf::int32 rank_limit_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Spell_5fConfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Spell_Config_Data_ActiveSpellConfigItemsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Spell_Config_Data_ActiveSpellConfigItemsEntry_DoNotUse, 
    ::google::protobuf::uint32, ::ConfigData::ActiveSpell_Config,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Spell_Config_Data_ActiveSpellConfigItemsEntry_DoNotUse, 
    ::google::protobuf::uint32, ::ConfigData::ActiveSpell_Config,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Spell_Config_Data_ActiveSpellConfigItemsEntry_DoNotUse();
  Spell_Config_Data_ActiveSpellConfigItemsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Spell_Config_Data_ActiveSpellConfigItemsEntry_DoNotUse& other);
  static const Spell_Config_Data_ActiveSpellConfigItemsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Spell_Config_Data_ActiveSpellConfigItemsEntry_DoNotUse*>(&_Spell_Config_Data_ActiveSpellConfigItemsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Spell_Config_Data_SkillDataConfigItemsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Spell_Config_Data_SkillDataConfigItemsEntry_DoNotUse, 
    ::google::protobuf::uint32, ::ConfigData::SkillData_Config,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Spell_Config_Data_SkillDataConfigItemsEntry_DoNotUse, 
    ::google::protobuf::uint32, ::ConfigData::SkillData_Config,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Spell_Config_Data_SkillDataConfigItemsEntry_DoNotUse();
  Spell_Config_Data_SkillDataConfigItemsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Spell_Config_Data_SkillDataConfigItemsEntry_DoNotUse& other);
  static const Spell_Config_Data_SkillDataConfigItemsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Spell_Config_Data_SkillDataConfigItemsEntry_DoNotUse*>(&_Spell_Config_Data_SkillDataConfigItemsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Spell_Config_Data_DataChangeFuncConfigItemsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Spell_Config_Data_DataChangeFuncConfigItemsEntry_DoNotUse, 
    ::google::protobuf::uint32, ::ConfigData::DataChangeFunc_Config,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Spell_Config_Data_DataChangeFuncConfigItemsEntry_DoNotUse, 
    ::google::protobuf::uint32, ::ConfigData::DataChangeFunc_Config,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Spell_Config_Data_DataChangeFuncConfigItemsEntry_DoNotUse();
  Spell_Config_Data_DataChangeFuncConfigItemsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Spell_Config_Data_DataChangeFuncConfigItemsEntry_DoNotUse& other);
  static const Spell_Config_Data_DataChangeFuncConfigItemsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Spell_Config_Data_DataChangeFuncConfigItemsEntry_DoNotUse*>(&_Spell_Config_Data_DataChangeFuncConfigItemsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Spell_Config_Data_PassiveSpellConfigItemsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Spell_Config_Data_PassiveSpellConfigItemsEntry_DoNotUse, 
    ::google::protobuf::uint32, ::ConfigData::PassiveSpell_Config,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Spell_Config_Data_PassiveSpellConfigItemsEntry_DoNotUse, 
    ::google::protobuf::uint32, ::ConfigData::PassiveSpell_Config,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Spell_Config_Data_PassiveSpellConfigItemsEntry_DoNotUse();
  Spell_Config_Data_PassiveSpellConfigItemsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Spell_Config_Data_PassiveSpellConfigItemsEntry_DoNotUse& other);
  static const Spell_Config_Data_PassiveSpellConfigItemsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Spell_Config_Data_PassiveSpellConfigItemsEntry_DoNotUse*>(&_Spell_Config_Data_PassiveSpellConfigItemsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Spell_Config_Data_CreateBulletConfigItemsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Spell_Config_Data_CreateBulletConfigItemsEntry_DoNotUse, 
    ::google::protobuf::uint32, ::ConfigData::CreateBullet_Config,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Spell_Config_Data_CreateBulletConfigItemsEntry_DoNotUse, 
    ::google::protobuf::uint32, ::ConfigData::CreateBullet_Config,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Spell_Config_Data_CreateBulletConfigItemsEntry_DoNotUse();
  Spell_Config_Data_CreateBulletConfigItemsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Spell_Config_Data_CreateBulletConfigItemsEntry_DoNotUse& other);
  static const Spell_Config_Data_CreateBulletConfigItemsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Spell_Config_Data_CreateBulletConfigItemsEntry_DoNotUse*>(&_Spell_Config_Data_CreateBulletConfigItemsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Spell_Config_Data_SkillLevelConfigItemsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Spell_Config_Data_SkillLevelConfigItemsEntry_DoNotUse, 
    ::google::protobuf::uint32, ::ConfigData::Skill_Level_Config,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Spell_Config_Data_SkillLevelConfigItemsEntry_DoNotUse, 
    ::google::protobuf::uint32, ::ConfigData::Skill_Level_Config,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Spell_Config_Data_SkillLevelConfigItemsEntry_DoNotUse();
  Spell_Config_Data_SkillLevelConfigItemsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Spell_Config_Data_SkillLevelConfigItemsEntry_DoNotUse& other);
  static const Spell_Config_Data_SkillLevelConfigItemsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Spell_Config_Data_SkillLevelConfigItemsEntry_DoNotUse*>(&_Spell_Config_Data_SkillLevelConfigItemsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Spell_Config_Data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ConfigData.Spell_Config_Data) */ {
 public:
  Spell_Config_Data();
  virtual ~Spell_Config_Data();

  Spell_Config_Data(const Spell_Config_Data& from);

  inline Spell_Config_Data& operator=(const Spell_Config_Data& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Spell_Config_Data(Spell_Config_Data&& from) noexcept
    : Spell_Config_Data() {
    *this = ::std::move(from);
  }

  inline Spell_Config_Data& operator=(Spell_Config_Data&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Spell_Config_Data& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Spell_Config_Data* internal_default_instance() {
    return reinterpret_cast<const Spell_Config_Data*>(
               &_Spell_Config_Data_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(Spell_Config_Data* other);
  friend void swap(Spell_Config_Data& a, Spell_Config_Data& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Spell_Config_Data* New() const final {
    return CreateMaybeMessage<Spell_Config_Data>(NULL);
  }

  Spell_Config_Data* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Spell_Config_Data>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Spell_Config_Data& from);
  void MergeFrom(const Spell_Config_Data& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Spell_Config_Data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, .ConfigData.ActiveSpell_Config> ActiveSpell_Config_items = 1;
  int activespell_config_items_size() const;
  void clear_activespell_config_items();
  static const int kActiveSpellConfigItemsFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::ActiveSpell_Config >&
      activespell_config_items() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::ActiveSpell_Config >*
      mutable_activespell_config_items();

  // map<uint32, .ConfigData.SkillData_Config> SkillData_Config_items = 2;
  int skilldata_config_items_size() const;
  void clear_skilldata_config_items();
  static const int kSkillDataConfigItemsFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::SkillData_Config >&
      skilldata_config_items() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::SkillData_Config >*
      mutable_skilldata_config_items();

  // map<uint32, .ConfigData.DataChangeFunc_Config> DataChangeFunc_Config_items = 3;
  int datachangefunc_config_items_size() const;
  void clear_datachangefunc_config_items();
  static const int kDataChangeFuncConfigItemsFieldNumber = 3;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::DataChangeFunc_Config >&
      datachangefunc_config_items() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::DataChangeFunc_Config >*
      mutable_datachangefunc_config_items();

  // map<uint32, .ConfigData.PassiveSpell_Config> PassiveSpell_Config_items = 4;
  int passivespell_config_items_size() const;
  void clear_passivespell_config_items();
  static const int kPassiveSpellConfigItemsFieldNumber = 4;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::PassiveSpell_Config >&
      passivespell_config_items() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::PassiveSpell_Config >*
      mutable_passivespell_config_items();

  // map<uint32, .ConfigData.CreateBullet_Config> CreateBullet_Config_items = 5;
  int createbullet_config_items_size() const;
  void clear_createbullet_config_items();
  static const int kCreateBulletConfigItemsFieldNumber = 5;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::CreateBullet_Config >&
      createbullet_config_items() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::CreateBullet_Config >*
      mutable_createbullet_config_items();

  // map<uint32, .ConfigData.Skill_Level_Config> Skill_Level_Config_items = 6;
  int skill_level_config_items_size() const;
  void clear_skill_level_config_items();
  static const int kSkillLevelConfigItemsFieldNumber = 6;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::Skill_Level_Config >&
      skill_level_config_items() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::Skill_Level_Config >*
      mutable_skill_level_config_items();

  // @@protoc_insertion_point(class_scope:ConfigData.Spell_Config_Data)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      Spell_Config_Data_ActiveSpellConfigItemsEntry_DoNotUse,
      ::google::protobuf::uint32, ::ConfigData::ActiveSpell_Config,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > activespell_config_items_;
  ::google::protobuf::internal::MapField<
      Spell_Config_Data_SkillDataConfigItemsEntry_DoNotUse,
      ::google::protobuf::uint32, ::ConfigData::SkillData_Config,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > skilldata_config_items_;
  ::google::protobuf::internal::MapField<
      Spell_Config_Data_DataChangeFuncConfigItemsEntry_DoNotUse,
      ::google::protobuf::uint32, ::ConfigData::DataChangeFunc_Config,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > datachangefunc_config_items_;
  ::google::protobuf::internal::MapField<
      Spell_Config_Data_PassiveSpellConfigItemsEntry_DoNotUse,
      ::google::protobuf::uint32, ::ConfigData::PassiveSpell_Config,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > passivespell_config_items_;
  ::google::protobuf::internal::MapField<
      Spell_Config_Data_CreateBulletConfigItemsEntry_DoNotUse,
      ::google::protobuf::uint32, ::ConfigData::CreateBullet_Config,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > createbullet_config_items_;
  ::google::protobuf::internal::MapField<
      Spell_Config_Data_SkillLevelConfigItemsEntry_DoNotUse,
      ::google::protobuf::uint32, ::ConfigData::Skill_Level_Config,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > skill_level_config_items_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Spell_5fConfig_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ActiveSpell_Config

// uint32 id = 1;
inline void ActiveSpell_Config::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 ActiveSpell_Config::id() const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.id)
  return id_;
}
inline void ActiveSpell_Config::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.id)
}

// int32 cd = 2;
inline void ActiveSpell_Config::clear_cd() {
  cd_ = 0;
}
inline ::google::protobuf::int32 ActiveSpell_Config::cd() const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.cd)
  return cd_;
}
inline void ActiveSpell_Config::set_cd(::google::protobuf::int32 value) {
  
  cd_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.cd)
}

// int32 cost = 3;
inline void ActiveSpell_Config::clear_cost() {
  cost_ = 0;
}
inline ::google::protobuf::int32 ActiveSpell_Config::cost() const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.cost)
  return cost_;
}
inline void ActiveSpell_Config::set_cost(::google::protobuf::int32 value) {
  
  cost_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.cost)
}

// string pre_condition_type = 4;
inline void ActiveSpell_Config::clear_pre_condition_type() {
  pre_condition_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ActiveSpell_Config::pre_condition_type() const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.pre_condition_type)
  return pre_condition_type_.GetNoArena();
}
inline void ActiveSpell_Config::set_pre_condition_type(const ::std::string& value) {
  
  pre_condition_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.pre_condition_type)
}
#if LANG_CXX11
inline void ActiveSpell_Config::set_pre_condition_type(::std::string&& value) {
  
  pre_condition_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.ActiveSpell_Config.pre_condition_type)
}
#endif
inline void ActiveSpell_Config::set_pre_condition_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pre_condition_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.ActiveSpell_Config.pre_condition_type)
}
inline void ActiveSpell_Config::set_pre_condition_type(const char* value, size_t size) {
  
  pre_condition_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.ActiveSpell_Config.pre_condition_type)
}
inline ::std::string* ActiveSpell_Config::mutable_pre_condition_type() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.ActiveSpell_Config.pre_condition_type)
  return pre_condition_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActiveSpell_Config::release_pre_condition_type() {
  // @@protoc_insertion_point(field_release:ConfigData.ActiveSpell_Config.pre_condition_type)
  
  return pre_condition_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActiveSpell_Config::set_allocated_pre_condition_type(::std::string* pre_condition_type) {
  if (pre_condition_type != NULL) {
    
  } else {
    
  }
  pre_condition_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pre_condition_type);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.ActiveSpell_Config.pre_condition_type)
}

// string pre_condition_data = 5;
inline void ActiveSpell_Config::clear_pre_condition_data() {
  pre_condition_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ActiveSpell_Config::pre_condition_data() const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.pre_condition_data)
  return pre_condition_data_.GetNoArena();
}
inline void ActiveSpell_Config::set_pre_condition_data(const ::std::string& value) {
  
  pre_condition_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.pre_condition_data)
}
#if LANG_CXX11
inline void ActiveSpell_Config::set_pre_condition_data(::std::string&& value) {
  
  pre_condition_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.ActiveSpell_Config.pre_condition_data)
}
#endif
inline void ActiveSpell_Config::set_pre_condition_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pre_condition_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.ActiveSpell_Config.pre_condition_data)
}
inline void ActiveSpell_Config::set_pre_condition_data(const char* value, size_t size) {
  
  pre_condition_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.ActiveSpell_Config.pre_condition_data)
}
inline ::std::string* ActiveSpell_Config::mutable_pre_condition_data() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.ActiveSpell_Config.pre_condition_data)
  return pre_condition_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActiveSpell_Config::release_pre_condition_data() {
  // @@protoc_insertion_point(field_release:ConfigData.ActiveSpell_Config.pre_condition_data)
  
  return pre_condition_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActiveSpell_Config::set_allocated_pre_condition_data(::std::string* pre_condition_data) {
  if (pre_condition_data != NULL) {
    
  } else {
    
  }
  pre_condition_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pre_condition_data);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.ActiveSpell_Config.pre_condition_data)
}

// string trigger_anim_effect = 6;
inline void ActiveSpell_Config::clear_trigger_anim_effect() {
  trigger_anim_effect_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ActiveSpell_Config::trigger_anim_effect() const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.trigger_anim_effect)
  return trigger_anim_effect_.GetNoArena();
}
inline void ActiveSpell_Config::set_trigger_anim_effect(const ::std::string& value) {
  
  trigger_anim_effect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.trigger_anim_effect)
}
#if LANG_CXX11
inline void ActiveSpell_Config::set_trigger_anim_effect(::std::string&& value) {
  
  trigger_anim_effect_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.ActiveSpell_Config.trigger_anim_effect)
}
#endif
inline void ActiveSpell_Config::set_trigger_anim_effect(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  trigger_anim_effect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.ActiveSpell_Config.trigger_anim_effect)
}
inline void ActiveSpell_Config::set_trigger_anim_effect(const char* value, size_t size) {
  
  trigger_anim_effect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.ActiveSpell_Config.trigger_anim_effect)
}
inline ::std::string* ActiveSpell_Config::mutable_trigger_anim_effect() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.ActiveSpell_Config.trigger_anim_effect)
  return trigger_anim_effect_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActiveSpell_Config::release_trigger_anim_effect() {
  // @@protoc_insertion_point(field_release:ConfigData.ActiveSpell_Config.trigger_anim_effect)
  
  return trigger_anim_effect_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActiveSpell_Config::set_allocated_trigger_anim_effect(::std::string* trigger_anim_effect) {
  if (trigger_anim_effect != NULL) {
    
  } else {
    
  }
  trigger_anim_effect_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trigger_anim_effect);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.ActiveSpell_Config.trigger_anim_effect)
}

// repeated string trigger_func_id = 7;
inline int ActiveSpell_Config::trigger_func_id_size() const {
  return trigger_func_id_.size();
}
inline void ActiveSpell_Config::clear_trigger_func_id() {
  trigger_func_id_.Clear();
}
inline const ::std::string& ActiveSpell_Config::trigger_func_id(int index) const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.trigger_func_id)
  return trigger_func_id_.Get(index);
}
inline ::std::string* ActiveSpell_Config::mutable_trigger_func_id(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigData.ActiveSpell_Config.trigger_func_id)
  return trigger_func_id_.Mutable(index);
}
inline void ActiveSpell_Config::set_trigger_func_id(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.trigger_func_id)
  trigger_func_id_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ActiveSpell_Config::set_trigger_func_id(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.trigger_func_id)
  trigger_func_id_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ActiveSpell_Config::set_trigger_func_id(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  trigger_func_id_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ConfigData.ActiveSpell_Config.trigger_func_id)
}
inline void ActiveSpell_Config::set_trigger_func_id(int index, const char* value, size_t size) {
  trigger_func_id_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ConfigData.ActiveSpell_Config.trigger_func_id)
}
inline ::std::string* ActiveSpell_Config::add_trigger_func_id() {
  // @@protoc_insertion_point(field_add_mutable:ConfigData.ActiveSpell_Config.trigger_func_id)
  return trigger_func_id_.Add();
}
inline void ActiveSpell_Config::add_trigger_func_id(const ::std::string& value) {
  trigger_func_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ConfigData.ActiveSpell_Config.trigger_func_id)
}
#if LANG_CXX11
inline void ActiveSpell_Config::add_trigger_func_id(::std::string&& value) {
  trigger_func_id_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ConfigData.ActiveSpell_Config.trigger_func_id)
}
#endif
inline void ActiveSpell_Config::add_trigger_func_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  trigger_func_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ConfigData.ActiveSpell_Config.trigger_func_id)
}
inline void ActiveSpell_Config::add_trigger_func_id(const char* value, size_t size) {
  trigger_func_id_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ConfigData.ActiveSpell_Config.trigger_func_id)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ActiveSpell_Config::trigger_func_id() const {
  // @@protoc_insertion_point(field_list:ConfigData.ActiveSpell_Config.trigger_func_id)
  return trigger_func_id_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ActiveSpell_Config::mutable_trigger_func_id() {
  // @@protoc_insertion_point(field_mutable_list:ConfigData.ActiveSpell_Config.trigger_func_id)
  return &trigger_func_id_;
}

// repeated string trigger_on_me_func_id = 8;
inline int ActiveSpell_Config::trigger_on_me_func_id_size() const {
  return trigger_on_me_func_id_.size();
}
inline void ActiveSpell_Config::clear_trigger_on_me_func_id() {
  trigger_on_me_func_id_.Clear();
}
inline const ::std::string& ActiveSpell_Config::trigger_on_me_func_id(int index) const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.trigger_on_me_func_id)
  return trigger_on_me_func_id_.Get(index);
}
inline ::std::string* ActiveSpell_Config::mutable_trigger_on_me_func_id(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigData.ActiveSpell_Config.trigger_on_me_func_id)
  return trigger_on_me_func_id_.Mutable(index);
}
inline void ActiveSpell_Config::set_trigger_on_me_func_id(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.trigger_on_me_func_id)
  trigger_on_me_func_id_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ActiveSpell_Config::set_trigger_on_me_func_id(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.trigger_on_me_func_id)
  trigger_on_me_func_id_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ActiveSpell_Config::set_trigger_on_me_func_id(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  trigger_on_me_func_id_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ConfigData.ActiveSpell_Config.trigger_on_me_func_id)
}
inline void ActiveSpell_Config::set_trigger_on_me_func_id(int index, const char* value, size_t size) {
  trigger_on_me_func_id_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ConfigData.ActiveSpell_Config.trigger_on_me_func_id)
}
inline ::std::string* ActiveSpell_Config::add_trigger_on_me_func_id() {
  // @@protoc_insertion_point(field_add_mutable:ConfigData.ActiveSpell_Config.trigger_on_me_func_id)
  return trigger_on_me_func_id_.Add();
}
inline void ActiveSpell_Config::add_trigger_on_me_func_id(const ::std::string& value) {
  trigger_on_me_func_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ConfigData.ActiveSpell_Config.trigger_on_me_func_id)
}
#if LANG_CXX11
inline void ActiveSpell_Config::add_trigger_on_me_func_id(::std::string&& value) {
  trigger_on_me_func_id_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ConfigData.ActiveSpell_Config.trigger_on_me_func_id)
}
#endif
inline void ActiveSpell_Config::add_trigger_on_me_func_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  trigger_on_me_func_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ConfigData.ActiveSpell_Config.trigger_on_me_func_id)
}
inline void ActiveSpell_Config::add_trigger_on_me_func_id(const char* value, size_t size) {
  trigger_on_me_func_id_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ConfigData.ActiveSpell_Config.trigger_on_me_func_id)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ActiveSpell_Config::trigger_on_me_func_id() const {
  // @@protoc_insertion_point(field_list:ConfigData.ActiveSpell_Config.trigger_on_me_func_id)
  return trigger_on_me_func_id_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ActiveSpell_Config::mutable_trigger_on_me_func_id() {
  // @@protoc_insertion_point(field_mutable_list:ConfigData.ActiveSpell_Config.trigger_on_me_func_id)
  return &trigger_on_me_func_id_;
}

// string range_eff = 9;
inline void ActiveSpell_Config::clear_range_eff() {
  range_eff_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ActiveSpell_Config::range_eff() const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.range_eff)
  return range_eff_.GetNoArena();
}
inline void ActiveSpell_Config::set_range_eff(const ::std::string& value) {
  
  range_eff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.range_eff)
}
#if LANG_CXX11
inline void ActiveSpell_Config::set_range_eff(::std::string&& value) {
  
  range_eff_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.ActiveSpell_Config.range_eff)
}
#endif
inline void ActiveSpell_Config::set_range_eff(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  range_eff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.ActiveSpell_Config.range_eff)
}
inline void ActiveSpell_Config::set_range_eff(const char* value, size_t size) {
  
  range_eff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.ActiveSpell_Config.range_eff)
}
inline ::std::string* ActiveSpell_Config::mutable_range_eff() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.ActiveSpell_Config.range_eff)
  return range_eff_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActiveSpell_Config::release_range_eff() {
  // @@protoc_insertion_point(field_release:ConfigData.ActiveSpell_Config.range_eff)
  
  return range_eff_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActiveSpell_Config::set_allocated_range_eff(::std::string* range_eff) {
  if (range_eff != NULL) {
    
  } else {
    
  }
  range_eff_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), range_eff);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.ActiveSpell_Config.range_eff)
}

// float range_eff_time = 10;
inline void ActiveSpell_Config::clear_range_eff_time() {
  range_eff_time_ = 0;
}
inline float ActiveSpell_Config::range_eff_time() const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.range_eff_time)
  return range_eff_time_;
}
inline void ActiveSpell_Config::set_range_eff_time(float value) {
  
  range_eff_time_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.range_eff_time)
}

// repeated string team_buff_effect = 11;
inline int ActiveSpell_Config::team_buff_effect_size() const {
  return team_buff_effect_.size();
}
inline void ActiveSpell_Config::clear_team_buff_effect() {
  team_buff_effect_.Clear();
}
inline const ::std::string& ActiveSpell_Config::team_buff_effect(int index) const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.team_buff_effect)
  return team_buff_effect_.Get(index);
}
inline ::std::string* ActiveSpell_Config::mutable_team_buff_effect(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigData.ActiveSpell_Config.team_buff_effect)
  return team_buff_effect_.Mutable(index);
}
inline void ActiveSpell_Config::set_team_buff_effect(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.team_buff_effect)
  team_buff_effect_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ActiveSpell_Config::set_team_buff_effect(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.team_buff_effect)
  team_buff_effect_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ActiveSpell_Config::set_team_buff_effect(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  team_buff_effect_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ConfigData.ActiveSpell_Config.team_buff_effect)
}
inline void ActiveSpell_Config::set_team_buff_effect(int index, const char* value, size_t size) {
  team_buff_effect_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ConfigData.ActiveSpell_Config.team_buff_effect)
}
inline ::std::string* ActiveSpell_Config::add_team_buff_effect() {
  // @@protoc_insertion_point(field_add_mutable:ConfigData.ActiveSpell_Config.team_buff_effect)
  return team_buff_effect_.Add();
}
inline void ActiveSpell_Config::add_team_buff_effect(const ::std::string& value) {
  team_buff_effect_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ConfigData.ActiveSpell_Config.team_buff_effect)
}
#if LANG_CXX11
inline void ActiveSpell_Config::add_team_buff_effect(::std::string&& value) {
  team_buff_effect_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ConfigData.ActiveSpell_Config.team_buff_effect)
}
#endif
inline void ActiveSpell_Config::add_team_buff_effect(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  team_buff_effect_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ConfigData.ActiveSpell_Config.team_buff_effect)
}
inline void ActiveSpell_Config::add_team_buff_effect(const char* value, size_t size) {
  team_buff_effect_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ConfigData.ActiveSpell_Config.team_buff_effect)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ActiveSpell_Config::team_buff_effect() const {
  // @@protoc_insertion_point(field_list:ConfigData.ActiveSpell_Config.team_buff_effect)
  return team_buff_effect_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ActiveSpell_Config::mutable_team_buff_effect() {
  // @@protoc_insertion_point(field_mutable_list:ConfigData.ActiveSpell_Config.team_buff_effect)
  return &team_buff_effect_;
}

// repeated float infection = 12;
inline int ActiveSpell_Config::infection_size() const {
  return infection_.size();
}
inline void ActiveSpell_Config::clear_infection() {
  infection_.Clear();
}
inline float ActiveSpell_Config::infection(int index) const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.infection)
  return infection_.Get(index);
}
inline void ActiveSpell_Config::set_infection(int index, float value) {
  infection_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.infection)
}
inline void ActiveSpell_Config::add_infection(float value) {
  infection_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigData.ActiveSpell_Config.infection)
}
inline const ::google::protobuf::RepeatedField< float >&
ActiveSpell_Config::infection() const {
  // @@protoc_insertion_point(field_list:ConfigData.ActiveSpell_Config.infection)
  return infection_;
}
inline ::google::protobuf::RepeatedField< float >*
ActiveSpell_Config::mutable_infection() {
  // @@protoc_insertion_point(field_mutable_list:ConfigData.ActiveSpell_Config.infection)
  return &infection_;
}

// string bullet_id = 13;
inline void ActiveSpell_Config::clear_bullet_id() {
  bullet_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ActiveSpell_Config::bullet_id() const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.bullet_id)
  return bullet_id_.GetNoArena();
}
inline void ActiveSpell_Config::set_bullet_id(const ::std::string& value) {
  
  bullet_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.bullet_id)
}
#if LANG_CXX11
inline void ActiveSpell_Config::set_bullet_id(::std::string&& value) {
  
  bullet_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.ActiveSpell_Config.bullet_id)
}
#endif
inline void ActiveSpell_Config::set_bullet_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bullet_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.ActiveSpell_Config.bullet_id)
}
inline void ActiveSpell_Config::set_bullet_id(const char* value, size_t size) {
  
  bullet_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.ActiveSpell_Config.bullet_id)
}
inline ::std::string* ActiveSpell_Config::mutable_bullet_id() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.ActiveSpell_Config.bullet_id)
  return bullet_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActiveSpell_Config::release_bullet_id() {
  // @@protoc_insertion_point(field_release:ConfigData.ActiveSpell_Config.bullet_id)
  
  return bullet_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActiveSpell_Config::set_allocated_bullet_id(::std::string* bullet_id) {
  if (bullet_id != NULL) {
    
  } else {
    
  }
  bullet_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bullet_id);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.ActiveSpell_Config.bullet_id)
}

// string bullet_launch_delay = 14;
inline void ActiveSpell_Config::clear_bullet_launch_delay() {
  bullet_launch_delay_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ActiveSpell_Config::bullet_launch_delay() const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.bullet_launch_delay)
  return bullet_launch_delay_.GetNoArena();
}
inline void ActiveSpell_Config::set_bullet_launch_delay(const ::std::string& value) {
  
  bullet_launch_delay_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.bullet_launch_delay)
}
#if LANG_CXX11
inline void ActiveSpell_Config::set_bullet_launch_delay(::std::string&& value) {
  
  bullet_launch_delay_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.ActiveSpell_Config.bullet_launch_delay)
}
#endif
inline void ActiveSpell_Config::set_bullet_launch_delay(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bullet_launch_delay_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.ActiveSpell_Config.bullet_launch_delay)
}
inline void ActiveSpell_Config::set_bullet_launch_delay(const char* value, size_t size) {
  
  bullet_launch_delay_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.ActiveSpell_Config.bullet_launch_delay)
}
inline ::std::string* ActiveSpell_Config::mutable_bullet_launch_delay() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.ActiveSpell_Config.bullet_launch_delay)
  return bullet_launch_delay_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActiveSpell_Config::release_bullet_launch_delay() {
  // @@protoc_insertion_point(field_release:ConfigData.ActiveSpell_Config.bullet_launch_delay)
  
  return bullet_launch_delay_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActiveSpell_Config::set_allocated_bullet_launch_delay(::std::string* bullet_launch_delay) {
  if (bullet_launch_delay != NULL) {
    
  } else {
    
  }
  bullet_launch_delay_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bullet_launch_delay);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.ActiveSpell_Config.bullet_launch_delay)
}

// string bullet_effect = 15;
inline void ActiveSpell_Config::clear_bullet_effect() {
  bullet_effect_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ActiveSpell_Config::bullet_effect() const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.bullet_effect)
  return bullet_effect_.GetNoArena();
}
inline void ActiveSpell_Config::set_bullet_effect(const ::std::string& value) {
  
  bullet_effect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.bullet_effect)
}
#if LANG_CXX11
inline void ActiveSpell_Config::set_bullet_effect(::std::string&& value) {
  
  bullet_effect_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.ActiveSpell_Config.bullet_effect)
}
#endif
inline void ActiveSpell_Config::set_bullet_effect(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bullet_effect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.ActiveSpell_Config.bullet_effect)
}
inline void ActiveSpell_Config::set_bullet_effect(const char* value, size_t size) {
  
  bullet_effect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.ActiveSpell_Config.bullet_effect)
}
inline ::std::string* ActiveSpell_Config::mutable_bullet_effect() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.ActiveSpell_Config.bullet_effect)
  return bullet_effect_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActiveSpell_Config::release_bullet_effect() {
  // @@protoc_insertion_point(field_release:ConfigData.ActiveSpell_Config.bullet_effect)
  
  return bullet_effect_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActiveSpell_Config::set_allocated_bullet_effect(::std::string* bullet_effect) {
  if (bullet_effect != NULL) {
    
  } else {
    
  }
  bullet_effect_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bullet_effect);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.ActiveSpell_Config.bullet_effect)
}

// string bullet_hit = 16;
inline void ActiveSpell_Config::clear_bullet_hit() {
  bullet_hit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ActiveSpell_Config::bullet_hit() const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.bullet_hit)
  return bullet_hit_.GetNoArena();
}
inline void ActiveSpell_Config::set_bullet_hit(const ::std::string& value) {
  
  bullet_hit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.bullet_hit)
}
#if LANG_CXX11
inline void ActiveSpell_Config::set_bullet_hit(::std::string&& value) {
  
  bullet_hit_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.ActiveSpell_Config.bullet_hit)
}
#endif
inline void ActiveSpell_Config::set_bullet_hit(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bullet_hit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.ActiveSpell_Config.bullet_hit)
}
inline void ActiveSpell_Config::set_bullet_hit(const char* value, size_t size) {
  
  bullet_hit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.ActiveSpell_Config.bullet_hit)
}
inline ::std::string* ActiveSpell_Config::mutable_bullet_hit() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.ActiveSpell_Config.bullet_hit)
  return bullet_hit_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActiveSpell_Config::release_bullet_hit() {
  // @@protoc_insertion_point(field_release:ConfigData.ActiveSpell_Config.bullet_hit)
  
  return bullet_hit_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActiveSpell_Config::set_allocated_bullet_hit(::std::string* bullet_hit) {
  if (bullet_hit != NULL) {
    
  } else {
    
  }
  bullet_hit_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bullet_hit);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.ActiveSpell_Config.bullet_hit)
}

// string trigger_delay = 17;
inline void ActiveSpell_Config::clear_trigger_delay() {
  trigger_delay_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ActiveSpell_Config::trigger_delay() const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.trigger_delay)
  return trigger_delay_.GetNoArena();
}
inline void ActiveSpell_Config::set_trigger_delay(const ::std::string& value) {
  
  trigger_delay_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.trigger_delay)
}
#if LANG_CXX11
inline void ActiveSpell_Config::set_trigger_delay(::std::string&& value) {
  
  trigger_delay_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.ActiveSpell_Config.trigger_delay)
}
#endif
inline void ActiveSpell_Config::set_trigger_delay(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  trigger_delay_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.ActiveSpell_Config.trigger_delay)
}
inline void ActiveSpell_Config::set_trigger_delay(const char* value, size_t size) {
  
  trigger_delay_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.ActiveSpell_Config.trigger_delay)
}
inline ::std::string* ActiveSpell_Config::mutable_trigger_delay() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.ActiveSpell_Config.trigger_delay)
  return trigger_delay_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActiveSpell_Config::release_trigger_delay() {
  // @@protoc_insertion_point(field_release:ConfigData.ActiveSpell_Config.trigger_delay)
  
  return trigger_delay_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActiveSpell_Config::set_allocated_trigger_delay(::std::string* trigger_delay) {
  if (trigger_delay != NULL) {
    
  } else {
    
  }
  trigger_delay_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trigger_delay);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.ActiveSpell_Config.trigger_delay)
}

// float damage_num_delay = 18;
inline void ActiveSpell_Config::clear_damage_num_delay() {
  damage_num_delay_ = 0;
}
inline float ActiveSpell_Config::damage_num_delay() const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.damage_num_delay)
  return damage_num_delay_;
}
inline void ActiveSpell_Config::set_damage_num_delay(float value) {
  
  damage_num_delay_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.damage_num_delay)
}

// string chain_effect = 19;
inline void ActiveSpell_Config::clear_chain_effect() {
  chain_effect_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ActiveSpell_Config::chain_effect() const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.chain_effect)
  return chain_effect_.GetNoArena();
}
inline void ActiveSpell_Config::set_chain_effect(const ::std::string& value) {
  
  chain_effect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.chain_effect)
}
#if LANG_CXX11
inline void ActiveSpell_Config::set_chain_effect(::std::string&& value) {
  
  chain_effect_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.ActiveSpell_Config.chain_effect)
}
#endif
inline void ActiveSpell_Config::set_chain_effect(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  chain_effect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.ActiveSpell_Config.chain_effect)
}
inline void ActiveSpell_Config::set_chain_effect(const char* value, size_t size) {
  
  chain_effect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.ActiveSpell_Config.chain_effect)
}
inline ::std::string* ActiveSpell_Config::mutable_chain_effect() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.ActiveSpell_Config.chain_effect)
  return chain_effect_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActiveSpell_Config::release_chain_effect() {
  // @@protoc_insertion_point(field_release:ConfigData.ActiveSpell_Config.chain_effect)
  
  return chain_effect_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActiveSpell_Config::set_allocated_chain_effect(::std::string* chain_effect) {
  if (chain_effect != NULL) {
    
  } else {
    
  }
  chain_effect_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chain_effect);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.ActiveSpell_Config.chain_effect)
}

// string chain_effect_hit = 20;
inline void ActiveSpell_Config::clear_chain_effect_hit() {
  chain_effect_hit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ActiveSpell_Config::chain_effect_hit() const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.chain_effect_hit)
  return chain_effect_hit_.GetNoArena();
}
inline void ActiveSpell_Config::set_chain_effect_hit(const ::std::string& value) {
  
  chain_effect_hit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.chain_effect_hit)
}
#if LANG_CXX11
inline void ActiveSpell_Config::set_chain_effect_hit(::std::string&& value) {
  
  chain_effect_hit_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.ActiveSpell_Config.chain_effect_hit)
}
#endif
inline void ActiveSpell_Config::set_chain_effect_hit(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  chain_effect_hit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.ActiveSpell_Config.chain_effect_hit)
}
inline void ActiveSpell_Config::set_chain_effect_hit(const char* value, size_t size) {
  
  chain_effect_hit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.ActiveSpell_Config.chain_effect_hit)
}
inline ::std::string* ActiveSpell_Config::mutable_chain_effect_hit() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.ActiveSpell_Config.chain_effect_hit)
  return chain_effect_hit_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActiveSpell_Config::release_chain_effect_hit() {
  // @@protoc_insertion_point(field_release:ConfigData.ActiveSpell_Config.chain_effect_hit)
  
  return chain_effect_hit_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActiveSpell_Config::set_allocated_chain_effect_hit(::std::string* chain_effect_hit) {
  if (chain_effect_hit != NULL) {
    
  } else {
    
  }
  chain_effect_hit_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chain_effect_hit);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.ActiveSpell_Config.chain_effect_hit)
}

// float chain_speed = 21;
inline void ActiveSpell_Config::clear_chain_speed() {
  chain_speed_ = 0;
}
inline float ActiveSpell_Config::chain_speed() const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.chain_speed)
  return chain_speed_;
}
inline void ActiveSpell_Config::set_chain_speed(float value) {
  
  chain_speed_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.chain_speed)
}

// string sfx = 22;
inline void ActiveSpell_Config::clear_sfx() {
  sfx_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ActiveSpell_Config::sfx() const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.sfx)
  return sfx_.GetNoArena();
}
inline void ActiveSpell_Config::set_sfx(const ::std::string& value) {
  
  sfx_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.sfx)
}
#if LANG_CXX11
inline void ActiveSpell_Config::set_sfx(::std::string&& value) {
  
  sfx_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.ActiveSpell_Config.sfx)
}
#endif
inline void ActiveSpell_Config::set_sfx(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sfx_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.ActiveSpell_Config.sfx)
}
inline void ActiveSpell_Config::set_sfx(const char* value, size_t size) {
  
  sfx_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.ActiveSpell_Config.sfx)
}
inline ::std::string* ActiveSpell_Config::mutable_sfx() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.ActiveSpell_Config.sfx)
  return sfx_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActiveSpell_Config::release_sfx() {
  // @@protoc_insertion_point(field_release:ConfigData.ActiveSpell_Config.sfx)
  
  return sfx_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActiveSpell_Config::set_allocated_sfx(::std::string* sfx) {
  if (sfx != NULL) {
    
  } else {
    
  }
  sfx_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sfx);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.ActiveSpell_Config.sfx)
}

// float sfx_time = 23;
inline void ActiveSpell_Config::clear_sfx_time() {
  sfx_time_ = 0;
}
inline float ActiveSpell_Config::sfx_time() const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.sfx_time)
  return sfx_time_;
}
inline void ActiveSpell_Config::set_sfx_time(float value) {
  
  sfx_time_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.sfx_time)
}

// uint32 cam_bullet = 24;
inline void ActiveSpell_Config::clear_cam_bullet() {
  cam_bullet_ = 0u;
}
inline ::google::protobuf::uint32 ActiveSpell_Config::cam_bullet() const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.cam_bullet)
  return cam_bullet_;
}
inline void ActiveSpell_Config::set_cam_bullet(::google::protobuf::uint32 value) {
  
  cam_bullet_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.cam_bullet)
}

// uint32 cam_bullet_hit = 25;
inline void ActiveSpell_Config::clear_cam_bullet_hit() {
  cam_bullet_hit_ = 0u;
}
inline ::google::protobuf::uint32 ActiveSpell_Config::cam_bullet_hit() const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.cam_bullet_hit)
  return cam_bullet_hit_;
}
inline void ActiveSpell_Config::set_cam_bullet_hit(::google::protobuf::uint32 value) {
  
  cam_bullet_hit_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.cam_bullet_hit)
}

// string bullet_target = 26;
inline void ActiveSpell_Config::clear_bullet_target() {
  bullet_target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ActiveSpell_Config::bullet_target() const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.bullet_target)
  return bullet_target_.GetNoArena();
}
inline void ActiveSpell_Config::set_bullet_target(const ::std::string& value) {
  
  bullet_target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.bullet_target)
}
#if LANG_CXX11
inline void ActiveSpell_Config::set_bullet_target(::std::string&& value) {
  
  bullet_target_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.ActiveSpell_Config.bullet_target)
}
#endif
inline void ActiveSpell_Config::set_bullet_target(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bullet_target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.ActiveSpell_Config.bullet_target)
}
inline void ActiveSpell_Config::set_bullet_target(const char* value, size_t size) {
  
  bullet_target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.ActiveSpell_Config.bullet_target)
}
inline ::std::string* ActiveSpell_Config::mutable_bullet_target() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.ActiveSpell_Config.bullet_target)
  return bullet_target_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActiveSpell_Config::release_bullet_target() {
  // @@protoc_insertion_point(field_release:ConfigData.ActiveSpell_Config.bullet_target)
  
  return bullet_target_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActiveSpell_Config::set_allocated_bullet_target(::std::string* bullet_target) {
  if (bullet_target != NULL) {
    
  } else {
    
  }
  bullet_target_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bullet_target);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.ActiveSpell_Config.bullet_target)
}

// string data_target = 27;
inline void ActiveSpell_Config::clear_data_target() {
  data_target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ActiveSpell_Config::data_target() const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.data_target)
  return data_target_.GetNoArena();
}
inline void ActiveSpell_Config::set_data_target(const ::std::string& value) {
  
  data_target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.data_target)
}
#if LANG_CXX11
inline void ActiveSpell_Config::set_data_target(::std::string&& value) {
  
  data_target_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.ActiveSpell_Config.data_target)
}
#endif
inline void ActiveSpell_Config::set_data_target(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.ActiveSpell_Config.data_target)
}
inline void ActiveSpell_Config::set_data_target(const char* value, size_t size) {
  
  data_target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.ActiveSpell_Config.data_target)
}
inline ::std::string* ActiveSpell_Config::mutable_data_target() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.ActiveSpell_Config.data_target)
  return data_target_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActiveSpell_Config::release_data_target() {
  // @@protoc_insertion_point(field_release:ConfigData.ActiveSpell_Config.data_target)
  
  return data_target_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActiveSpell_Config::set_allocated_data_target(::std::string* data_target) {
  if (data_target != NULL) {
    
  } else {
    
  }
  data_target_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_target);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.ActiveSpell_Config.data_target)
}

// uint32 cam_feature = 28;
inline void ActiveSpell_Config::clear_cam_feature() {
  cam_feature_ = 0u;
}
inline ::google::protobuf::uint32 ActiveSpell_Config::cam_feature() const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.cam_feature)
  return cam_feature_;
}
inline void ActiveSpell_Config::set_cam_feature(::google::protobuf::uint32 value) {
  
  cam_feature_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.cam_feature)
}

// uint32 cam_trigger = 29;
inline void ActiveSpell_Config::clear_cam_trigger() {
  cam_trigger_ = 0u;
}
inline ::google::protobuf::uint32 ActiveSpell_Config::cam_trigger() const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.cam_trigger)
  return cam_trigger_;
}
inline void ActiveSpell_Config::set_cam_trigger(::google::protobuf::uint32 value) {
  
  cam_trigger_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.cam_trigger)
}

// string data_param_speed = 30;
inline void ActiveSpell_Config::clear_data_param_speed() {
  data_param_speed_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ActiveSpell_Config::data_param_speed() const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.data_param_speed)
  return data_param_speed_.GetNoArena();
}
inline void ActiveSpell_Config::set_data_param_speed(const ::std::string& value) {
  
  data_param_speed_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.data_param_speed)
}
#if LANG_CXX11
inline void ActiveSpell_Config::set_data_param_speed(::std::string&& value) {
  
  data_param_speed_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.ActiveSpell_Config.data_param_speed)
}
#endif
inline void ActiveSpell_Config::set_data_param_speed(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_param_speed_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.ActiveSpell_Config.data_param_speed)
}
inline void ActiveSpell_Config::set_data_param_speed(const char* value, size_t size) {
  
  data_param_speed_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.ActiveSpell_Config.data_param_speed)
}
inline ::std::string* ActiveSpell_Config::mutable_data_param_speed() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.ActiveSpell_Config.data_param_speed)
  return data_param_speed_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActiveSpell_Config::release_data_param_speed() {
  // @@protoc_insertion_point(field_release:ConfigData.ActiveSpell_Config.data_param_speed)
  
  return data_param_speed_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActiveSpell_Config::set_allocated_data_param_speed(::std::string* data_param_speed) {
  if (data_param_speed != NULL) {
    
  } else {
    
  }
  data_param_speed_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_param_speed);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.ActiveSpell_Config.data_param_speed)
}

// float trigger_life_time = 31;
inline void ActiveSpell_Config::clear_trigger_life_time() {
  trigger_life_time_ = 0;
}
inline float ActiveSpell_Config::trigger_life_time() const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.trigger_life_time)
  return trigger_life_time_;
}
inline void ActiveSpell_Config::set_trigger_life_time(float value) {
  
  trigger_life_time_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.trigger_life_time)
}

// float trigger_delta_time = 32;
inline void ActiveSpell_Config::clear_trigger_delta_time() {
  trigger_delta_time_ = 0;
}
inline float ActiveSpell_Config::trigger_delta_time() const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.trigger_delta_time)
  return trigger_delta_time_;
}
inline void ActiveSpell_Config::set_trigger_delta_time(float value) {
  
  trigger_delta_time_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.trigger_delta_time)
}

// repeated string spell_anim_can_move = 33;
inline int ActiveSpell_Config::spell_anim_can_move_size() const {
  return spell_anim_can_move_.size();
}
inline void ActiveSpell_Config::clear_spell_anim_can_move() {
  spell_anim_can_move_.Clear();
}
inline const ::std::string& ActiveSpell_Config::spell_anim_can_move(int index) const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.spell_anim_can_move)
  return spell_anim_can_move_.Get(index);
}
inline ::std::string* ActiveSpell_Config::mutable_spell_anim_can_move(int index) {
  // @@protoc_insertion_point(field_mutable:ConfigData.ActiveSpell_Config.spell_anim_can_move)
  return spell_anim_can_move_.Mutable(index);
}
inline void ActiveSpell_Config::set_spell_anim_can_move(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.spell_anim_can_move)
  spell_anim_can_move_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ActiveSpell_Config::set_spell_anim_can_move(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.spell_anim_can_move)
  spell_anim_can_move_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ActiveSpell_Config::set_spell_anim_can_move(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  spell_anim_can_move_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ConfigData.ActiveSpell_Config.spell_anim_can_move)
}
inline void ActiveSpell_Config::set_spell_anim_can_move(int index, const char* value, size_t size) {
  spell_anim_can_move_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ConfigData.ActiveSpell_Config.spell_anim_can_move)
}
inline ::std::string* ActiveSpell_Config::add_spell_anim_can_move() {
  // @@protoc_insertion_point(field_add_mutable:ConfigData.ActiveSpell_Config.spell_anim_can_move)
  return spell_anim_can_move_.Add();
}
inline void ActiveSpell_Config::add_spell_anim_can_move(const ::std::string& value) {
  spell_anim_can_move_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ConfigData.ActiveSpell_Config.spell_anim_can_move)
}
#if LANG_CXX11
inline void ActiveSpell_Config::add_spell_anim_can_move(::std::string&& value) {
  spell_anim_can_move_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ConfigData.ActiveSpell_Config.spell_anim_can_move)
}
#endif
inline void ActiveSpell_Config::add_spell_anim_can_move(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  spell_anim_can_move_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ConfigData.ActiveSpell_Config.spell_anim_can_move)
}
inline void ActiveSpell_Config::add_spell_anim_can_move(const char* value, size_t size) {
  spell_anim_can_move_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ConfigData.ActiveSpell_Config.spell_anim_can_move)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ActiveSpell_Config::spell_anim_can_move() const {
  // @@protoc_insertion_point(field_list:ConfigData.ActiveSpell_Config.spell_anim_can_move)
  return spell_anim_can_move_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ActiveSpell_Config::mutable_spell_anim_can_move() {
  // @@protoc_insertion_point(field_mutable_list:ConfigData.ActiveSpell_Config.spell_anim_can_move)
  return &spell_anim_can_move_;
}

// string range_eff_post = 34;
inline void ActiveSpell_Config::clear_range_eff_post() {
  range_eff_post_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ActiveSpell_Config::range_eff_post() const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.range_eff_post)
  return range_eff_post_.GetNoArena();
}
inline void ActiveSpell_Config::set_range_eff_post(const ::std::string& value) {
  
  range_eff_post_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.range_eff_post)
}
#if LANG_CXX11
inline void ActiveSpell_Config::set_range_eff_post(::std::string&& value) {
  
  range_eff_post_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.ActiveSpell_Config.range_eff_post)
}
#endif
inline void ActiveSpell_Config::set_range_eff_post(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  range_eff_post_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.ActiveSpell_Config.range_eff_post)
}
inline void ActiveSpell_Config::set_range_eff_post(const char* value, size_t size) {
  
  range_eff_post_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.ActiveSpell_Config.range_eff_post)
}
inline ::std::string* ActiveSpell_Config::mutable_range_eff_post() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.ActiveSpell_Config.range_eff_post)
  return range_eff_post_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActiveSpell_Config::release_range_eff_post() {
  // @@protoc_insertion_point(field_release:ConfigData.ActiveSpell_Config.range_eff_post)
  
  return range_eff_post_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActiveSpell_Config::set_allocated_range_eff_post(::std::string* range_eff_post) {
  if (range_eff_post != NULL) {
    
  } else {
    
  }
  range_eff_post_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), range_eff_post);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.ActiveSpell_Config.range_eff_post)
}

// string spell_sound = 35;
inline void ActiveSpell_Config::clear_spell_sound() {
  spell_sound_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ActiveSpell_Config::spell_sound() const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.spell_sound)
  return spell_sound_.GetNoArena();
}
inline void ActiveSpell_Config::set_spell_sound(const ::std::string& value) {
  
  spell_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.spell_sound)
}
#if LANG_CXX11
inline void ActiveSpell_Config::set_spell_sound(::std::string&& value) {
  
  spell_sound_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.ActiveSpell_Config.spell_sound)
}
#endif
inline void ActiveSpell_Config::set_spell_sound(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  spell_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.ActiveSpell_Config.spell_sound)
}
inline void ActiveSpell_Config::set_spell_sound(const char* value, size_t size) {
  
  spell_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.ActiveSpell_Config.spell_sound)
}
inline ::std::string* ActiveSpell_Config::mutable_spell_sound() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.ActiveSpell_Config.spell_sound)
  return spell_sound_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActiveSpell_Config::release_spell_sound() {
  // @@protoc_insertion_point(field_release:ConfigData.ActiveSpell_Config.spell_sound)
  
  return spell_sound_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActiveSpell_Config::set_allocated_spell_sound(::std::string* spell_sound) {
  if (spell_sound != NULL) {
    
  } else {
    
  }
  spell_sound_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), spell_sound);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.ActiveSpell_Config.spell_sound)
}

// string spell_trigger_sound = 36;
inline void ActiveSpell_Config::clear_spell_trigger_sound() {
  spell_trigger_sound_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ActiveSpell_Config::spell_trigger_sound() const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.spell_trigger_sound)
  return spell_trigger_sound_.GetNoArena();
}
inline void ActiveSpell_Config::set_spell_trigger_sound(const ::std::string& value) {
  
  spell_trigger_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.spell_trigger_sound)
}
#if LANG_CXX11
inline void ActiveSpell_Config::set_spell_trigger_sound(::std::string&& value) {
  
  spell_trigger_sound_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.ActiveSpell_Config.spell_trigger_sound)
}
#endif
inline void ActiveSpell_Config::set_spell_trigger_sound(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  spell_trigger_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.ActiveSpell_Config.spell_trigger_sound)
}
inline void ActiveSpell_Config::set_spell_trigger_sound(const char* value, size_t size) {
  
  spell_trigger_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.ActiveSpell_Config.spell_trigger_sound)
}
inline ::std::string* ActiveSpell_Config::mutable_spell_trigger_sound() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.ActiveSpell_Config.spell_trigger_sound)
  return spell_trigger_sound_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActiveSpell_Config::release_spell_trigger_sound() {
  // @@protoc_insertion_point(field_release:ConfigData.ActiveSpell_Config.spell_trigger_sound)
  
  return spell_trigger_sound_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActiveSpell_Config::set_allocated_spell_trigger_sound(::std::string* spell_trigger_sound) {
  if (spell_trigger_sound != NULL) {
    
  } else {
    
  }
  spell_trigger_sound_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), spell_trigger_sound);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.ActiveSpell_Config.spell_trigger_sound)
}

// string sfx_sound = 37;
inline void ActiveSpell_Config::clear_sfx_sound() {
  sfx_sound_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ActiveSpell_Config::sfx_sound() const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.sfx_sound)
  return sfx_sound_.GetNoArena();
}
inline void ActiveSpell_Config::set_sfx_sound(const ::std::string& value) {
  
  sfx_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.sfx_sound)
}
#if LANG_CXX11
inline void ActiveSpell_Config::set_sfx_sound(::std::string&& value) {
  
  sfx_sound_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.ActiveSpell_Config.sfx_sound)
}
#endif
inline void ActiveSpell_Config::set_sfx_sound(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sfx_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.ActiveSpell_Config.sfx_sound)
}
inline void ActiveSpell_Config::set_sfx_sound(const char* value, size_t size) {
  
  sfx_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.ActiveSpell_Config.sfx_sound)
}
inline ::std::string* ActiveSpell_Config::mutable_sfx_sound() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.ActiveSpell_Config.sfx_sound)
  return sfx_sound_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActiveSpell_Config::release_sfx_sound() {
  // @@protoc_insertion_point(field_release:ConfigData.ActiveSpell_Config.sfx_sound)
  
  return sfx_sound_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActiveSpell_Config::set_allocated_sfx_sound(::std::string* sfx_sound) {
  if (sfx_sound != NULL) {
    
  } else {
    
  }
  sfx_sound_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sfx_sound);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.ActiveSpell_Config.sfx_sound)
}

// string pre_condition_dataex = 38;
inline void ActiveSpell_Config::clear_pre_condition_dataex() {
  pre_condition_dataex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ActiveSpell_Config::pre_condition_dataex() const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.pre_condition_dataex)
  return pre_condition_dataex_.GetNoArena();
}
inline void ActiveSpell_Config::set_pre_condition_dataex(const ::std::string& value) {
  
  pre_condition_dataex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.pre_condition_dataex)
}
#if LANG_CXX11
inline void ActiveSpell_Config::set_pre_condition_dataex(::std::string&& value) {
  
  pre_condition_dataex_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.ActiveSpell_Config.pre_condition_dataex)
}
#endif
inline void ActiveSpell_Config::set_pre_condition_dataex(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pre_condition_dataex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.ActiveSpell_Config.pre_condition_dataex)
}
inline void ActiveSpell_Config::set_pre_condition_dataex(const char* value, size_t size) {
  
  pre_condition_dataex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.ActiveSpell_Config.pre_condition_dataex)
}
inline ::std::string* ActiveSpell_Config::mutable_pre_condition_dataex() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.ActiveSpell_Config.pre_condition_dataex)
  return pre_condition_dataex_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActiveSpell_Config::release_pre_condition_dataex() {
  // @@protoc_insertion_point(field_release:ConfigData.ActiveSpell_Config.pre_condition_dataex)
  
  return pre_condition_dataex_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActiveSpell_Config::set_allocated_pre_condition_dataex(::std::string* pre_condition_dataex) {
  if (pre_condition_dataex != NULL) {
    
  } else {
    
  }
  pre_condition_dataex_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pre_condition_dataex);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.ActiveSpell_Config.pre_condition_dataex)
}

// string pre_anim = 39;
inline void ActiveSpell_Config::clear_pre_anim() {
  pre_anim_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ActiveSpell_Config::pre_anim() const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.pre_anim)
  return pre_anim_.GetNoArena();
}
inline void ActiveSpell_Config::set_pre_anim(const ::std::string& value) {
  
  pre_anim_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.pre_anim)
}
#if LANG_CXX11
inline void ActiveSpell_Config::set_pre_anim(::std::string&& value) {
  
  pre_anim_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.ActiveSpell_Config.pre_anim)
}
#endif
inline void ActiveSpell_Config::set_pre_anim(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pre_anim_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.ActiveSpell_Config.pre_anim)
}
inline void ActiveSpell_Config::set_pre_anim(const char* value, size_t size) {
  
  pre_anim_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.ActiveSpell_Config.pre_anim)
}
inline ::std::string* ActiveSpell_Config::mutable_pre_anim() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.ActiveSpell_Config.pre_anim)
  return pre_anim_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActiveSpell_Config::release_pre_anim() {
  // @@protoc_insertion_point(field_release:ConfigData.ActiveSpell_Config.pre_anim)
  
  return pre_anim_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActiveSpell_Config::set_allocated_pre_anim(::std::string* pre_anim) {
  if (pre_anim != NULL) {
    
  } else {
    
  }
  pre_anim_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pre_anim);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.ActiveSpell_Config.pre_anim)
}

// string pre_anim_effect = 40;
inline void ActiveSpell_Config::clear_pre_anim_effect() {
  pre_anim_effect_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ActiveSpell_Config::pre_anim_effect() const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.pre_anim_effect)
  return pre_anim_effect_.GetNoArena();
}
inline void ActiveSpell_Config::set_pre_anim_effect(const ::std::string& value) {
  
  pre_anim_effect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.pre_anim_effect)
}
#if LANG_CXX11
inline void ActiveSpell_Config::set_pre_anim_effect(::std::string&& value) {
  
  pre_anim_effect_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.ActiveSpell_Config.pre_anim_effect)
}
#endif
inline void ActiveSpell_Config::set_pre_anim_effect(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pre_anim_effect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.ActiveSpell_Config.pre_anim_effect)
}
inline void ActiveSpell_Config::set_pre_anim_effect(const char* value, size_t size) {
  
  pre_anim_effect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.ActiveSpell_Config.pre_anim_effect)
}
inline ::std::string* ActiveSpell_Config::mutable_pre_anim_effect() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.ActiveSpell_Config.pre_anim_effect)
  return pre_anim_effect_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActiveSpell_Config::release_pre_anim_effect() {
  // @@protoc_insertion_point(field_release:ConfigData.ActiveSpell_Config.pre_anim_effect)
  
  return pre_anim_effect_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActiveSpell_Config::set_allocated_pre_anim_effect(::std::string* pre_anim_effect) {
  if (pre_anim_effect != NULL) {
    
  } else {
    
  }
  pre_anim_effect_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pre_anim_effect);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.ActiveSpell_Config.pre_anim_effect)
}

// string post_anim = 41;
inline void ActiveSpell_Config::clear_post_anim() {
  post_anim_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ActiveSpell_Config::post_anim() const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.post_anim)
  return post_anim_.GetNoArena();
}
inline void ActiveSpell_Config::set_post_anim(const ::std::string& value) {
  
  post_anim_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.post_anim)
}
#if LANG_CXX11
inline void ActiveSpell_Config::set_post_anim(::std::string&& value) {
  
  post_anim_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.ActiveSpell_Config.post_anim)
}
#endif
inline void ActiveSpell_Config::set_post_anim(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  post_anim_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.ActiveSpell_Config.post_anim)
}
inline void ActiveSpell_Config::set_post_anim(const char* value, size_t size) {
  
  post_anim_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.ActiveSpell_Config.post_anim)
}
inline ::std::string* ActiveSpell_Config::mutable_post_anim() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.ActiveSpell_Config.post_anim)
  return post_anim_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActiveSpell_Config::release_post_anim() {
  // @@protoc_insertion_point(field_release:ConfigData.ActiveSpell_Config.post_anim)
  
  return post_anim_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActiveSpell_Config::set_allocated_post_anim(::std::string* post_anim) {
  if (post_anim != NULL) {
    
  } else {
    
  }
  post_anim_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), post_anim);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.ActiveSpell_Config.post_anim)
}

// string post_anim_effect = 42;
inline void ActiveSpell_Config::clear_post_anim_effect() {
  post_anim_effect_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ActiveSpell_Config::post_anim_effect() const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.post_anim_effect)
  return post_anim_effect_.GetNoArena();
}
inline void ActiveSpell_Config::set_post_anim_effect(const ::std::string& value) {
  
  post_anim_effect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.post_anim_effect)
}
#if LANG_CXX11
inline void ActiveSpell_Config::set_post_anim_effect(::std::string&& value) {
  
  post_anim_effect_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.ActiveSpell_Config.post_anim_effect)
}
#endif
inline void ActiveSpell_Config::set_post_anim_effect(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  post_anim_effect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.ActiveSpell_Config.post_anim_effect)
}
inline void ActiveSpell_Config::set_post_anim_effect(const char* value, size_t size) {
  
  post_anim_effect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.ActiveSpell_Config.post_anim_effect)
}
inline ::std::string* ActiveSpell_Config::mutable_post_anim_effect() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.ActiveSpell_Config.post_anim_effect)
  return post_anim_effect_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActiveSpell_Config::release_post_anim_effect() {
  // @@protoc_insertion_point(field_release:ConfigData.ActiveSpell_Config.post_anim_effect)
  
  return post_anim_effect_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActiveSpell_Config::set_allocated_post_anim_effect(::std::string* post_anim_effect) {
  if (post_anim_effect != NULL) {
    
  } else {
    
  }
  post_anim_effect_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), post_anim_effect);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.ActiveSpell_Config.post_anim_effect)
}

// float public_cd = 43;
inline void ActiveSpell_Config::clear_public_cd() {
  public_cd_ = 0;
}
inline float ActiveSpell_Config::public_cd() const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.public_cd)
  return public_cd_;
}
inline void ActiveSpell_Config::set_public_cd(float value) {
  
  public_cd_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.public_cd)
}

// float range_eff_post_time = 44;
inline void ActiveSpell_Config::clear_range_eff_post_time() {
  range_eff_post_time_ = 0;
}
inline float ActiveSpell_Config::range_eff_post_time() const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.range_eff_post_time)
  return range_eff_post_time_;
}
inline void ActiveSpell_Config::set_range_eff_post_time(float value) {
  
  range_eff_post_time_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.range_eff_post_time)
}

// string targetmax_growth = 45;
inline void ActiveSpell_Config::clear_targetmax_growth() {
  targetmax_growth_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ActiveSpell_Config::targetmax_growth() const {
  // @@protoc_insertion_point(field_get:ConfigData.ActiveSpell_Config.targetmax_growth)
  return targetmax_growth_.GetNoArena();
}
inline void ActiveSpell_Config::set_targetmax_growth(const ::std::string& value) {
  
  targetmax_growth_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.ActiveSpell_Config.targetmax_growth)
}
#if LANG_CXX11
inline void ActiveSpell_Config::set_targetmax_growth(::std::string&& value) {
  
  targetmax_growth_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.ActiveSpell_Config.targetmax_growth)
}
#endif
inline void ActiveSpell_Config::set_targetmax_growth(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  targetmax_growth_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.ActiveSpell_Config.targetmax_growth)
}
inline void ActiveSpell_Config::set_targetmax_growth(const char* value, size_t size) {
  
  targetmax_growth_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.ActiveSpell_Config.targetmax_growth)
}
inline ::std::string* ActiveSpell_Config::mutable_targetmax_growth() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.ActiveSpell_Config.targetmax_growth)
  return targetmax_growth_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActiveSpell_Config::release_targetmax_growth() {
  // @@protoc_insertion_point(field_release:ConfigData.ActiveSpell_Config.targetmax_growth)
  
  return targetmax_growth_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActiveSpell_Config::set_allocated_targetmax_growth(::std::string* targetmax_growth) {
  if (targetmax_growth != NULL) {
    
  } else {
    
  }
  targetmax_growth_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), targetmax_growth);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.ActiveSpell_Config.targetmax_growth)
}

// -------------------------------------------------------------------

// SkillData_Config

// uint32 id = 1;
inline void SkillData_Config::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 SkillData_Config::id() const {
  // @@protoc_insertion_point(field_get:ConfigData.SkillData_Config.id)
  return id_;
}
inline void SkillData_Config::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.SkillData_Config.id)
}

// string name_global_id = 2;
inline void SkillData_Config::clear_name_global_id() {
  name_global_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SkillData_Config::name_global_id() const {
  // @@protoc_insertion_point(field_get:ConfigData.SkillData_Config.name_global_id)
  return name_global_id_.GetNoArena();
}
inline void SkillData_Config::set_name_global_id(const ::std::string& value) {
  
  name_global_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.SkillData_Config.name_global_id)
}
#if LANG_CXX11
inline void SkillData_Config::set_name_global_id(::std::string&& value) {
  
  name_global_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.SkillData_Config.name_global_id)
}
#endif
inline void SkillData_Config::set_name_global_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_global_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.SkillData_Config.name_global_id)
}
inline void SkillData_Config::set_name_global_id(const char* value, size_t size) {
  
  name_global_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.SkillData_Config.name_global_id)
}
inline ::std::string* SkillData_Config::mutable_name_global_id() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.SkillData_Config.name_global_id)
  return name_global_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SkillData_Config::release_name_global_id() {
  // @@protoc_insertion_point(field_release:ConfigData.SkillData_Config.name_global_id)
  
  return name_global_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SkillData_Config::set_allocated_name_global_id(::std::string* name_global_id) {
  if (name_global_id != NULL) {
    
  } else {
    
  }
  name_global_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name_global_id);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.SkillData_Config.name_global_id)
}

// string des_global_id = 3;
inline void SkillData_Config::clear_des_global_id() {
  des_global_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SkillData_Config::des_global_id() const {
  // @@protoc_insertion_point(field_get:ConfigData.SkillData_Config.des_global_id)
  return des_global_id_.GetNoArena();
}
inline void SkillData_Config::set_des_global_id(const ::std::string& value) {
  
  des_global_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.SkillData_Config.des_global_id)
}
#if LANG_CXX11
inline void SkillData_Config::set_des_global_id(::std::string&& value) {
  
  des_global_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.SkillData_Config.des_global_id)
}
#endif
inline void SkillData_Config::set_des_global_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  des_global_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.SkillData_Config.des_global_id)
}
inline void SkillData_Config::set_des_global_id(const char* value, size_t size) {
  
  des_global_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.SkillData_Config.des_global_id)
}
inline ::std::string* SkillData_Config::mutable_des_global_id() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.SkillData_Config.des_global_id)
  return des_global_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SkillData_Config::release_des_global_id() {
  // @@protoc_insertion_point(field_release:ConfigData.SkillData_Config.des_global_id)
  
  return des_global_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SkillData_Config::set_allocated_des_global_id(::std::string* des_global_id) {
  if (des_global_id != NULL) {
    
  } else {
    
  }
  des_global_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), des_global_id);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.SkillData_Config.des_global_id)
}

// string icon = 4;
inline void SkillData_Config::clear_icon() {
  icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SkillData_Config::icon() const {
  // @@protoc_insertion_point(field_get:ConfigData.SkillData_Config.icon)
  return icon_.GetNoArena();
}
inline void SkillData_Config::set_icon(const ::std::string& value) {
  
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.SkillData_Config.icon)
}
#if LANG_CXX11
inline void SkillData_Config::set_icon(::std::string&& value) {
  
  icon_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.SkillData_Config.icon)
}
#endif
inline void SkillData_Config::set_icon(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.SkillData_Config.icon)
}
inline void SkillData_Config::set_icon(const char* value, size_t size) {
  
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.SkillData_Config.icon)
}
inline ::std::string* SkillData_Config::mutable_icon() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.SkillData_Config.icon)
  return icon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SkillData_Config::release_icon() {
  // @@protoc_insertion_point(field_release:ConfigData.SkillData_Config.icon)
  
  return icon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SkillData_Config::set_allocated_icon(::std::string* icon) {
  if (icon != NULL) {
    
  } else {
    
  }
  icon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), icon);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.SkillData_Config.icon)
}

// uint32 active_id = 5;
inline void SkillData_Config::clear_active_id() {
  active_id_ = 0u;
}
inline ::google::protobuf::uint32 SkillData_Config::active_id() const {
  // @@protoc_insertion_point(field_get:ConfigData.SkillData_Config.active_id)
  return active_id_;
}
inline void SkillData_Config::set_active_id(::google::protobuf::uint32 value) {
  
  active_id_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.SkillData_Config.active_id)
}

// uint32 passive_id = 6;
inline void SkillData_Config::clear_passive_id() {
  passive_id_ = 0u;
}
inline ::google::protobuf::uint32 SkillData_Config::passive_id() const {
  // @@protoc_insertion_point(field_get:ConfigData.SkillData_Config.passive_id)
  return passive_id_;
}
inline void SkillData_Config::set_passive_id(::google::protobuf::uint32 value) {
  
  passive_id_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.SkillData_Config.passive_id)
}

// int32 level_max = 7;
inline void SkillData_Config::clear_level_max() {
  level_max_ = 0;
}
inline ::google::protobuf::int32 SkillData_Config::level_max() const {
  // @@protoc_insertion_point(field_get:ConfigData.SkillData_Config.level_max)
  return level_max_;
}
inline void SkillData_Config::set_level_max(::google::protobuf::int32 value) {
  
  level_max_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.SkillData_Config.level_max)
}

// float strength_rate1 = 8;
inline void SkillData_Config::clear_strength_rate1() {
  strength_rate1_ = 0;
}
inline float SkillData_Config::strength_rate1() const {
  // @@protoc_insertion_point(field_get:ConfigData.SkillData_Config.strength_rate1)
  return strength_rate1_;
}
inline void SkillData_Config::set_strength_rate1(float value) {
  
  strength_rate1_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.SkillData_Config.strength_rate1)
}

// float strength_rate2 = 9;
inline void SkillData_Config::clear_strength_rate2() {
  strength_rate2_ = 0;
}
inline float SkillData_Config::strength_rate2() const {
  // @@protoc_insertion_point(field_get:ConfigData.SkillData_Config.strength_rate2)
  return strength_rate2_;
}
inline void SkillData_Config::set_strength_rate2(float value) {
  
  strength_rate2_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.SkillData_Config.strength_rate2)
}

// float strength_rate3 = 10;
inline void SkillData_Config::clear_strength_rate3() {
  strength_rate3_ = 0;
}
inline float SkillData_Config::strength_rate3() const {
  // @@protoc_insertion_point(field_get:ConfigData.SkillData_Config.strength_rate3)
  return strength_rate3_;
}
inline void SkillData_Config::set_strength_rate3(float value) {
  
  strength_rate3_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.SkillData_Config.strength_rate3)
}

// int32 debug_level = 11;
inline void SkillData_Config::clear_debug_level() {
  debug_level_ = 0;
}
inline ::google::protobuf::int32 SkillData_Config::debug_level() const {
  // @@protoc_insertion_point(field_get:ConfigData.SkillData_Config.debug_level)
  return debug_level_;
}
inline void SkillData_Config::set_debug_level(::google::protobuf::int32 value) {
  
  debug_level_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.SkillData_Config.debug_level)
}

// int32 active_level = 12;
inline void SkillData_Config::clear_active_level() {
  active_level_ = 0;
}
inline ::google::protobuf::int32 SkillData_Config::active_level() const {
  // @@protoc_insertion_point(field_get:ConfigData.SkillData_Config.active_level)
  return active_level_;
}
inline void SkillData_Config::set_active_level(::google::protobuf::int32 value) {
  
  active_level_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.SkillData_Config.active_level)
}

// -------------------------------------------------------------------

// DataChangeFunc_Config

// uint32 id = 1;
inline void DataChangeFunc_Config::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 DataChangeFunc_Config::id() const {
  // @@protoc_insertion_point(field_get:ConfigData.DataChangeFunc_Config.id)
  return id_;
}
inline void DataChangeFunc_Config::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.DataChangeFunc_Config.id)
}

// string type = 2;
inline void DataChangeFunc_Config::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DataChangeFunc_Config::type() const {
  // @@protoc_insertion_point(field_get:ConfigData.DataChangeFunc_Config.type)
  return type_.GetNoArena();
}
inline void DataChangeFunc_Config::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.DataChangeFunc_Config.type)
}
#if LANG_CXX11
inline void DataChangeFunc_Config::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.DataChangeFunc_Config.type)
}
#endif
inline void DataChangeFunc_Config::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.DataChangeFunc_Config.type)
}
inline void DataChangeFunc_Config::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.DataChangeFunc_Config.type)
}
inline ::std::string* DataChangeFunc_Config::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.DataChangeFunc_Config.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DataChangeFunc_Config::release_type() {
  // @@protoc_insertion_point(field_release:ConfigData.DataChangeFunc_Config.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataChangeFunc_Config::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.DataChangeFunc_Config.type)
}

// float k1 = 3;
inline void DataChangeFunc_Config::clear_k1() {
  k1_ = 0;
}
inline float DataChangeFunc_Config::k1() const {
  // @@protoc_insertion_point(field_get:ConfigData.DataChangeFunc_Config.k1)
  return k1_;
}
inline void DataChangeFunc_Config::set_k1(float value) {
  
  k1_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.DataChangeFunc_Config.k1)
}

// float k2 = 4;
inline void DataChangeFunc_Config::clear_k2() {
  k2_ = 0;
}
inline float DataChangeFunc_Config::k2() const {
  // @@protoc_insertion_point(field_get:ConfigData.DataChangeFunc_Config.k2)
  return k2_;
}
inline void DataChangeFunc_Config::set_k2(float value) {
  
  k2_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.DataChangeFunc_Config.k2)
}

// float k3 = 5;
inline void DataChangeFunc_Config::clear_k3() {
  k3_ = 0;
}
inline float DataChangeFunc_Config::k3() const {
  // @@protoc_insertion_point(field_get:ConfigData.DataChangeFunc_Config.k3)
  return k3_;
}
inline void DataChangeFunc_Config::set_k3(float value) {
  
  k3_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.DataChangeFunc_Config.k3)
}

// uint32 data_type = 6;
inline void DataChangeFunc_Config::clear_data_type() {
  data_type_ = 0u;
}
inline ::google::protobuf::uint32 DataChangeFunc_Config::data_type() const {
  // @@protoc_insertion_point(field_get:ConfigData.DataChangeFunc_Config.data_type)
  return data_type_;
}
inline void DataChangeFunc_Config::set_data_type(::google::protobuf::uint32 value) {
  
  data_type_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.DataChangeFunc_Config.data_type)
}

// string dataex = 7;
inline void DataChangeFunc_Config::clear_dataex() {
  dataex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DataChangeFunc_Config::dataex() const {
  // @@protoc_insertion_point(field_get:ConfigData.DataChangeFunc_Config.dataex)
  return dataex_.GetNoArena();
}
inline void DataChangeFunc_Config::set_dataex(const ::std::string& value) {
  
  dataex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.DataChangeFunc_Config.dataex)
}
#if LANG_CXX11
inline void DataChangeFunc_Config::set_dataex(::std::string&& value) {
  
  dataex_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.DataChangeFunc_Config.dataex)
}
#endif
inline void DataChangeFunc_Config::set_dataex(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dataex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.DataChangeFunc_Config.dataex)
}
inline void DataChangeFunc_Config::set_dataex(const char* value, size_t size) {
  
  dataex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.DataChangeFunc_Config.dataex)
}
inline ::std::string* DataChangeFunc_Config::mutable_dataex() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.DataChangeFunc_Config.dataex)
  return dataex_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DataChangeFunc_Config::release_dataex() {
  // @@protoc_insertion_point(field_release:ConfigData.DataChangeFunc_Config.dataex)
  
  return dataex_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataChangeFunc_Config::set_allocated_dataex(::std::string* dataex) {
  if (dataex != NULL) {
    
  } else {
    
  }
  dataex_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dataex);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.DataChangeFunc_Config.dataex)
}

// string dataex2 = 8;
inline void DataChangeFunc_Config::clear_dataex2() {
  dataex2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DataChangeFunc_Config::dataex2() const {
  // @@protoc_insertion_point(field_get:ConfigData.DataChangeFunc_Config.dataex2)
  return dataex2_.GetNoArena();
}
inline void DataChangeFunc_Config::set_dataex2(const ::std::string& value) {
  
  dataex2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.DataChangeFunc_Config.dataex2)
}
#if LANG_CXX11
inline void DataChangeFunc_Config::set_dataex2(::std::string&& value) {
  
  dataex2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.DataChangeFunc_Config.dataex2)
}
#endif
inline void DataChangeFunc_Config::set_dataex2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dataex2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.DataChangeFunc_Config.dataex2)
}
inline void DataChangeFunc_Config::set_dataex2(const char* value, size_t size) {
  
  dataex2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.DataChangeFunc_Config.dataex2)
}
inline ::std::string* DataChangeFunc_Config::mutable_dataex2() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.DataChangeFunc_Config.dataex2)
  return dataex2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DataChangeFunc_Config::release_dataex2() {
  // @@protoc_insertion_point(field_release:ConfigData.DataChangeFunc_Config.dataex2)
  
  return dataex2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataChangeFunc_Config::set_allocated_dataex2(::std::string* dataex2) {
  if (dataex2 != NULL) {
    
  } else {
    
  }
  dataex2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dataex2);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.DataChangeFunc_Config.dataex2)
}

// string data_start_eff = 9;
inline void DataChangeFunc_Config::clear_data_start_eff() {
  data_start_eff_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DataChangeFunc_Config::data_start_eff() const {
  // @@protoc_insertion_point(field_get:ConfigData.DataChangeFunc_Config.data_start_eff)
  return data_start_eff_.GetNoArena();
}
inline void DataChangeFunc_Config::set_data_start_eff(const ::std::string& value) {
  
  data_start_eff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.DataChangeFunc_Config.data_start_eff)
}
#if LANG_CXX11
inline void DataChangeFunc_Config::set_data_start_eff(::std::string&& value) {
  
  data_start_eff_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.DataChangeFunc_Config.data_start_eff)
}
#endif
inline void DataChangeFunc_Config::set_data_start_eff(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_start_eff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.DataChangeFunc_Config.data_start_eff)
}
inline void DataChangeFunc_Config::set_data_start_eff(const char* value, size_t size) {
  
  data_start_eff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.DataChangeFunc_Config.data_start_eff)
}
inline ::std::string* DataChangeFunc_Config::mutable_data_start_eff() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.DataChangeFunc_Config.data_start_eff)
  return data_start_eff_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DataChangeFunc_Config::release_data_start_eff() {
  // @@protoc_insertion_point(field_release:ConfigData.DataChangeFunc_Config.data_start_eff)
  
  return data_start_eff_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataChangeFunc_Config::set_allocated_data_start_eff(::std::string* data_start_eff) {
  if (data_start_eff != NULL) {
    
  } else {
    
  }
  data_start_eff_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_start_eff);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.DataChangeFunc_Config.data_start_eff)
}

// string data_eff = 10;
inline void DataChangeFunc_Config::clear_data_eff() {
  data_eff_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DataChangeFunc_Config::data_eff() const {
  // @@protoc_insertion_point(field_get:ConfigData.DataChangeFunc_Config.data_eff)
  return data_eff_.GetNoArena();
}
inline void DataChangeFunc_Config::set_data_eff(const ::std::string& value) {
  
  data_eff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.DataChangeFunc_Config.data_eff)
}
#if LANG_CXX11
inline void DataChangeFunc_Config::set_data_eff(::std::string&& value) {
  
  data_eff_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.DataChangeFunc_Config.data_eff)
}
#endif
inline void DataChangeFunc_Config::set_data_eff(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_eff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.DataChangeFunc_Config.data_eff)
}
inline void DataChangeFunc_Config::set_data_eff(const char* value, size_t size) {
  
  data_eff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.DataChangeFunc_Config.data_eff)
}
inline ::std::string* DataChangeFunc_Config::mutable_data_eff() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.DataChangeFunc_Config.data_eff)
  return data_eff_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DataChangeFunc_Config::release_data_eff() {
  // @@protoc_insertion_point(field_release:ConfigData.DataChangeFunc_Config.data_eff)
  
  return data_eff_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataChangeFunc_Config::set_allocated_data_eff(::std::string* data_eff) {
  if (data_eff != NULL) {
    
  } else {
    
  }
  data_eff_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_eff);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.DataChangeFunc_Config.data_eff)
}

// string data_end_eff = 11;
inline void DataChangeFunc_Config::clear_data_end_eff() {
  data_end_eff_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DataChangeFunc_Config::data_end_eff() const {
  // @@protoc_insertion_point(field_get:ConfigData.DataChangeFunc_Config.data_end_eff)
  return data_end_eff_.GetNoArena();
}
inline void DataChangeFunc_Config::set_data_end_eff(const ::std::string& value) {
  
  data_end_eff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.DataChangeFunc_Config.data_end_eff)
}
#if LANG_CXX11
inline void DataChangeFunc_Config::set_data_end_eff(::std::string&& value) {
  
  data_end_eff_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.DataChangeFunc_Config.data_end_eff)
}
#endif
inline void DataChangeFunc_Config::set_data_end_eff(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_end_eff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.DataChangeFunc_Config.data_end_eff)
}
inline void DataChangeFunc_Config::set_data_end_eff(const char* value, size_t size) {
  
  data_end_eff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.DataChangeFunc_Config.data_end_eff)
}
inline ::std::string* DataChangeFunc_Config::mutable_data_end_eff() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.DataChangeFunc_Config.data_end_eff)
  return data_end_eff_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DataChangeFunc_Config::release_data_end_eff() {
  // @@protoc_insertion_point(field_release:ConfigData.DataChangeFunc_Config.data_end_eff)
  
  return data_end_eff_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataChangeFunc_Config::set_allocated_data_end_eff(::std::string* data_end_eff) {
  if (data_end_eff != NULL) {
    
  } else {
    
  }
  data_end_eff_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_end_eff);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.DataChangeFunc_Config.data_end_eff)
}

// float data_eff_prob = 12;
inline void DataChangeFunc_Config::clear_data_eff_prob() {
  data_eff_prob_ = 0;
}
inline float DataChangeFunc_Config::data_eff_prob() const {
  // @@protoc_insertion_point(field_get:ConfigData.DataChangeFunc_Config.data_eff_prob)
  return data_eff_prob_;
}
inline void DataChangeFunc_Config::set_data_eff_prob(float value) {
  
  data_eff_prob_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.DataChangeFunc_Config.data_eff_prob)
}

// float data_time = 13;
inline void DataChangeFunc_Config::clear_data_time() {
  data_time_ = 0;
}
inline float DataChangeFunc_Config::data_time() const {
  // @@protoc_insertion_point(field_get:ConfigData.DataChangeFunc_Config.data_time)
  return data_time_;
}
inline void DataChangeFunc_Config::set_data_time(float value) {
  
  data_time_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.DataChangeFunc_Config.data_time)
}

// string data_hit_fly = 14;
inline void DataChangeFunc_Config::clear_data_hit_fly() {
  data_hit_fly_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DataChangeFunc_Config::data_hit_fly() const {
  // @@protoc_insertion_point(field_get:ConfigData.DataChangeFunc_Config.data_hit_fly)
  return data_hit_fly_.GetNoArena();
}
inline void DataChangeFunc_Config::set_data_hit_fly(const ::std::string& value) {
  
  data_hit_fly_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.DataChangeFunc_Config.data_hit_fly)
}
#if LANG_CXX11
inline void DataChangeFunc_Config::set_data_hit_fly(::std::string&& value) {
  
  data_hit_fly_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.DataChangeFunc_Config.data_hit_fly)
}
#endif
inline void DataChangeFunc_Config::set_data_hit_fly(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_hit_fly_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.DataChangeFunc_Config.data_hit_fly)
}
inline void DataChangeFunc_Config::set_data_hit_fly(const char* value, size_t size) {
  
  data_hit_fly_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.DataChangeFunc_Config.data_hit_fly)
}
inline ::std::string* DataChangeFunc_Config::mutable_data_hit_fly() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.DataChangeFunc_Config.data_hit_fly)
  return data_hit_fly_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DataChangeFunc_Config::release_data_hit_fly() {
  // @@protoc_insertion_point(field_release:ConfigData.DataChangeFunc_Config.data_hit_fly)
  
  return data_hit_fly_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataChangeFunc_Config::set_allocated_data_hit_fly(::std::string* data_hit_fly) {
  if (data_hit_fly != NULL) {
    
  } else {
    
  }
  data_hit_fly_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_hit_fly);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.DataChangeFunc_Config.data_hit_fly)
}

// int32 buff_nature = 15;
inline void DataChangeFunc_Config::clear_buff_nature() {
  buff_nature_ = 0;
}
inline ::google::protobuf::int32 DataChangeFunc_Config::buff_nature() const {
  // @@protoc_insertion_point(field_get:ConfigData.DataChangeFunc_Config.buff_nature)
  return buff_nature_;
}
inline void DataChangeFunc_Config::set_buff_nature(::google::protobuf::int32 value) {
  
  buff_nature_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.DataChangeFunc_Config.buff_nature)
}

// string icon = 16;
inline void DataChangeFunc_Config::clear_icon() {
  icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DataChangeFunc_Config::icon() const {
  // @@protoc_insertion_point(field_get:ConfigData.DataChangeFunc_Config.icon)
  return icon_.GetNoArena();
}
inline void DataChangeFunc_Config::set_icon(const ::std::string& value) {
  
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.DataChangeFunc_Config.icon)
}
#if LANG_CXX11
inline void DataChangeFunc_Config::set_icon(::std::string&& value) {
  
  icon_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.DataChangeFunc_Config.icon)
}
#endif
inline void DataChangeFunc_Config::set_icon(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.DataChangeFunc_Config.icon)
}
inline void DataChangeFunc_Config::set_icon(const char* value, size_t size) {
  
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.DataChangeFunc_Config.icon)
}
inline ::std::string* DataChangeFunc_Config::mutable_icon() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.DataChangeFunc_Config.icon)
  return icon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DataChangeFunc_Config::release_icon() {
  // @@protoc_insertion_point(field_release:ConfigData.DataChangeFunc_Config.icon)
  
  return icon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataChangeFunc_Config::set_allocated_icon(::std::string* icon) {
  if (icon != NULL) {
    
  } else {
    
  }
  icon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), icon);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.DataChangeFunc_Config.icon)
}

// int32 superposition = 17;
inline void DataChangeFunc_Config::clear_superposition() {
  superposition_ = 0;
}
inline ::google::protobuf::int32 DataChangeFunc_Config::superposition() const {
  // @@protoc_insertion_point(field_get:ConfigData.DataChangeFunc_Config.superposition)
  return superposition_;
}
inline void DataChangeFunc_Config::set_superposition(::google::protobuf::int32 value) {
  
  superposition_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.DataChangeFunc_Config.superposition)
}

// string icon_position = 18;
inline void DataChangeFunc_Config::clear_icon_position() {
  icon_position_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DataChangeFunc_Config::icon_position() const {
  // @@protoc_insertion_point(field_get:ConfigData.DataChangeFunc_Config.icon_position)
  return icon_position_.GetNoArena();
}
inline void DataChangeFunc_Config::set_icon_position(const ::std::string& value) {
  
  icon_position_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.DataChangeFunc_Config.icon_position)
}
#if LANG_CXX11
inline void DataChangeFunc_Config::set_icon_position(::std::string&& value) {
  
  icon_position_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.DataChangeFunc_Config.icon_position)
}
#endif
inline void DataChangeFunc_Config::set_icon_position(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  icon_position_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.DataChangeFunc_Config.icon_position)
}
inline void DataChangeFunc_Config::set_icon_position(const char* value, size_t size) {
  
  icon_position_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.DataChangeFunc_Config.icon_position)
}
inline ::std::string* DataChangeFunc_Config::mutable_icon_position() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.DataChangeFunc_Config.icon_position)
  return icon_position_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DataChangeFunc_Config::release_icon_position() {
  // @@protoc_insertion_point(field_release:ConfigData.DataChangeFunc_Config.icon_position)
  
  return icon_position_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataChangeFunc_Config::set_allocated_icon_position(::std::string* icon_position) {
  if (icon_position != NULL) {
    
  } else {
    
  }
  icon_position_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), icon_position);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.DataChangeFunc_Config.icon_position)
}

// string mark = 19;
inline void DataChangeFunc_Config::clear_mark() {
  mark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DataChangeFunc_Config::mark() const {
  // @@protoc_insertion_point(field_get:ConfigData.DataChangeFunc_Config.mark)
  return mark_.GetNoArena();
}
inline void DataChangeFunc_Config::set_mark(const ::std::string& value) {
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.DataChangeFunc_Config.mark)
}
#if LANG_CXX11
inline void DataChangeFunc_Config::set_mark(::std::string&& value) {
  
  mark_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.DataChangeFunc_Config.mark)
}
#endif
inline void DataChangeFunc_Config::set_mark(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.DataChangeFunc_Config.mark)
}
inline void DataChangeFunc_Config::set_mark(const char* value, size_t size) {
  
  mark_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.DataChangeFunc_Config.mark)
}
inline ::std::string* DataChangeFunc_Config::mutable_mark() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.DataChangeFunc_Config.mark)
  return mark_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DataChangeFunc_Config::release_mark() {
  // @@protoc_insertion_point(field_release:ConfigData.DataChangeFunc_Config.mark)
  
  return mark_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataChangeFunc_Config::set_allocated_mark(::std::string* mark) {
  if (mark != NULL) {
    
  } else {
    
  }
  mark_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mark);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.DataChangeFunc_Config.mark)
}

// int32 mark_affected_rate = 20;
inline void DataChangeFunc_Config::clear_mark_affected_rate() {
  mark_affected_rate_ = 0;
}
inline ::google::protobuf::int32 DataChangeFunc_Config::mark_affected_rate() const {
  // @@protoc_insertion_point(field_get:ConfigData.DataChangeFunc_Config.mark_affected_rate)
  return mark_affected_rate_;
}
inline void DataChangeFunc_Config::set_mark_affected_rate(::google::protobuf::int32 value) {
  
  mark_affected_rate_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.DataChangeFunc_Config.mark_affected_rate)
}

// string growth_prop = 21;
inline void DataChangeFunc_Config::clear_growth_prop() {
  growth_prop_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DataChangeFunc_Config::growth_prop() const {
  // @@protoc_insertion_point(field_get:ConfigData.DataChangeFunc_Config.growth_prop)
  return growth_prop_.GetNoArena();
}
inline void DataChangeFunc_Config::set_growth_prop(const ::std::string& value) {
  
  growth_prop_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.DataChangeFunc_Config.growth_prop)
}
#if LANG_CXX11
inline void DataChangeFunc_Config::set_growth_prop(::std::string&& value) {
  
  growth_prop_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.DataChangeFunc_Config.growth_prop)
}
#endif
inline void DataChangeFunc_Config::set_growth_prop(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  growth_prop_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.DataChangeFunc_Config.growth_prop)
}
inline void DataChangeFunc_Config::set_growth_prop(const char* value, size_t size) {
  
  growth_prop_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.DataChangeFunc_Config.growth_prop)
}
inline ::std::string* DataChangeFunc_Config::mutable_growth_prop() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.DataChangeFunc_Config.growth_prop)
  return growth_prop_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DataChangeFunc_Config::release_growth_prop() {
  // @@protoc_insertion_point(field_release:ConfigData.DataChangeFunc_Config.growth_prop)
  
  return growth_prop_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataChangeFunc_Config::set_allocated_growth_prop(::std::string* growth_prop) {
  if (growth_prop != NULL) {
    
  } else {
    
  }
  growth_prop_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), growth_prop);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.DataChangeFunc_Config.growth_prop)
}

// -------------------------------------------------------------------

// PassiveSpell_Config

// uint32 id = 1;
inline void PassiveSpell_Config::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 PassiveSpell_Config::id() const {
  // @@protoc_insertion_point(field_get:ConfigData.PassiveSpell_Config.id)
  return id_;
}
inline void PassiveSpell_Config::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.PassiveSpell_Config.id)
}

// string active_condition = 2;
inline void PassiveSpell_Config::clear_active_condition() {
  active_condition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PassiveSpell_Config::active_condition() const {
  // @@protoc_insertion_point(field_get:ConfigData.PassiveSpell_Config.active_condition)
  return active_condition_.GetNoArena();
}
inline void PassiveSpell_Config::set_active_condition(const ::std::string& value) {
  
  active_condition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.PassiveSpell_Config.active_condition)
}
#if LANG_CXX11
inline void PassiveSpell_Config::set_active_condition(::std::string&& value) {
  
  active_condition_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.PassiveSpell_Config.active_condition)
}
#endif
inline void PassiveSpell_Config::set_active_condition(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  active_condition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.PassiveSpell_Config.active_condition)
}
inline void PassiveSpell_Config::set_active_condition(const char* value, size_t size) {
  
  active_condition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.PassiveSpell_Config.active_condition)
}
inline ::std::string* PassiveSpell_Config::mutable_active_condition() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.PassiveSpell_Config.active_condition)
  return active_condition_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PassiveSpell_Config::release_active_condition() {
  // @@protoc_insertion_point(field_release:ConfigData.PassiveSpell_Config.active_condition)
  
  return active_condition_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PassiveSpell_Config::set_allocated_active_condition(::std::string* active_condition) {
  if (active_condition != NULL) {
    
  } else {
    
  }
  active_condition_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), active_condition);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.PassiveSpell_Config.active_condition)
}

// float active_time = 3;
inline void PassiveSpell_Config::clear_active_time() {
  active_time_ = 0;
}
inline float PassiveSpell_Config::active_time() const {
  // @@protoc_insertion_point(field_get:ConfigData.PassiveSpell_Config.active_time)
  return active_time_;
}
inline void PassiveSpell_Config::set_active_time(float value) {
  
  active_time_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.PassiveSpell_Config.active_time)
}

// string trigger_condition = 4;
inline void PassiveSpell_Config::clear_trigger_condition() {
  trigger_condition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PassiveSpell_Config::trigger_condition() const {
  // @@protoc_insertion_point(field_get:ConfigData.PassiveSpell_Config.trigger_condition)
  return trigger_condition_.GetNoArena();
}
inline void PassiveSpell_Config::set_trigger_condition(const ::std::string& value) {
  
  trigger_condition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.PassiveSpell_Config.trigger_condition)
}
#if LANG_CXX11
inline void PassiveSpell_Config::set_trigger_condition(::std::string&& value) {
  
  trigger_condition_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.PassiveSpell_Config.trigger_condition)
}
#endif
inline void PassiveSpell_Config::set_trigger_condition(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  trigger_condition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.PassiveSpell_Config.trigger_condition)
}
inline void PassiveSpell_Config::set_trigger_condition(const char* value, size_t size) {
  
  trigger_condition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.PassiveSpell_Config.trigger_condition)
}
inline ::std::string* PassiveSpell_Config::mutable_trigger_condition() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.PassiveSpell_Config.trigger_condition)
  return trigger_condition_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PassiveSpell_Config::release_trigger_condition() {
  // @@protoc_insertion_point(field_release:ConfigData.PassiveSpell_Config.trigger_condition)
  
  return trigger_condition_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PassiveSpell_Config::set_allocated_trigger_condition(::std::string* trigger_condition) {
  if (trigger_condition != NULL) {
    
  } else {
    
  }
  trigger_condition_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trigger_condition);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.PassiveSpell_Config.trigger_condition)
}

// string trigger_condition_param = 5;
inline void PassiveSpell_Config::clear_trigger_condition_param() {
  trigger_condition_param_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PassiveSpell_Config::trigger_condition_param() const {
  // @@protoc_insertion_point(field_get:ConfigData.PassiveSpell_Config.trigger_condition_param)
  return trigger_condition_param_.GetNoArena();
}
inline void PassiveSpell_Config::set_trigger_condition_param(const ::std::string& value) {
  
  trigger_condition_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.PassiveSpell_Config.trigger_condition_param)
}
#if LANG_CXX11
inline void PassiveSpell_Config::set_trigger_condition_param(::std::string&& value) {
  
  trigger_condition_param_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.PassiveSpell_Config.trigger_condition_param)
}
#endif
inline void PassiveSpell_Config::set_trigger_condition_param(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  trigger_condition_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.PassiveSpell_Config.trigger_condition_param)
}
inline void PassiveSpell_Config::set_trigger_condition_param(const char* value, size_t size) {
  
  trigger_condition_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.PassiveSpell_Config.trigger_condition_param)
}
inline ::std::string* PassiveSpell_Config::mutable_trigger_condition_param() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.PassiveSpell_Config.trigger_condition_param)
  return trigger_condition_param_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PassiveSpell_Config::release_trigger_condition_param() {
  // @@protoc_insertion_point(field_release:ConfigData.PassiveSpell_Config.trigger_condition_param)
  
  return trigger_condition_param_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PassiveSpell_Config::set_allocated_trigger_condition_param(::std::string* trigger_condition_param) {
  if (trigger_condition_param != NULL) {
    
  } else {
    
  }
  trigger_condition_param_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trigger_condition_param);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.PassiveSpell_Config.trigger_condition_param)
}

// float trigger_probability = 6;
inline void PassiveSpell_Config::clear_trigger_probability() {
  trigger_probability_ = 0;
}
inline float PassiveSpell_Config::trigger_probability() const {
  // @@protoc_insertion_point(field_get:ConfigData.PassiveSpell_Config.trigger_probability)
  return trigger_probability_;
}
inline void PassiveSpell_Config::set_trigger_probability(float value) {
  
  trigger_probability_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.PassiveSpell_Config.trigger_probability)
}

// int32 trigger_cd = 7;
inline void PassiveSpell_Config::clear_trigger_cd() {
  trigger_cd_ = 0;
}
inline ::google::protobuf::int32 PassiveSpell_Config::trigger_cd() const {
  // @@protoc_insertion_point(field_get:ConfigData.PassiveSpell_Config.trigger_cd)
  return trigger_cd_;
}
inline void PassiveSpell_Config::set_trigger_cd(::google::protobuf::int32 value) {
  
  trigger_cd_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.PassiveSpell_Config.trigger_cd)
}

// string command_target = 8;
inline void PassiveSpell_Config::clear_command_target() {
  command_target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PassiveSpell_Config::command_target() const {
  // @@protoc_insertion_point(field_get:ConfigData.PassiveSpell_Config.command_target)
  return command_target_.GetNoArena();
}
inline void PassiveSpell_Config::set_command_target(const ::std::string& value) {
  
  command_target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.PassiveSpell_Config.command_target)
}
#if LANG_CXX11
inline void PassiveSpell_Config::set_command_target(::std::string&& value) {
  
  command_target_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.PassiveSpell_Config.command_target)
}
#endif
inline void PassiveSpell_Config::set_command_target(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  command_target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.PassiveSpell_Config.command_target)
}
inline void PassiveSpell_Config::set_command_target(const char* value, size_t size) {
  
  command_target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.PassiveSpell_Config.command_target)
}
inline ::std::string* PassiveSpell_Config::mutable_command_target() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.PassiveSpell_Config.command_target)
  return command_target_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PassiveSpell_Config::release_command_target() {
  // @@protoc_insertion_point(field_release:ConfigData.PassiveSpell_Config.command_target)
  
  return command_target_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PassiveSpell_Config::set_allocated_command_target(::std::string* command_target) {
  if (command_target != NULL) {
    
  } else {
    
  }
  command_target_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), command_target);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.PassiveSpell_Config.command_target)
}

// string command = 9;
inline void PassiveSpell_Config::clear_command() {
  command_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PassiveSpell_Config::command() const {
  // @@protoc_insertion_point(field_get:ConfigData.PassiveSpell_Config.command)
  return command_.GetNoArena();
}
inline void PassiveSpell_Config::set_command(const ::std::string& value) {
  
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.PassiveSpell_Config.command)
}
#if LANG_CXX11
inline void PassiveSpell_Config::set_command(::std::string&& value) {
  
  command_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.PassiveSpell_Config.command)
}
#endif
inline void PassiveSpell_Config::set_command(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.PassiveSpell_Config.command)
}
inline void PassiveSpell_Config::set_command(const char* value, size_t size) {
  
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.PassiveSpell_Config.command)
}
inline ::std::string* PassiveSpell_Config::mutable_command() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.PassiveSpell_Config.command)
  return command_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PassiveSpell_Config::release_command() {
  // @@protoc_insertion_point(field_release:ConfigData.PassiveSpell_Config.command)
  
  return command_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PassiveSpell_Config::set_allocated_command(::std::string* command) {
  if (command != NULL) {
    
  } else {
    
  }
  command_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), command);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.PassiveSpell_Config.command)
}

// uint32 data = 10;
inline void PassiveSpell_Config::clear_data() {
  data_ = 0u;
}
inline ::google::protobuf::uint32 PassiveSpell_Config::data() const {
  // @@protoc_insertion_point(field_get:ConfigData.PassiveSpell_Config.data)
  return data_;
}
inline void PassiveSpell_Config::set_data(::google::protobuf::uint32 value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.PassiveSpell_Config.data)
}

// int32 override_data_k1 = 11;
inline void PassiveSpell_Config::clear_override_data_k1() {
  override_data_k1_ = 0;
}
inline ::google::protobuf::int32 PassiveSpell_Config::override_data_k1() const {
  // @@protoc_insertion_point(field_get:ConfigData.PassiveSpell_Config.override_data_k1)
  return override_data_k1_;
}
inline void PassiveSpell_Config::set_override_data_k1(::google::protobuf::int32 value) {
  
  override_data_k1_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.PassiveSpell_Config.override_data_k1)
}

// int32 override_data_k2 = 12;
inline void PassiveSpell_Config::clear_override_data_k2() {
  override_data_k2_ = 0;
}
inline ::google::protobuf::int32 PassiveSpell_Config::override_data_k2() const {
  // @@protoc_insertion_point(field_get:ConfigData.PassiveSpell_Config.override_data_k2)
  return override_data_k2_;
}
inline void PassiveSpell_Config::set_override_data_k2(::google::protobuf::int32 value) {
  
  override_data_k2_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.PassiveSpell_Config.override_data_k2)
}

// int32 override_data_k3 = 13;
inline void PassiveSpell_Config::clear_override_data_k3() {
  override_data_k3_ = 0;
}
inline ::google::protobuf::int32 PassiveSpell_Config::override_data_k3() const {
  // @@protoc_insertion_point(field_get:ConfigData.PassiveSpell_Config.override_data_k3)
  return override_data_k3_;
}
inline void PassiveSpell_Config::set_override_data_k3(::google::protobuf::int32 value) {
  
  override_data_k3_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.PassiveSpell_Config.override_data_k3)
}

// int32 override_data_time = 14;
inline void PassiveSpell_Config::clear_override_data_time() {
  override_data_time_ = 0;
}
inline ::google::protobuf::int32 PassiveSpell_Config::override_data_time() const {
  // @@protoc_insertion_point(field_get:ConfigData.PassiveSpell_Config.override_data_time)
  return override_data_time_;
}
inline void PassiveSpell_Config::set_override_data_time(::google::protobuf::int32 value) {
  
  override_data_time_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.PassiveSpell_Config.override_data_time)
}

// string effect = 15;
inline void PassiveSpell_Config::clear_effect() {
  effect_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PassiveSpell_Config::effect() const {
  // @@protoc_insertion_point(field_get:ConfigData.PassiveSpell_Config.effect)
  return effect_.GetNoArena();
}
inline void PassiveSpell_Config::set_effect(const ::std::string& value) {
  
  effect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.PassiveSpell_Config.effect)
}
#if LANG_CXX11
inline void PassiveSpell_Config::set_effect(::std::string&& value) {
  
  effect_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.PassiveSpell_Config.effect)
}
#endif
inline void PassiveSpell_Config::set_effect(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  effect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.PassiveSpell_Config.effect)
}
inline void PassiveSpell_Config::set_effect(const char* value, size_t size) {
  
  effect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.PassiveSpell_Config.effect)
}
inline ::std::string* PassiveSpell_Config::mutable_effect() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.PassiveSpell_Config.effect)
  return effect_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PassiveSpell_Config::release_effect() {
  // @@protoc_insertion_point(field_release:ConfigData.PassiveSpell_Config.effect)
  
  return effect_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PassiveSpell_Config::set_allocated_effect(::std::string* effect) {
  if (effect != NULL) {
    
  } else {
    
  }
  effect_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), effect);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.PassiveSpell_Config.effect)
}

// int32 score = 16;
inline void PassiveSpell_Config::clear_score() {
  score_ = 0;
}
inline ::google::protobuf::int32 PassiveSpell_Config::score() const {
  // @@protoc_insertion_point(field_get:ConfigData.PassiveSpell_Config.score)
  return score_;
}
inline void PassiveSpell_Config::set_score(::google::protobuf::int32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.PassiveSpell_Config.score)
}

// -------------------------------------------------------------------

// CreateBullet_Config

// uint32 id = 1;
inline void CreateBullet_Config::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 CreateBullet_Config::id() const {
  // @@protoc_insertion_point(field_get:ConfigData.CreateBullet_Config.id)
  return id_;
}
inline void CreateBullet_Config::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.CreateBullet_Config.id)
}

// string point = 2;
inline void CreateBullet_Config::clear_point() {
  point_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateBullet_Config::point() const {
  // @@protoc_insertion_point(field_get:ConfigData.CreateBullet_Config.point)
  return point_.GetNoArena();
}
inline void CreateBullet_Config::set_point(const ::std::string& value) {
  
  point_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfigData.CreateBullet_Config.point)
}
#if LANG_CXX11
inline void CreateBullet_Config::set_point(::std::string&& value) {
  
  point_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfigData.CreateBullet_Config.point)
}
#endif
inline void CreateBullet_Config::set_point(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  point_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfigData.CreateBullet_Config.point)
}
inline void CreateBullet_Config::set_point(const char* value, size_t size) {
  
  point_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfigData.CreateBullet_Config.point)
}
inline ::std::string* CreateBullet_Config::mutable_point() {
  
  // @@protoc_insertion_point(field_mutable:ConfigData.CreateBullet_Config.point)
  return point_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateBullet_Config::release_point() {
  // @@protoc_insertion_point(field_release:ConfigData.CreateBullet_Config.point)
  
  return point_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateBullet_Config::set_allocated_point(::std::string* point) {
  if (point != NULL) {
    
  } else {
    
  }
  point_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), point);
  // @@protoc_insertion_point(field_set_allocated:ConfigData.CreateBullet_Config.point)
}

// float horizon_speed = 3;
inline void CreateBullet_Config::clear_horizon_speed() {
  horizon_speed_ = 0;
}
inline float CreateBullet_Config::horizon_speed() const {
  // @@protoc_insertion_point(field_get:ConfigData.CreateBullet_Config.horizon_speed)
  return horizon_speed_;
}
inline void CreateBullet_Config::set_horizon_speed(float value) {
  
  horizon_speed_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.CreateBullet_Config.horizon_speed)
}

// float horizontal_range = 4;
inline void CreateBullet_Config::clear_horizontal_range() {
  horizontal_range_ = 0;
}
inline float CreateBullet_Config::horizontal_range() const {
  // @@protoc_insertion_point(field_get:ConfigData.CreateBullet_Config.horizontal_range)
  return horizontal_range_;
}
inline void CreateBullet_Config::set_horizontal_range(float value) {
  
  horizontal_range_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.CreateBullet_Config.horizontal_range)
}

// float trace_missile = 5;
inline void CreateBullet_Config::clear_trace_missile() {
  trace_missile_ = 0;
}
inline float CreateBullet_Config::trace_missile() const {
  // @@protoc_insertion_point(field_get:ConfigData.CreateBullet_Config.trace_missile)
  return trace_missile_;
}
inline void CreateBullet_Config::set_trace_missile(float value) {
  
  trace_missile_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.CreateBullet_Config.trace_missile)
}

// float parabola_height = 6;
inline void CreateBullet_Config::clear_parabola_height() {
  parabola_height_ = 0;
}
inline float CreateBullet_Config::parabola_height() const {
  // @@protoc_insertion_point(field_get:ConfigData.CreateBullet_Config.parabola_height)
  return parabola_height_;
}
inline void CreateBullet_Config::set_parabola_height(float value) {
  
  parabola_height_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.CreateBullet_Config.parabola_height)
}

// repeated float parabola_src = 7;
inline int CreateBullet_Config::parabola_src_size() const {
  return parabola_src_.size();
}
inline void CreateBullet_Config::clear_parabola_src() {
  parabola_src_.Clear();
}
inline float CreateBullet_Config::parabola_src(int index) const {
  // @@protoc_insertion_point(field_get:ConfigData.CreateBullet_Config.parabola_src)
  return parabola_src_.Get(index);
}
inline void CreateBullet_Config::set_parabola_src(int index, float value) {
  parabola_src_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigData.CreateBullet_Config.parabola_src)
}
inline void CreateBullet_Config::add_parabola_src(float value) {
  parabola_src_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigData.CreateBullet_Config.parabola_src)
}
inline const ::google::protobuf::RepeatedField< float >&
CreateBullet_Config::parabola_src() const {
  // @@protoc_insertion_point(field_list:ConfigData.CreateBullet_Config.parabola_src)
  return parabola_src_;
}
inline ::google::protobuf::RepeatedField< float >*
CreateBullet_Config::mutable_parabola_src() {
  // @@protoc_insertion_point(field_mutable_list:ConfigData.CreateBullet_Config.parabola_src)
  return &parabola_src_;
}

// repeated float parabola_ctrl_1 = 8;
inline int CreateBullet_Config::parabola_ctrl_1_size() const {
  return parabola_ctrl_1_.size();
}
inline void CreateBullet_Config::clear_parabola_ctrl_1() {
  parabola_ctrl_1_.Clear();
}
inline float CreateBullet_Config::parabola_ctrl_1(int index) const {
  // @@protoc_insertion_point(field_get:ConfigData.CreateBullet_Config.parabola_ctrl_1)
  return parabola_ctrl_1_.Get(index);
}
inline void CreateBullet_Config::set_parabola_ctrl_1(int index, float value) {
  parabola_ctrl_1_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigData.CreateBullet_Config.parabola_ctrl_1)
}
inline void CreateBullet_Config::add_parabola_ctrl_1(float value) {
  parabola_ctrl_1_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigData.CreateBullet_Config.parabola_ctrl_1)
}
inline const ::google::protobuf::RepeatedField< float >&
CreateBullet_Config::parabola_ctrl_1() const {
  // @@protoc_insertion_point(field_list:ConfigData.CreateBullet_Config.parabola_ctrl_1)
  return parabola_ctrl_1_;
}
inline ::google::protobuf::RepeatedField< float >*
CreateBullet_Config::mutable_parabola_ctrl_1() {
  // @@protoc_insertion_point(field_mutable_list:ConfigData.CreateBullet_Config.parabola_ctrl_1)
  return &parabola_ctrl_1_;
}

// repeated float parabola_ctrl_2 = 9;
inline int CreateBullet_Config::parabola_ctrl_2_size() const {
  return parabola_ctrl_2_.size();
}
inline void CreateBullet_Config::clear_parabola_ctrl_2() {
  parabola_ctrl_2_.Clear();
}
inline float CreateBullet_Config::parabola_ctrl_2(int index) const {
  // @@protoc_insertion_point(field_get:ConfigData.CreateBullet_Config.parabola_ctrl_2)
  return parabola_ctrl_2_.Get(index);
}
inline void CreateBullet_Config::set_parabola_ctrl_2(int index, float value) {
  parabola_ctrl_2_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigData.CreateBullet_Config.parabola_ctrl_2)
}
inline void CreateBullet_Config::add_parabola_ctrl_2(float value) {
  parabola_ctrl_2_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigData.CreateBullet_Config.parabola_ctrl_2)
}
inline const ::google::protobuf::RepeatedField< float >&
CreateBullet_Config::parabola_ctrl_2() const {
  // @@protoc_insertion_point(field_list:ConfigData.CreateBullet_Config.parabola_ctrl_2)
  return parabola_ctrl_2_;
}
inline ::google::protobuf::RepeatedField< float >*
CreateBullet_Config::mutable_parabola_ctrl_2() {
  // @@protoc_insertion_point(field_mutable_list:ConfigData.CreateBullet_Config.parabola_ctrl_2)
  return &parabola_ctrl_2_;
}

// repeated float parabola_des = 10;
inline int CreateBullet_Config::parabola_des_size() const {
  return parabola_des_.size();
}
inline void CreateBullet_Config::clear_parabola_des() {
  parabola_des_.Clear();
}
inline float CreateBullet_Config::parabola_des(int index) const {
  // @@protoc_insertion_point(field_get:ConfigData.CreateBullet_Config.parabola_des)
  return parabola_des_.Get(index);
}
inline void CreateBullet_Config::set_parabola_des(int index, float value) {
  parabola_des_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigData.CreateBullet_Config.parabola_des)
}
inline void CreateBullet_Config::add_parabola_des(float value) {
  parabola_des_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigData.CreateBullet_Config.parabola_des)
}
inline const ::google::protobuf::RepeatedField< float >&
CreateBullet_Config::parabola_des() const {
  // @@protoc_insertion_point(field_list:ConfigData.CreateBullet_Config.parabola_des)
  return parabola_des_;
}
inline ::google::protobuf::RepeatedField< float >*
CreateBullet_Config::mutable_parabola_des() {
  // @@protoc_insertion_point(field_mutable_list:ConfigData.CreateBullet_Config.parabola_des)
  return &parabola_des_;
}

// float height_offset_min = 11;
inline void CreateBullet_Config::clear_height_offset_min() {
  height_offset_min_ = 0;
}
inline float CreateBullet_Config::height_offset_min() const {
  // @@protoc_insertion_point(field_get:ConfigData.CreateBullet_Config.height_offset_min)
  return height_offset_min_;
}
inline void CreateBullet_Config::set_height_offset_min(float value) {
  
  height_offset_min_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.CreateBullet_Config.height_offset_min)
}

// float height_offset_max = 12;
inline void CreateBullet_Config::clear_height_offset_max() {
  height_offset_max_ = 0;
}
inline float CreateBullet_Config::height_offset_max() const {
  // @@protoc_insertion_point(field_get:ConfigData.CreateBullet_Config.height_offset_max)
  return height_offset_max_;
}
inline void CreateBullet_Config::set_height_offset_max(float value) {
  
  height_offset_max_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.CreateBullet_Config.height_offset_max)
}

// float des_range_offset = 13;
inline void CreateBullet_Config::clear_des_range_offset() {
  des_range_offset_ = 0;
}
inline float CreateBullet_Config::des_range_offset() const {
  // @@protoc_insertion_point(field_get:ConfigData.CreateBullet_Config.des_range_offset)
  return des_range_offset_;
}
inline void CreateBullet_Config::set_des_range_offset(float value) {
  
  des_range_offset_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.CreateBullet_Config.des_range_offset)
}

// float ballistic_calc_rate = 14;
inline void CreateBullet_Config::clear_ballistic_calc_rate() {
  ballistic_calc_rate_ = 0;
}
inline float CreateBullet_Config::ballistic_calc_rate() const {
  // @@protoc_insertion_point(field_get:ConfigData.CreateBullet_Config.ballistic_calc_rate)
  return ballistic_calc_rate_;
}
inline void CreateBullet_Config::set_ballistic_calc_rate(float value) {
  
  ballistic_calc_rate_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.CreateBullet_Config.ballistic_calc_rate)
}

// -------------------------------------------------------------------

// Skill_Level_Config

// uint32 id = 1;
inline void Skill_Level_Config::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 Skill_Level_Config::id() const {
  // @@protoc_insertion_point(field_get:ConfigData.Skill_Level_Config.id)
  return id_;
}
inline void Skill_Level_Config::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Skill_Level_Config.id)
}

// uint32 skill_id = 2;
inline void Skill_Level_Config::clear_skill_id() {
  skill_id_ = 0u;
}
inline ::google::protobuf::uint32 Skill_Level_Config::skill_id() const {
  // @@protoc_insertion_point(field_get:ConfigData.Skill_Level_Config.skill_id)
  return skill_id_;
}
inline void Skill_Level_Config::set_skill_id(::google::protobuf::uint32 value) {
  
  skill_id_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Skill_Level_Config.skill_id)
}

// int32 level_start = 3;
inline void Skill_Level_Config::clear_level_start() {
  level_start_ = 0;
}
inline ::google::protobuf::int32 Skill_Level_Config::level_start() const {
  // @@protoc_insertion_point(field_get:ConfigData.Skill_Level_Config.level_start)
  return level_start_;
}
inline void Skill_Level_Config::set_level_start(::google::protobuf::int32 value) {
  
  level_start_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Skill_Level_Config.level_start)
}

// int32 level_end = 4;
inline void Skill_Level_Config::clear_level_end() {
  level_end_ = 0;
}
inline ::google::protobuf::int32 Skill_Level_Config::level_end() const {
  // @@protoc_insertion_point(field_get:ConfigData.Skill_Level_Config.level_end)
  return level_end_;
}
inline void Skill_Level_Config::set_level_end(::google::protobuf::int32 value) {
  
  level_end_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Skill_Level_Config.level_end)
}

// repeated uint32 materials = 5;
inline int Skill_Level_Config::materials_size() const {
  return materials_.size();
}
inline void Skill_Level_Config::clear_materials() {
  materials_.Clear();
}
inline ::google::protobuf::uint32 Skill_Level_Config::materials(int index) const {
  // @@protoc_insertion_point(field_get:ConfigData.Skill_Level_Config.materials)
  return materials_.Get(index);
}
inline void Skill_Level_Config::set_materials(int index, ::google::protobuf::uint32 value) {
  materials_.Set(index, value);
  // @@protoc_insertion_point(field_set:ConfigData.Skill_Level_Config.materials)
}
inline void Skill_Level_Config::add_materials(::google::protobuf::uint32 value) {
  materials_.Add(value);
  // @@protoc_insertion_point(field_add:ConfigData.Skill_Level_Config.materials)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Skill_Level_Config::materials() const {
  // @@protoc_insertion_point(field_list:ConfigData.Skill_Level_Config.materials)
  return materials_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Skill_Level_Config::mutable_materials() {
  // @@protoc_insertion_point(field_mutable_list:ConfigData.Skill_Level_Config.materials)
  return &materials_;
}

// int32 level_limit = 6;
inline void Skill_Level_Config::clear_level_limit() {
  level_limit_ = 0;
}
inline ::google::protobuf::int32 Skill_Level_Config::level_limit() const {
  // @@protoc_insertion_point(field_get:ConfigData.Skill_Level_Config.level_limit)
  return level_limit_;
}
inline void Skill_Level_Config::set_level_limit(::google::protobuf::int32 value) {
  
  level_limit_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Skill_Level_Config.level_limit)
}

// int32 rank_limit = 7;
inline void Skill_Level_Config::clear_rank_limit() {
  rank_limit_ = 0;
}
inline ::google::protobuf::int32 Skill_Level_Config::rank_limit() const {
  // @@protoc_insertion_point(field_get:ConfigData.Skill_Level_Config.rank_limit)
  return rank_limit_;
}
inline void Skill_Level_Config::set_rank_limit(::google::protobuf::int32 value) {
  
  rank_limit_ = value;
  // @@protoc_insertion_point(field_set:ConfigData.Skill_Level_Config.rank_limit)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Spell_Config_Data

// map<uint32, .ConfigData.ActiveSpell_Config> ActiveSpell_Config_items = 1;
inline int Spell_Config_Data::activespell_config_items_size() const {
  return activespell_config_items_.size();
}
inline void Spell_Config_Data::clear_activespell_config_items() {
  activespell_config_items_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::ActiveSpell_Config >&
Spell_Config_Data::activespell_config_items() const {
  // @@protoc_insertion_point(field_map:ConfigData.Spell_Config_Data.ActiveSpell_Config_items)
  return activespell_config_items_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::ActiveSpell_Config >*
Spell_Config_Data::mutable_activespell_config_items() {
  // @@protoc_insertion_point(field_mutable_map:ConfigData.Spell_Config_Data.ActiveSpell_Config_items)
  return activespell_config_items_.MutableMap();
}

// map<uint32, .ConfigData.SkillData_Config> SkillData_Config_items = 2;
inline int Spell_Config_Data::skilldata_config_items_size() const {
  return skilldata_config_items_.size();
}
inline void Spell_Config_Data::clear_skilldata_config_items() {
  skilldata_config_items_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::SkillData_Config >&
Spell_Config_Data::skilldata_config_items() const {
  // @@protoc_insertion_point(field_map:ConfigData.Spell_Config_Data.SkillData_Config_items)
  return skilldata_config_items_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::SkillData_Config >*
Spell_Config_Data::mutable_skilldata_config_items() {
  // @@protoc_insertion_point(field_mutable_map:ConfigData.Spell_Config_Data.SkillData_Config_items)
  return skilldata_config_items_.MutableMap();
}

// map<uint32, .ConfigData.DataChangeFunc_Config> DataChangeFunc_Config_items = 3;
inline int Spell_Config_Data::datachangefunc_config_items_size() const {
  return datachangefunc_config_items_.size();
}
inline void Spell_Config_Data::clear_datachangefunc_config_items() {
  datachangefunc_config_items_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::DataChangeFunc_Config >&
Spell_Config_Data::datachangefunc_config_items() const {
  // @@protoc_insertion_point(field_map:ConfigData.Spell_Config_Data.DataChangeFunc_Config_items)
  return datachangefunc_config_items_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::DataChangeFunc_Config >*
Spell_Config_Data::mutable_datachangefunc_config_items() {
  // @@protoc_insertion_point(field_mutable_map:ConfigData.Spell_Config_Data.DataChangeFunc_Config_items)
  return datachangefunc_config_items_.MutableMap();
}

// map<uint32, .ConfigData.PassiveSpell_Config> PassiveSpell_Config_items = 4;
inline int Spell_Config_Data::passivespell_config_items_size() const {
  return passivespell_config_items_.size();
}
inline void Spell_Config_Data::clear_passivespell_config_items() {
  passivespell_config_items_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::PassiveSpell_Config >&
Spell_Config_Data::passivespell_config_items() const {
  // @@protoc_insertion_point(field_map:ConfigData.Spell_Config_Data.PassiveSpell_Config_items)
  return passivespell_config_items_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::PassiveSpell_Config >*
Spell_Config_Data::mutable_passivespell_config_items() {
  // @@protoc_insertion_point(field_mutable_map:ConfigData.Spell_Config_Data.PassiveSpell_Config_items)
  return passivespell_config_items_.MutableMap();
}

// map<uint32, .ConfigData.CreateBullet_Config> CreateBullet_Config_items = 5;
inline int Spell_Config_Data::createbullet_config_items_size() const {
  return createbullet_config_items_.size();
}
inline void Spell_Config_Data::clear_createbullet_config_items() {
  createbullet_config_items_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::CreateBullet_Config >&
Spell_Config_Data::createbullet_config_items() const {
  // @@protoc_insertion_point(field_map:ConfigData.Spell_Config_Data.CreateBullet_Config_items)
  return createbullet_config_items_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::CreateBullet_Config >*
Spell_Config_Data::mutable_createbullet_config_items() {
  // @@protoc_insertion_point(field_mutable_map:ConfigData.Spell_Config_Data.CreateBullet_Config_items)
  return createbullet_config_items_.MutableMap();
}

// map<uint32, .ConfigData.Skill_Level_Config> Skill_Level_Config_items = 6;
inline int Spell_Config_Data::skill_level_config_items_size() const {
  return skill_level_config_items_.size();
}
inline void Spell_Config_Data::clear_skill_level_config_items() {
  skill_level_config_items_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::Skill_Level_Config >&
Spell_Config_Data::skill_level_config_items() const {
  // @@protoc_insertion_point(field_map:ConfigData.Spell_Config_Data.Skill_Level_Config_items)
  return skill_level_config_items_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::ConfigData::Skill_Level_Config >*
Spell_Config_Data::mutable_skill_level_config_items() {
  // @@protoc_insertion_point(field_mutable_map:ConfigData.Spell_Config_Data.Skill_Level_Config_items)
  return skill_level_config_items_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ConfigData

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_Spell_5fConfig_2eproto
