// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: SceneScript_Config.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ConfigData {

  /// <summary>Holder for reflection information generated from SceneScript_Config.proto</summary>
  public static partial class SceneScriptConfigReflection {

    #region Descriptor
    /// <summary>File descriptor for SceneScript_Config.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SceneScriptConfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhTY2VuZVNjcmlwdF9Db25maWcucHJvdG8SCkNvbmZpZ0RhdGEi8AEKCHRl",
            "bXBsYXRlEhQKDHNjcmlwdF9zdGFnZRgBIAEoCRISCgpuZXh0X3N0YWdlGAIg",
            "ASgJEg4KBnJlbWFyaxgDIAEoCRIPCgdvcHRpb25zGAQgASgJEhAKCG9wdGlv",
            "bnMyGAUgASgJEhEKCWlzX3JlcGVhdBgGIAEoBRISCgpkZWxheV90aW1lGAcg",
            "ASgCEgwKBHR5cGUYCCABKAUSDAoEbnVtMRgJIAEoCRIMCgRudW0yGAogASgJ",
            "EgwKBG51bTMYCyABKAkSDAoEbnVtNBgMIAEoCRIMCgRudW01GA0gASgJEgwK",
            "BG51bTYYDiABKAkiNAoNdGVtcGxhdGVfRGF0YRIjCgVpdGVtcxgBIAMoCzIU",
            "LkNvbmZpZ0RhdGEudGVtcGxhdGUi/gEKFk1vZHVsZV9MZXZlbF9HYW1lU3Rh",
            "cnQSFAoMc2NyaXB0X3N0YWdlGAEgASgJEhIKCm5leHRfc3RhZ2UYAiABKAkS",
            "DgoGcmVtYXJrGAMgASgJEg8KB29wdGlvbnMYBCABKAkSEAoIb3B0aW9uczIY",
            "BSABKAkSEQoJaXNfcmVwZWF0GAYgASgFEhIKCmRlbGF5X3RpbWUYByABKAIS",
            "DAoEdHlwZRgIIAEoBRIMCgRudW0xGAkgASgJEgwKBG51bTIYCiABKAkSDAoE",
            "bnVtMxgLIAEoCRIMCgRudW00GAwgASgJEgwKBG51bTUYDSABKAkSDAoEbnVt",
            "NhgOIAEoCSJQChtNb2R1bGVfTGV2ZWxfR2FtZVN0YXJ0X0RhdGESMQoFaXRl",
            "bXMYASADKAsyIi5Db25maWdEYXRhLk1vZHVsZV9MZXZlbF9HYW1lU3RhcnRC",
            "JQojY29tLmdhbWUuanVoZS5zZXJ2ZXIucHJvdG9idWYucHJvdG9iBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ConfigData.template), global::ConfigData.template.Parser, new[]{ "ScriptStage", "NextStage", "Remark", "Options", "Options2", "IsRepeat", "DelayTime", "Type", "Num1", "Num2", "Num3", "Num4", "Num5", "Num6" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConfigData.template_Data), global::ConfigData.template_Data.Parser, new[]{ "Items" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConfigData.Module_Level_GameStart), global::ConfigData.Module_Level_GameStart.Parser, new[]{ "ScriptStage", "NextStage", "Remark", "Options", "Options2", "IsRepeat", "DelayTime", "Type", "Num1", "Num2", "Num3", "Num4", "Num5", "Num6" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConfigData.Module_Level_GameStart_Data), global::ConfigData.Module_Level_GameStart_Data.Parser, new[]{ "Items" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class template : pb::IMessage<template> {
    private static readonly pb::MessageParser<template> _parser = new pb::MessageParser<template>(() => new template());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<template> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ConfigData.SceneScriptConfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public template() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public template(template other) : this() {
      scriptStage_ = other.scriptStage_;
      nextStage_ = other.nextStage_;
      remark_ = other.remark_;
      options_ = other.options_;
      options2_ = other.options2_;
      isRepeat_ = other.isRepeat_;
      delayTime_ = other.delayTime_;
      type_ = other.type_;
      num1_ = other.num1_;
      num2_ = other.num2_;
      num3_ = other.num3_;
      num4_ = other.num4_;
      num5_ = other.num5_;
      num6_ = other.num6_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public template Clone() {
      return new template(this);
    }

    /// <summary>Field number for the "script_stage" field.</summary>
    public const int ScriptStageFieldNumber = 1;
    private string scriptStage_ = "";
    /// <summary>
    ///* 唯一标识 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ScriptStage {
      get { return scriptStage_; }
      set {
        scriptStage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "next_stage" field.</summary>
    public const int NextStageFieldNumber = 2;
    private string nextStage_ = "";
    /// <summary>
    ///* 下个阶段 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextStage {
      get { return nextStage_; }
      set {
        nextStage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "remark" field.</summary>
    public const int RemarkFieldNumber = 3;
    private string remark_ = "";
    /// <summary>
    ///* 说明 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Remark {
      get { return remark_; }
      set {
        remark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 4;
    private string options_ = "";
    /// <summary>
    ///* 脚本选项1 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Options {
      get { return options_; }
      set {
        options_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "options2" field.</summary>
    public const int Options2FieldNumber = 5;
    private string options2_ = "";
    /// <summary>
    ///* 脚本选项2 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Options2 {
      get { return options2_; }
      set {
        options2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_repeat" field.</summary>
    public const int IsRepeatFieldNumber = 6;
    private int isRepeat_;
    /// <summary>
    ///* 是否跳过 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IsRepeat {
      get { return isRepeat_; }
      set {
        isRepeat_ = value;
      }
    }

    /// <summary>Field number for the "delay_time" field.</summary>
    public const int DelayTimeFieldNumber = 7;
    private float delayTime_;
    /// <summary>
    ///* 启动延时 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float DelayTime {
      get { return delayTime_; }
      set {
        delayTime_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 8;
    private int type_;
    /// <summary>
    ///* 脚本类型 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "num1" field.</summary>
    public const int Num1FieldNumber = 9;
    private string num1_ = "";
    /// <summary>
    ///* 参数1 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Num1 {
      get { return num1_; }
      set {
        num1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "num2" field.</summary>
    public const int Num2FieldNumber = 10;
    private string num2_ = "";
    /// <summary>
    ///* 参数2 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Num2 {
      get { return num2_; }
      set {
        num2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "num3" field.</summary>
    public const int Num3FieldNumber = 11;
    private string num3_ = "";
    /// <summary>
    ///* 参数3 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Num3 {
      get { return num3_; }
      set {
        num3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "num4" field.</summary>
    public const int Num4FieldNumber = 12;
    private string num4_ = "";
    /// <summary>
    ///* 参数4 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Num4 {
      get { return num4_; }
      set {
        num4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "num5" field.</summary>
    public const int Num5FieldNumber = 13;
    private string num5_ = "";
    /// <summary>
    ///* 参数5 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Num5 {
      get { return num5_; }
      set {
        num5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "num6" field.</summary>
    public const int Num6FieldNumber = 14;
    private string num6_ = "";
    /// <summary>
    ///* 参数6 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Num6 {
      get { return num6_; }
      set {
        num6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as template);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(template other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ScriptStage != other.ScriptStage) return false;
      if (NextStage != other.NextStage) return false;
      if (Remark != other.Remark) return false;
      if (Options != other.Options) return false;
      if (Options2 != other.Options2) return false;
      if (IsRepeat != other.IsRepeat) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DelayTime, other.DelayTime)) return false;
      if (Type != other.Type) return false;
      if (Num1 != other.Num1) return false;
      if (Num2 != other.Num2) return false;
      if (Num3 != other.Num3) return false;
      if (Num4 != other.Num4) return false;
      if (Num5 != other.Num5) return false;
      if (Num6 != other.Num6) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ScriptStage.Length != 0) hash ^= ScriptStage.GetHashCode();
      if (NextStage.Length != 0) hash ^= NextStage.GetHashCode();
      if (Remark.Length != 0) hash ^= Remark.GetHashCode();
      if (Options.Length != 0) hash ^= Options.GetHashCode();
      if (Options2.Length != 0) hash ^= Options2.GetHashCode();
      if (IsRepeat != 0) hash ^= IsRepeat.GetHashCode();
      if (DelayTime != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DelayTime);
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Num1.Length != 0) hash ^= Num1.GetHashCode();
      if (Num2.Length != 0) hash ^= Num2.GetHashCode();
      if (Num3.Length != 0) hash ^= Num3.GetHashCode();
      if (Num4.Length != 0) hash ^= Num4.GetHashCode();
      if (Num5.Length != 0) hash ^= Num5.GetHashCode();
      if (Num6.Length != 0) hash ^= Num6.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ScriptStage.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ScriptStage);
      }
      if (NextStage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextStage);
      }
      if (Remark.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Remark);
      }
      if (Options.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Options);
      }
      if (Options2.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Options2);
      }
      if (IsRepeat != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(IsRepeat);
      }
      if (DelayTime != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(DelayTime);
      }
      if (Type != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Type);
      }
      if (Num1.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Num1);
      }
      if (Num2.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Num2);
      }
      if (Num3.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Num3);
      }
      if (Num4.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Num4);
      }
      if (Num5.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Num5);
      }
      if (Num6.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(Num6);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ScriptStage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ScriptStage);
      }
      if (NextStage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextStage);
      }
      if (Remark.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Remark);
      }
      if (Options.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Options);
      }
      if (Options2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Options2);
      }
      if (IsRepeat != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IsRepeat);
      }
      if (DelayTime != 0F) {
        size += 1 + 4;
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (Num1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Num1);
      }
      if (Num2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Num2);
      }
      if (Num3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Num3);
      }
      if (Num4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Num4);
      }
      if (Num5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Num5);
      }
      if (Num6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Num6);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(template other) {
      if (other == null) {
        return;
      }
      if (other.ScriptStage.Length != 0) {
        ScriptStage = other.ScriptStage;
      }
      if (other.NextStage.Length != 0) {
        NextStage = other.NextStage;
      }
      if (other.Remark.Length != 0) {
        Remark = other.Remark;
      }
      if (other.Options.Length != 0) {
        Options = other.Options;
      }
      if (other.Options2.Length != 0) {
        Options2 = other.Options2;
      }
      if (other.IsRepeat != 0) {
        IsRepeat = other.IsRepeat;
      }
      if (other.DelayTime != 0F) {
        DelayTime = other.DelayTime;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Num1.Length != 0) {
        Num1 = other.Num1;
      }
      if (other.Num2.Length != 0) {
        Num2 = other.Num2;
      }
      if (other.Num3.Length != 0) {
        Num3 = other.Num3;
      }
      if (other.Num4.Length != 0) {
        Num4 = other.Num4;
      }
      if (other.Num5.Length != 0) {
        Num5 = other.Num5;
      }
      if (other.Num6.Length != 0) {
        Num6 = other.Num6;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ScriptStage = input.ReadString();
            break;
          }
          case 18: {
            NextStage = input.ReadString();
            break;
          }
          case 26: {
            Remark = input.ReadString();
            break;
          }
          case 34: {
            Options = input.ReadString();
            break;
          }
          case 42: {
            Options2 = input.ReadString();
            break;
          }
          case 48: {
            IsRepeat = input.ReadInt32();
            break;
          }
          case 61: {
            DelayTime = input.ReadFloat();
            break;
          }
          case 64: {
            Type = input.ReadInt32();
            break;
          }
          case 74: {
            Num1 = input.ReadString();
            break;
          }
          case 82: {
            Num2 = input.ReadString();
            break;
          }
          case 90: {
            Num3 = input.ReadString();
            break;
          }
          case 98: {
            Num4 = input.ReadString();
            break;
          }
          case 106: {
            Num5 = input.ReadString();
            break;
          }
          case 114: {
            Num6 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class template_Data : pb::IMessage<template_Data> {
    private static readonly pb::MessageParser<template_Data> _parser = new pb::MessageParser<template_Data>(() => new template_Data());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<template_Data> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ConfigData.SceneScriptConfigReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public template_Data() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public template_Data(template_Data other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public template_Data Clone() {
      return new template_Data(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ConfigData.template> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::ConfigData.template.Parser);
    private readonly pbc::RepeatedField<global::ConfigData.template> items_ = new pbc::RepeatedField<global::ConfigData.template>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ConfigData.template> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as template_Data);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(template_Data other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(template_Data other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Module_Level_GameStart : pb::IMessage<Module_Level_GameStart> {
    private static readonly pb::MessageParser<Module_Level_GameStart> _parser = new pb::MessageParser<Module_Level_GameStart>(() => new Module_Level_GameStart());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Module_Level_GameStart> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ConfigData.SceneScriptConfigReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Module_Level_GameStart() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Module_Level_GameStart(Module_Level_GameStart other) : this() {
      scriptStage_ = other.scriptStage_;
      nextStage_ = other.nextStage_;
      remark_ = other.remark_;
      options_ = other.options_;
      options2_ = other.options2_;
      isRepeat_ = other.isRepeat_;
      delayTime_ = other.delayTime_;
      type_ = other.type_;
      num1_ = other.num1_;
      num2_ = other.num2_;
      num3_ = other.num3_;
      num4_ = other.num4_;
      num5_ = other.num5_;
      num6_ = other.num6_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Module_Level_GameStart Clone() {
      return new Module_Level_GameStart(this);
    }

    /// <summary>Field number for the "script_stage" field.</summary>
    public const int ScriptStageFieldNumber = 1;
    private string scriptStage_ = "";
    /// <summary>
    ///* 唯一标识 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ScriptStage {
      get { return scriptStage_; }
      set {
        scriptStage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "next_stage" field.</summary>
    public const int NextStageFieldNumber = 2;
    private string nextStage_ = "";
    /// <summary>
    ///* 下个阶段 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextStage {
      get { return nextStage_; }
      set {
        nextStage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "remark" field.</summary>
    public const int RemarkFieldNumber = 3;
    private string remark_ = "";
    /// <summary>
    ///* 说明 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Remark {
      get { return remark_; }
      set {
        remark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 4;
    private string options_ = "";
    /// <summary>
    ///* 脚本选项1 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Options {
      get { return options_; }
      set {
        options_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "options2" field.</summary>
    public const int Options2FieldNumber = 5;
    private string options2_ = "";
    /// <summary>
    ///* 脚本选项2 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Options2 {
      get { return options2_; }
      set {
        options2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_repeat" field.</summary>
    public const int IsRepeatFieldNumber = 6;
    private int isRepeat_;
    /// <summary>
    ///* 是否跳过 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IsRepeat {
      get { return isRepeat_; }
      set {
        isRepeat_ = value;
      }
    }

    /// <summary>Field number for the "delay_time" field.</summary>
    public const int DelayTimeFieldNumber = 7;
    private float delayTime_;
    /// <summary>
    ///* 启动延时 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float DelayTime {
      get { return delayTime_; }
      set {
        delayTime_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 8;
    private int type_;
    /// <summary>
    ///* 脚本类型 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "num1" field.</summary>
    public const int Num1FieldNumber = 9;
    private string num1_ = "";
    /// <summary>
    ///* 参数1 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Num1 {
      get { return num1_; }
      set {
        num1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "num2" field.</summary>
    public const int Num2FieldNumber = 10;
    private string num2_ = "";
    /// <summary>
    ///* 参数2 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Num2 {
      get { return num2_; }
      set {
        num2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "num3" field.</summary>
    public const int Num3FieldNumber = 11;
    private string num3_ = "";
    /// <summary>
    ///* 参数3 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Num3 {
      get { return num3_; }
      set {
        num3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "num4" field.</summary>
    public const int Num4FieldNumber = 12;
    private string num4_ = "";
    /// <summary>
    ///* 参数4 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Num4 {
      get { return num4_; }
      set {
        num4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "num5" field.</summary>
    public const int Num5FieldNumber = 13;
    private string num5_ = "";
    /// <summary>
    ///* 参数5 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Num5 {
      get { return num5_; }
      set {
        num5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "num6" field.</summary>
    public const int Num6FieldNumber = 14;
    private string num6_ = "";
    /// <summary>
    ///* 参数6 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Num6 {
      get { return num6_; }
      set {
        num6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Module_Level_GameStart);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Module_Level_GameStart other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ScriptStage != other.ScriptStage) return false;
      if (NextStage != other.NextStage) return false;
      if (Remark != other.Remark) return false;
      if (Options != other.Options) return false;
      if (Options2 != other.Options2) return false;
      if (IsRepeat != other.IsRepeat) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DelayTime, other.DelayTime)) return false;
      if (Type != other.Type) return false;
      if (Num1 != other.Num1) return false;
      if (Num2 != other.Num2) return false;
      if (Num3 != other.Num3) return false;
      if (Num4 != other.Num4) return false;
      if (Num5 != other.Num5) return false;
      if (Num6 != other.Num6) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ScriptStage.Length != 0) hash ^= ScriptStage.GetHashCode();
      if (NextStage.Length != 0) hash ^= NextStage.GetHashCode();
      if (Remark.Length != 0) hash ^= Remark.GetHashCode();
      if (Options.Length != 0) hash ^= Options.GetHashCode();
      if (Options2.Length != 0) hash ^= Options2.GetHashCode();
      if (IsRepeat != 0) hash ^= IsRepeat.GetHashCode();
      if (DelayTime != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DelayTime);
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Num1.Length != 0) hash ^= Num1.GetHashCode();
      if (Num2.Length != 0) hash ^= Num2.GetHashCode();
      if (Num3.Length != 0) hash ^= Num3.GetHashCode();
      if (Num4.Length != 0) hash ^= Num4.GetHashCode();
      if (Num5.Length != 0) hash ^= Num5.GetHashCode();
      if (Num6.Length != 0) hash ^= Num6.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ScriptStage.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ScriptStage);
      }
      if (NextStage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextStage);
      }
      if (Remark.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Remark);
      }
      if (Options.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Options);
      }
      if (Options2.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Options2);
      }
      if (IsRepeat != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(IsRepeat);
      }
      if (DelayTime != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(DelayTime);
      }
      if (Type != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Type);
      }
      if (Num1.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Num1);
      }
      if (Num2.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Num2);
      }
      if (Num3.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Num3);
      }
      if (Num4.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Num4);
      }
      if (Num5.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Num5);
      }
      if (Num6.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(Num6);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ScriptStage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ScriptStage);
      }
      if (NextStage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextStage);
      }
      if (Remark.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Remark);
      }
      if (Options.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Options);
      }
      if (Options2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Options2);
      }
      if (IsRepeat != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IsRepeat);
      }
      if (DelayTime != 0F) {
        size += 1 + 4;
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (Num1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Num1);
      }
      if (Num2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Num2);
      }
      if (Num3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Num3);
      }
      if (Num4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Num4);
      }
      if (Num5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Num5);
      }
      if (Num6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Num6);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Module_Level_GameStart other) {
      if (other == null) {
        return;
      }
      if (other.ScriptStage.Length != 0) {
        ScriptStage = other.ScriptStage;
      }
      if (other.NextStage.Length != 0) {
        NextStage = other.NextStage;
      }
      if (other.Remark.Length != 0) {
        Remark = other.Remark;
      }
      if (other.Options.Length != 0) {
        Options = other.Options;
      }
      if (other.Options2.Length != 0) {
        Options2 = other.Options2;
      }
      if (other.IsRepeat != 0) {
        IsRepeat = other.IsRepeat;
      }
      if (other.DelayTime != 0F) {
        DelayTime = other.DelayTime;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Num1.Length != 0) {
        Num1 = other.Num1;
      }
      if (other.Num2.Length != 0) {
        Num2 = other.Num2;
      }
      if (other.Num3.Length != 0) {
        Num3 = other.Num3;
      }
      if (other.Num4.Length != 0) {
        Num4 = other.Num4;
      }
      if (other.Num5.Length != 0) {
        Num5 = other.Num5;
      }
      if (other.Num6.Length != 0) {
        Num6 = other.Num6;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ScriptStage = input.ReadString();
            break;
          }
          case 18: {
            NextStage = input.ReadString();
            break;
          }
          case 26: {
            Remark = input.ReadString();
            break;
          }
          case 34: {
            Options = input.ReadString();
            break;
          }
          case 42: {
            Options2 = input.ReadString();
            break;
          }
          case 48: {
            IsRepeat = input.ReadInt32();
            break;
          }
          case 61: {
            DelayTime = input.ReadFloat();
            break;
          }
          case 64: {
            Type = input.ReadInt32();
            break;
          }
          case 74: {
            Num1 = input.ReadString();
            break;
          }
          case 82: {
            Num2 = input.ReadString();
            break;
          }
          case 90: {
            Num3 = input.ReadString();
            break;
          }
          case 98: {
            Num4 = input.ReadString();
            break;
          }
          case 106: {
            Num5 = input.ReadString();
            break;
          }
          case 114: {
            Num6 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Module_Level_GameStart_Data : pb::IMessage<Module_Level_GameStart_Data> {
    private static readonly pb::MessageParser<Module_Level_GameStart_Data> _parser = new pb::MessageParser<Module_Level_GameStart_Data>(() => new Module_Level_GameStart_Data());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Module_Level_GameStart_Data> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ConfigData.SceneScriptConfigReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Module_Level_GameStart_Data() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Module_Level_GameStart_Data(Module_Level_GameStart_Data other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Module_Level_GameStart_Data Clone() {
      return new Module_Level_GameStart_Data(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ConfigData.Module_Level_GameStart> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::ConfigData.Module_Level_GameStart.Parser);
    private readonly pbc::RepeatedField<global::ConfigData.Module_Level_GameStart> items_ = new pbc::RepeatedField<global::ConfigData.Module_Level_GameStart>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ConfigData.Module_Level_GameStart> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Module_Level_GameStart_Data);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Module_Level_GameStart_Data other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Module_Level_GameStart_Data other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
